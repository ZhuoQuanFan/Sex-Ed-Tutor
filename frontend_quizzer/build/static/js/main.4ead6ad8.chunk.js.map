{"version":3,"sources":["color-wheel.png","components/settings.js","components/MainContainer/MainContainer.jsx","components/MainContainer/index.js","components/utils.js","components/Scroll/perfect-scrollbar.esm.js","components/Scroll/ReactPerfectScrollbar.jsx","components/Scroll/index.jsx","components/Loader/Loader.jsx","components/Loader/index.js","components/Overlay/Overlay.jsx","components/Overlay/index.js","components/enums.js","components/Status/Status.jsx","components/Avatar/Avatar.jsx","components/Avatar/index.js","components/Message/MessageHeader.jsx","components/Message/MessageFooter.jsx","components/Message/MessageCustomContent.jsx","components/Message/MessageImageContent.jsx","components/Message/MessageHtmlContent.jsx","components/Message/MessageTextContent.jsx","components/Message/Message.jsx","components/Message/index.js","components/MessageGroup/MessageGroupHeader.jsx","components/MessageGroup/MessageGroupFooter.jsx","components/MessageGroup/MessageGroupMessages.jsx","components/MessageGroup/MessageGroup.jsx","components/MessageGroup/index.js","components/MessageSeparator/MessageSeparator.jsx","components/MessageSeparator/index.js","components/MessageList/MessageListContent.jsx","components/MessageList/MessageList.jsx","components/MessageList/index.js","index.less","chatbot.js","ColorWheel.js","components/slider-box.js","icons/eye.svg","icons/duplicate.svg","icons/cross.svg","icons/trash.svg","components/icon-button.js","components/wheel.js","App.js","reportWebVitals.js","index.js"],"names":["prefix","MainContainer","_ref","responsive","children","className","rest","cName","concat","_jsx","classNames","defaultProps","undefined","isChildrenNil","Array","isArray","length","getChildren","types","ret","strTypes","map","t","displayName","name","React","Children","toArray","forEach","item","idx","indexOf","type","_item$props$as","_item$props","_item$props2","is","props","as","typeofIs","fIdx","cloneElement","typeName","tIdx","sIdx","getComponentName","component","componentType","get","element","getComputedStyle","set","obj","key","val","style","div","document","createElement","elMatches","Element","prototype","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","Error","call","remove","parentNode","removeChild","queryChildren","selector","filter","child","cls","thumb","x","rail","consuming","focus","clicking","active","scrolling","scrollingClassTimeout","y","addScrollingClass","i","classList","contains","clearTimeout","add","removeScrollingClass","setTimeout","isAlive","settings","scrollingThreshold","EventElement","this","handlers","prototypeAccessors","isEmpty","configurable","bind","eventName","handler","push","addEventListener","passive","unbind","target","this$1","removeEventListener","unbindAll","Object","keys","every","defineProperties","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","processScrollDiff","axis","diff","useScrollingClass","forceFireReachEvent","disableOnYReachWhenNoScroll","fields","ref","contentHeight","containerHeight","scrollTop","up","down","reach","eventFlag","dispatchEvent","setScrollingClassInstantly","processScrollDiff$1","toInt","parseInt","eventElement","ee","splice","e","once","onceHandler","env","documentElement","navigator","maxTouchPoints","DocumentTouch","msMaxTouchPoints","test","userAgent","updateGeometry","roundedScrollTop","Math","floor","rect","getBoundingClientRect","containerWidth","round","width","height","contentWidth","scrollWidth","scrollHeight","scrollbarXRail","el","appendChild","scrollbarYRail","suppressScrollX","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isRtl","left","isScrollbarXUsingBottom","bottom","scrollbarXBottom","top","scrollbarXTop","yRailOffset","isScrollbarYUsingRight","right","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","scrollbarX","railBorderXWidth","scrollbarY","railBorderYWidth","updateCss","thumbSize","minScrollbarLength","max","maxScrollbarLength","min","bindMouseScrollHandler","pageY","startingScrollTop","startingMousePageY","scrollBy","mouseMoveHandler","touches","stopPropagation","preventDefault","mouseUpHandler","event","ownerDocument","bindMoves","touchMode","direction","pageYOffset","pageX","pageXOffset","keyboard","isDefaultPrevented","defaultPrevented","activeElement","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","altKey","shiftKey","wheelPropagation","shouldPreventDefault","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","getDeltaFromEvent","querySelector","cursor","overflowY","match","maxScrollTop","clientHeight","overflowX","maxScrollLeft","clientWidth","shouldBeConsumedByChild","shouldPrevent","useBothWheelAxes","wheelSpeed","isTop","isBottom","offsetHeight","isLeft","isRight","offsetWidth","abs","ctrlKey","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","getTouch","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","Date","getTime","clearInterval","currentOffset","currentTime","timeGap","cancelable","ceil","magnitudeX","magnitudeY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","nodeName","blur","isNegativeScroll","result","originalScrollLeft","setAttribute","railXStyle","isNaN","borderLeftWidth","borderRightWidth","display","marginLeft","marginRight","railYStyle","styles","paddingLeft","paddingRight","outerWidth","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","update","destroy","removePsClasses","split","join","handlerNameByEvent","freeze","ScrollBar","Component","constructor","super","handleRef","_handlerByEvent","componentDidMount","option","console","warn","_ps","_container","options","_updateEventHook","_updateClassName","componentDidUpdate","prevProps","updateScroll","componentWillUnmount","value","arguments","callback","prevCallback","prevHandler","psClassNames","onSync","containerRef","render","onScrollY","onScrollX","onScrollUp","onScrollDown","onScrollLeft","onScrollRight","onYReachStart","onYReachEnd","onXReachStart","onXReachEnd","remainProps","Comp","ps","Scrollbar","Loader","variant","textClass","count","role","title","Overlay","grayscale","blurClass","grayscaleClass","StatusEnum","SizeEnum","Status","status","size","selected","bullet","named","_jsxs","AvatarInner","src","sizeClass","avatarRef","useRef","useImperativeHandle","current","_Fragment","alt","Avatar","forwardRef","propTypes","PropTypes","node","string","oneOf","bool","MessageHeader","sender","sentTime","MessageFooter","MessageCustomContent","MessageImageContent","MessageHtmlContent","html","dangerouslySetInnerHTML","__html","MessageTextContent","text","content","Message","_ref2","_ref3","model","message","position","modelType","payload","modelPayload","avatarSpacer","avatarPosition","argPayload","avatar","header","footer","htmlContent","textContent","imageContent","customContent","directionClass","avatarPositionClass","classPrefix","positionClass","ariaLabel","childContent","messageContent","messageType","payloadFromModel","payloadName","Header","HtmlContent","TextContent","ImageContent","CustomContent","Footer","MessageGroupHeader","MessageGroupFooter","MessageGroupMessages","MessageGroup","messages","Messages","MessageSeparator","Tag","MessageListContent","MessageListInner","handleResize","lastClientHeight","scrollToEnd","scrollBehavior","scrollRef","handleContainerResize","resizeTicking","requestAnimationFrame","list","preventScrollTop","isSticked","handleScroll","scrollTicking","noScroll","getLastMessageOrGroup","lastElement","lastMessageInGroup","scrollPointRef","createRef","resizeObserver","getSnapshotBeforeUpdate","topHeight","sticky","lastMessageOrGroup","autoScrollToBottomOnMount","ResizeObserver","observe","prevState","snapshot","autoScrollToBottom","sHeight","disconnect","scrollPoint","parentRect","scrollOffset","behavior","typingIndicator","loading","loadingMore","loadingMorePosition","overscrollBehaviorY","overflowAnchor","touchAction","MessageListFunc","msgListRef","scrollToBottom","MessageList","allowedTypes","propName","componentName","allowedTypesAsStrings","forbidden","find","trim","_item$props3","_item$props4","allowedNames","errMessage","func","Content","CozeChatComponent","ColorWheel","_panResponder","PanResponder","create","onStartShouldSetPanResponderCapture","nativeEvent","outBounds","updateColor","setState","panHandlerReady","state","pan","setValue","onStartShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","gestureState","resetPanHandler","Animated","dx","dy","listener","onMoveShouldSetPanResponder","onPanResponderRelease","flattenOffset","radius","calcPolar","forceUpdate","deg","currentColor","colorsys","hsv2Hex","h","s","v","onColorChange","color","hex2Hsv","calcCartesian","animatedUpdate","spring","toValue","start","offset","initialColor","ValueXY","onLayout","measureOffset","self","measureInWindow","Dimensions","absX","moveX","moveY","atan2","PI","sqrt","setOffset","_value","r","rad","cos","sin","thumbStyle","circle","borderRadius","backgroundColor","opacity","panHandlers","View","coverResponder","Image","img","source","require","getLayout","precision","StyleSheet","flex","alignItems","justifyContent","alignSelf","borderWidth","borderColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","sliderThumbStyles","css","_templateObject","_taggedTemplateLiteral","sliderTrackStyles","_templateObject2","SliderText","styled","_templateObject3","Label","_templateObject4","Value","_templateObject5","SliderRow","_templateObject6","SliderInput","input","_templateObject7","SliderBox","sliderValue","sliderOnChange","label","step","onChange","button","isDisabled","IconButton","wheelRadius","colorCircleSize","colorSettinsOpen","isHidden","colorIsHighlighted","secColorSettinsOpen","hasChanged","_templateObject8","_templateObject9","_templateObject10","Wheel","md","MarkdownIt","image_server","store","message_list","isImage","palette_url","gui_url","tutor_message","user_message","post_id","explanation","cloze_test","imgs","correct_answer","correct_answers","user_id","multiple_choices","mention_ui_elements","wiki","chatbot_list","async","updateMessage","flag","chat","getState","old_list","pop","updateUiImage","ui_images","uiImage","log","connectServer","http","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","http_response","JSON","parse","responseText","data","replaceAll","getElementById","innerHTML","post_title","post_body","disabled","send","encodeURIComponent","stringify","send2webui","image","change_color_flag","new_gui_url","updateUI","success","color_p","color_count","colors","toString","proportion","toFixed","hamrony_p","color_harmony","App","setChat","updateChat","useGlobalState","setUiImage","cur_message","runflowtest","flowtest","question","es","EventSource","onmessage","close","visible","setVisible","useState","margin","id","float","padding","borderStyle","index","onClick","hint","answer_cluster","correct","total","question_id","isGpt","fontSize","placeholder","autoFocus","rows","onKeyDown","keyCode","Viewer","onClose","images","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":";8IAAA,OAAe,cAA0B,yC,8HCAzC,MAAMA,EAAS,K,WCKR,MAAMC,EAAgBC,IAAmD,IAAlD,WAAEC,EAAU,SAAEC,EAAQ,UAAEC,KAAcC,GAAMJ,EACxE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,mBAEvB,OACES,cAAA,UACMH,EACJD,UAAWK,IACTH,EACA,CAAE,CAAC,GAADC,OAAID,EAAK,iBAAiBJ,GAC5BE,GACAD,SAEDA,KAgBPH,EAAcU,aAAe,CAC3BP,cAAUQ,EACVT,YAAY,GAGCF,ICpCAA,EDoCAA,E,gBEpCR,MAOMY,EAAiBT,GACf,OAAbA,QACaQ,IAAbR,GACCU,MAAMC,QAAQX,IAAiC,IAApBA,EAASY,OAQ1BC,EAAcA,CAACb,EAAUc,KACpC,MAAMC,EAAM,GACNC,EAAWF,EAAMG,KAAKC,GAAMA,EAAEC,aAAeD,EAAEE,OAgCrD,OA9BAC,IAAMC,SAASC,QAAQvB,GAAUwB,SAASC,IACxC,MAAMC,EAAMZ,EAAMa,QAAQF,EAAKG,MAC/B,IAAa,IAATF,EACFX,EAAIW,GAAOD,MACN,CAAC,IAADI,EAAAC,EAAAC,EACL,MAAMC,EAAoB,QAAlBH,EAAO,OAAJJ,QAAI,IAAJA,GAAW,QAAPK,EAAJL,EAAMQ,aAAK,IAAAH,OAAP,EAAJA,EAAaI,UAAE,IAAAL,IAAQ,OAAJJ,QAAI,IAAJA,GAAW,QAAPM,EAAJN,EAAMQ,aAAK,IAAAF,OAAP,EAAJA,EAAaC,GACrCG,SAAkBH,EACxB,GAAiB,aAAbG,EAAyB,CAE3B,MAAMC,EAAOtB,EAAMa,QAAQK,IACb,IAAVI,IACFrB,EAAIqB,GAAQf,IAAMgB,aAAaZ,EAAM,IAAKA,EAAKQ,MAAOC,GAAI,aAEvD,GAAiB,WAAbC,EAAuB,CAGhC,MAAMG,EAAWN,EAAGZ,MAAQY,EAAGb,YACzBoB,EAAOvB,EAASW,QAAQW,IAChB,IAAVC,IACFxB,EAAIwB,GAAQlB,IAAMgB,aAAaZ,EAAM,IAAKA,EAAKQ,MAAOC,GAAI,aAEvD,GAAiB,WAAbC,EAAuB,CAChC,MAAMK,EAAOxB,EAASW,QAAQK,IAChB,IAAVQ,IACFzB,EAAIyB,GAAQf,QAMbV,GAGI0B,EAAoBC,IAC/B,GAAyB,kBAAdA,EACT,OAAOA,EAGT,GAAI,SAAUA,EAAW,CACvB,MAAMC,SAAuBD,EAAUd,KAEvC,GAAsB,aAAlBe,GAAkD,WAAlBA,EAA4B,CAC9D,GAAI,gBAAiBD,EAAUd,KAC7B,OAAOc,EAAUd,KAAKT,YAGxB,GAAI,SAAUuB,EAAUd,KACtB,OAAOc,EAAUd,KAAKR,UAEnB,GAAsB,WAAlBuB,EACT,OAAOD,EAAUd,KAGnB,MAAO,YAGT,MAAO,aC1ET,SAASgB,EAAIC,GACX,OAAOC,iBAAiBD,GAG1B,SAASE,EAAIF,EAASG,GACpB,IAAK,IAAIC,KAAOD,EAAK,CACnB,IAAIE,EAAMF,EAAIC,GACK,kBAARC,IACTA,GAAY,MAEdL,EAAQM,MAAMF,GAAOC,EAEvB,OAAOL,EAGT,SAASO,EAAInD,GACX,IAAImD,EAAMC,SAASC,cAAc,OAEjC,OADAF,EAAInD,UAAYA,EACTmD,EAGT,IAAIG,EACiB,qBAAZC,UACNA,QAAQC,UAAUC,SACjBF,QAAQC,UAAUE,uBAClBH,QAAQC,UAAUG,oBAClBJ,QAAQC,UAAUI,mBAEtB,SAASH,EAAQb,EAASiB,GACxB,IAAKP,EACH,MAAM,IAAIQ,MAAM,wCAGlB,OAAOR,EAAUS,KAAKnB,EAASiB,GAGjC,SAASG,EAAOpB,GACVA,EAAQoB,OACVpB,EAAQoB,SAEJpB,EAAQqB,YACVrB,EAAQqB,WAAWC,YAAYtB,GAKrC,SAASuB,EAAcvB,EAASwB,GAC9B,OAAO3D,MAAM+C,UAAUa,OAAON,KAAKnB,EAAQ7C,UAAU,SAAUuE,GAC7D,OAAOb,EAAQa,EAAOF,MAI1B,IAAIG,EACI,KADJA,EAEG,UAFHA,EAGO,CACPC,MAAO,SAAUC,GACf,MAAO,aAAeA,GAExBC,KAAM,SAAUD,GACd,MAAO,YAAcA,GAEvBE,UAAW,sBAVXJ,EAYK,CACLK,MAAO,YACPC,SAAU,eACVC,OAAQ,SAAUL,GAChB,MAAO,cAAgBA,GAEzBM,UAAW,SAAUN,GACnB,MAAO,iBAAmBA,IAQ5BO,EAAwB,CAAEP,EAAG,KAAMQ,EAAG,MAE1C,SAASC,EAAkBC,EAAGV,GAC5B,IAAIW,EAAYD,EAAEvC,QAAQwC,UACtBpF,EAAYuE,EAAUQ,UAAUN,GAEhCW,EAAUC,SAASrF,GACrBsF,aAAaN,EAAsBP,IAEnCW,EAAUG,IAAIvF,GAIlB,SAASwF,EAAqBL,EAAGV,GAC/BO,EAAsBP,GAAKgB,YAAW,WACpC,OAAON,EAAEO,SAAWP,EAAEvC,QAAQwC,UAAUpB,OAAOO,EAAUQ,UAAUN,MAClEU,EAAEQ,SAASC,oBAQhB,IAAIC,EAAe,SAAsBjD,GACvCkD,KAAKlD,QAAUA,EACfkD,KAAKC,SAAW,IAGdC,EAAqB,CAAEC,QAAS,CAAEC,cAAc,IAEpDL,EAAarC,UAAU2C,KAAO,SAAcC,EAAWC,GACb,qBAA7BP,KAAKC,SAASK,KACvBN,KAAKC,SAASK,GAAa,IAE7BN,KAAKC,SAASK,GAAWE,KAAKD,IAGG,IADtB,CAAC,aAAc,QAAS,aAC1B3E,QAAQ0E,GACfN,KAAKlD,QAAQ2D,iBAAiBH,EAAWC,EAAS,CAAEG,SAAS,IAE7DV,KAAKlD,QAAQ2D,iBAAiBH,EAAWC,GAAS,IAItDR,EAAarC,UAAUiD,OAAS,SAAgBL,EAAWM,GACzD,IAAIC,EAASb,KAEbA,KAAKC,SAASK,GAAaN,KAAKC,SAASK,GAAW/B,QAAO,SACzDgC,GAEA,SAAIK,GAAUL,IAAYK,KAG1BC,EAAO/D,QAAQgE,oBAAoBR,EAAWC,GAAS,IAChD,OAIXR,EAAarC,UAAUqD,UAAY,WACjC,IAAK,IAAI1F,KAAQ2E,KAAKC,SACpBD,KAAKW,OAAOtF,IAIhB6E,EAAmBC,QAAQtD,IAAM,WAC/B,IAAIgE,EAASb,KAEb,OAAOgB,OAAOC,KAAKjB,KAAKC,UAAUiB,OAAM,SAAUhE,GAChD,OAAuC,IAAhC2D,EAAOZ,SAAS/C,GAAKrC,WAIhCmG,OAAOG,iBAAiBpB,EAAarC,UAAWwC,GAEhD,IAAIkB,EAAe,WACjBpB,KAAKqB,cAAgB,IA4CvB,SAASC,EAAYjG,GACnB,GAAkC,oBAAvBkG,OAAOC,YAChB,OAAO,IAAIA,YAAYnG,GAEvB,IAAIoG,EAAMnE,SAASgE,YAAY,eAE/B,OADAG,EAAIC,gBAAgBrG,GAAM,GAAO,OAAOZ,GACjCgH,EAIX,SAASE,EACPtC,EACAuC,EACAC,EACAC,EACAC,EACAC,GAKA,IAAIC,EACJ,QAJ0B,IAAtBH,IAA8BA,GAAoB,QAC1B,IAAxBC,IAAgCA,GAAsB,GAG7C,QAATH,EACFK,EAAS,CACP,gBACA,kBACA,YACA,IACA,KACA,YAEG,IAAa,SAATL,EAUT,MAAM,IAAI5D,MAAM,oCAThBiE,EAAS,CACP,eACA,iBACA,aACA,IACA,OACA,UAgBN,SACE5C,EACAwC,EACAK,EACAJ,EACAC,EACAC,GAEA,IAAIG,EAAgBD,EAAI,GACpBE,EAAkBF,EAAI,GACtBG,EAAYH,EAAI,GAChB/C,EAAI+C,EAAI,GACRI,EAAKJ,EAAI,GACTK,EAAOL,EAAI,QACW,IAAtBJ,IAA8BA,GAAoB,QAC1B,IAAxBC,IAAgCA,GAAsB,GAE1D,IAAIjF,EAAUuC,EAAEvC,QAGhBuC,EAAEmD,MAAMrD,GAAK,KAEb,MAAMsD,GAC4B,IAAhCT,GACI3C,EAAE8C,KAAmB9C,EAAE+C,GAIzBK,GAAa3F,EAAQuF,GAAa,IACpChD,EAAEmD,MAAMrD,GAAK,SAKbsD,GACA3F,EAAQuF,GAAahD,EAAE8C,GAAiB9C,EAAE+C,GAAmB,IAE7D/C,EAAEmD,MAAMrD,GAAK,OAGX0C,IACF/E,EAAQ4F,cAAcpB,EAAY,aAAenC,IAE7C0C,EAAO,EACT/E,EAAQ4F,cAAcpB,EAAY,aAAegB,IACxCT,EAAO,GAChB/E,EAAQ4F,cAAcpB,EAAY,aAAeiB,IAG/CT,GA5MR,SAAoCzC,EAAGV,GACrCS,EAAkBC,EAAGV,GACrBe,EAAqBL,EAAGV,GA2MpBgE,CAA2BtD,EAAGF,IAI9BE,EAAEmD,MAAMrD,KAAO0C,GAAQE,IACzBjF,EAAQ4F,cAAcpB,EAAY,MAAQnC,EAAI,UAAYE,EAAEmD,MAAMrD,KAjEpEyD,CACEvD,EACAwC,EACAI,EACAH,EACAC,EACAC,GA+DJ,SAASa,EAAMlE,GACb,OAAOmE,SAASnE,EAAG,KAAO,EA3J5ByC,EAAa1D,UAAUqF,aAAe,SAAsBjG,GAC1D,IAAIkG,EAAKhD,KAAKqB,cAAc9C,QAAO,SAAUyE,GAC3C,OAAOA,EAAGlG,UAAYA,KACrB,GAKH,OAJKkG,IACHA,EAAK,IAAIjD,EAAajD,GACtBkD,KAAKqB,cAAcb,KAAKwC,IAEnBA,GAGT5B,EAAa1D,UAAU2C,KAAO,SAAcvD,EAASwD,EAAWC,GAC9DP,KAAK+C,aAAajG,GAASuD,KAAKC,EAAWC,IAG7Ca,EAAa1D,UAAUiD,OAAS,SAAgB7D,EAASwD,EAAWC,GAClE,IAAIyC,EAAKhD,KAAK+C,aAAajG,GAC3BkG,EAAGrC,OAAOL,EAAWC,GAEjByC,EAAG7C,SAELH,KAAKqB,cAAc4B,OAAOjD,KAAKqB,cAAczF,QAAQoH,GAAK,IAI9D5B,EAAa1D,UAAUqD,UAAY,WACjCf,KAAKqB,cAAc5F,SAAQ,SAAUyH,GACnC,OAAOA,EAAEnC,eAEXf,KAAKqB,cAAgB,IAGvBD,EAAa1D,UAAUyF,KAAO,SAAcrG,EAASwD,EAAWC,GAC9D,IAAIyC,EAAKhD,KAAK+C,aAAajG,GACvBsG,EAAc,SAAU3B,GAC1BuB,EAAGrC,OAAOL,EAAW8C,GACrB7C,EAAQkB,IAEVuB,EAAG3C,KAAKC,EAAW8C,IA4IrB,IAAIC,EAEoB,qBAAb/F,UACP,qBAAsBA,SAASgG,gBAAgBlG,MAH/CiG,EAKkB,qBAAX9B,SACN,iBAAkBA,QAChB,mBAAoBA,OAAOgC,WAC1BhC,OAAOgC,UAAUC,eAAiB,GACnCjC,OAAOkC,eAAiBnG,oBAAoBiE,OAAOkC,eATtDJ,EAWqB,qBAAdE,WAA6BA,UAAUG,iBAEzB,qBAAdH,WACP,UAAUI,KAAKJ,WAAaA,UAAUK,WAG1C,SAASC,EAAexE,GACtB,IAAIvC,EAAUuC,EAAEvC,QACZgH,EAAmBC,KAAKC,MAAMlH,EAAQuF,WACtC4B,EAAOnH,EAAQoH,wBAEnB7E,EAAE8E,eAAiBJ,KAAKK,MAAMH,EAAKI,OACnChF,EAAE+C,gBAAkB2B,KAAKK,MAAMH,EAAKK,QACpCjF,EAAEkF,aAAezH,EAAQ0H,YACzBnF,EAAE8C,cAAgBrF,EAAQ2H,aAErB3H,EAAQyC,SAASF,EAAEqF,kBAEtBrG,EAAcvB,EAAS2B,EAAYG,KAAK,MAAMnD,SAAQ,SAAUkJ,GAC9D,OAAOzG,EAAOyG,MAEhB7H,EAAQ8H,YAAYvF,EAAEqF,iBAEnB5H,EAAQyC,SAASF,EAAEwF,kBAEtBxG,EAAcvB,EAAS2B,EAAYG,KAAK,MAAMnD,SAAQ,SAAUkJ,GAC9D,OAAOzG,EAAOyG,MAEhB7H,EAAQ8H,YAAYvF,EAAEwF,kBAIrBxF,EAAEQ,SAASiF,iBACZzF,EAAE8E,eAAiB9E,EAAEQ,SAASkF,oBAAsB1F,EAAEkF,cAEtDlF,EAAE2F,kBAAmB,EACrB3F,EAAE4F,WAAa5F,EAAE8E,eAAiB9E,EAAE6F,iBACpC7F,EAAE8F,WAAa9F,EAAE8E,eAAiB9E,EAAE4F,WACpC5F,EAAE+F,gBAAkBC,EAClBhG,EACAwD,EAAOxD,EAAE4F,WAAa5F,EAAE8E,eAAkB9E,EAAEkF,eAE9ClF,EAAEiG,eAAiBzC,GACfxD,EAAEkG,yBAA2BzI,EAAQ0I,aACpCnG,EAAE4F,WAAa5F,EAAE+F,kBACjB/F,EAAEkF,aAAelF,EAAE8E,kBAGxB9E,EAAE2F,kBAAmB,GAIpB3F,EAAEQ,SAAS4F,iBACZpG,EAAE+C,gBAAkB/C,EAAEQ,SAAS6F,oBAAsBrG,EAAE8C,eAEvD9C,EAAEsG,kBAAmB,EACrBtG,EAAEuG,YAAcvG,EAAE+C,gBAAkB/C,EAAEwG,kBACtCxG,EAAEyG,WAAazG,EAAE+C,gBAAkB/C,EAAEuG,YACrCvG,EAAE0G,iBAAmBV,EACnBhG,EACAwD,EAAOxD,EAAEuG,YAAcvG,EAAE+C,gBAAmB/C,EAAE8C,gBAEhD9C,EAAE2G,cAAgBnD,EACfiB,GAAoBzE,EAAEuG,YAAcvG,EAAE0G,mBACpC1G,EAAE8C,cAAgB9C,EAAE+C,mBAGzB/C,EAAEsG,kBAAmB,EAGnBtG,EAAEiG,gBAAkBjG,EAAE4F,WAAa5F,EAAE+F,kBACvC/F,EAAEiG,eAAiBjG,EAAE4F,WAAa5F,EAAE+F,iBAElC/F,EAAE2G,eAAiB3G,EAAEuG,YAAcvG,EAAE0G,mBACvC1G,EAAE2G,cAAgB3G,EAAEuG,YAAcvG,EAAE0G,kBAiCxC,SAAmBjJ,EAASuC,GAC1B,IAAI4G,EAAc,CAAE5B,MAAOhF,EAAE4F,YACzBnB,EAAmBC,KAAKC,MAAMlH,EAAQuF,WAEtChD,EAAE6G,MACJD,EAAYE,KACV9G,EAAEkG,yBACFzI,EAAQ0I,WACRnG,EAAE8E,eACF9E,EAAEkF,aAEJ0B,EAAYE,KAAOrJ,EAAQ0I,WAEzBnG,EAAE+G,wBACJH,EAAYI,OAAShH,EAAEiH,iBAAmBxC,EAE1CmC,EAAYM,IAAMlH,EAAEmH,cAAgB1C,EAEtC9G,EAAIqC,EAAEqF,eAAgBuB,GAEtB,IAAIQ,EAAc,CAAEF,IAAKzC,EAAkBQ,OAAQjF,EAAEuG,aACjDvG,EAAEqH,uBACArH,EAAE6G,MACJO,EAAYE,MACVtH,EAAEkF,cACDlF,EAAEkG,yBAA2BzI,EAAQ0I,YACtCnG,EAAEuH,gBACFvH,EAAEwH,qBACF,EAEFJ,EAAYE,MAAQtH,EAAEuH,gBAAkB9J,EAAQ0I,WAG9CnG,EAAE6G,MACJO,EAAYN,KACV9G,EAAEkG,yBACFzI,EAAQ0I,WACW,EAAnBnG,EAAE8E,eACF9E,EAAEkF,aACFlF,EAAEyH,eACFzH,EAAEwH,qBAEJJ,EAAYN,KAAO9G,EAAEyH,eAAiBhK,EAAQ0I,WAGlDxI,EAAIqC,EAAEwF,eAAgB4B,GAEtBzJ,EAAIqC,EAAE0H,WAAY,CAChBZ,KAAM9G,EAAEiG,eACRjB,MAAOhF,EAAE+F,gBAAkB/F,EAAE2H,mBAE/BhK,EAAIqC,EAAE4H,WAAY,CAChBV,IAAKlH,EAAE2G,cACP1B,OAAQjF,EAAE0G,iBAAmB1G,EAAE6H,mBAnFjCC,CAAUrK,EAASuC,GAEfA,EAAE2F,iBACJlI,EAAQwC,UAAUG,IAAIhB,EAAUO,OAAO,OAEvClC,EAAQwC,UAAUpB,OAAOO,EAAUO,OAAO,MAC1CK,EAAE+F,gBAAkB,EACpB/F,EAAEiG,eAAiB,EACnBxI,EAAQ0I,YAAyB,IAAZnG,EAAE6G,MAAiB7G,EAAEkF,aAAe,GAEvDlF,EAAEsG,iBACJ7I,EAAQwC,UAAUG,IAAIhB,EAAUO,OAAO,OAEvClC,EAAQwC,UAAUpB,OAAOO,EAAUO,OAAO,MAC1CK,EAAE0G,iBAAmB,EACrB1G,EAAE2G,cAAgB,EAClBlJ,EAAQuF,UAAY,GAIxB,SAASgD,EAAahG,EAAG+H,GAOvB,OANI/H,EAAEQ,SAASwH,qBACbD,EAAYrD,KAAKuD,IAAIF,EAAW/H,EAAEQ,SAASwH,qBAEzChI,EAAEQ,SAAS0H,qBACbH,EAAYrD,KAAKyD,IAAIJ,EAAW/H,EAAEQ,SAAS0H,qBAEtCH,EAyHT,SAASK,EAAuBpI,EAAG6C,GACjC,IAAIE,EAAkBF,EAAI,GACtBC,EAAgBD,EAAI,GACpBwF,EAAQxF,EAAI,GACZ0D,EAAc1D,EAAI,GAClB+E,EAAa/E,EAAI,GACjB6D,EAAmB7D,EAAI,GACvBG,EAAYH,EAAI,GAChB/C,EAAI+C,EAAI,GACR2C,EAAiB3C,EAAI,GAErBpF,EAAUuC,EAAEvC,QAEZ6K,EAAoB,KACpBC,EAAqB,KACrBC,EAAW,KAEf,SAASC,EAAiB5E,GACpBA,EAAE6E,SAAW7E,EAAE6E,QAAQ,KACzB7E,EAAEwE,GAASxE,EAAE6E,QAAQ,GAAGL,OAE1B5K,EAAQuF,GACNsF,EAAoBE,GAAY3E,EAAEwE,GAASE,GAC7CxI,EAAkBC,EAAGF,GACrB0E,EAAexE,GAEf6D,EAAE8E,kBACF9E,EAAE+E,iBAGJ,SAASC,IACPxI,EAAqBL,EAAGF,GACxBE,EAAEwF,GAAgBvF,UAAUpB,OAAOO,EAAUM,UAC7CM,EAAE8I,MAAMxH,OAAOtB,EAAE+I,cAAe,YAAaN,GAG/C,SAASO,EAAUnF,EAAGoF,GACpBX,EAAoB7K,EAAQuF,GACxBiG,GAAapF,EAAE6E,UACjB7E,EAAEwE,GAASxE,EAAE6E,QAAQ,GAAGL,OAE1BE,EAAqB1E,EAAEwE,GACvBG,GACGxI,EAAE8C,GAAiB9C,EAAE+C,KACrB/C,EAAEuG,GAAevG,EAAE0G,IACjBuC,EAKHjJ,EAAE8I,MAAM9H,KAAKhB,EAAE+I,cAAe,YAAaN,IAJ3CzI,EAAE8I,MAAM9H,KAAKhB,EAAE+I,cAAe,YAAaN,GAC3CzI,EAAE8I,MAAMhF,KAAK9D,EAAE+I,cAAe,UAAWF,GACzChF,EAAE+E,kBAKJ5I,EAAEwF,GAAgBvF,UAAUG,IAAIhB,EAAUM,UAE1CmE,EAAE8E,kBAGJ3I,EAAE8I,MAAM9H,KAAKhB,EAAE4H,GAAa,aAAa,SAAU/D,GACjDmF,EAAUnF,MAEZ7D,EAAE8I,MAAM9H,KAAKhB,EAAE4H,GAAa,cAAc,SAAU/D,GAClDmF,EAAUnF,GAAG,MAohBjB,IAiBIjD,EAAW,CACb,aAjqBF,SAAmBZ,GACHA,EAAEvC,QAEhBuC,EAAE8I,MAAM9H,KAAKhB,EAAE4H,WAAY,aAAa,SAAU/D,GAChD,OAAOA,EAAE8E,qBAEX3I,EAAE8I,MAAM9H,KAAKhB,EAAEwF,eAAgB,aAAa,SAAU3B,GACpD,IAIIqF,EAHFrF,EAAEwE,MACFnG,OAAOiH,YACPnJ,EAAEwF,eAAeX,wBAAwBqC,IACblH,EAAE2G,cAAgB,GAAK,EAErD3G,EAAEvC,QAAQuF,WAAakG,EAAYlJ,EAAE+C,gBACrCyB,EAAexE,GAEf6D,EAAE8E,qBAGJ3I,EAAE8I,MAAM9H,KAAKhB,EAAE0H,WAAY,aAAa,SAAU7D,GAChD,OAAOA,EAAE8E,qBAEX3I,EAAE8I,MAAM9H,KAAKhB,EAAEqF,eAAgB,aAAa,SAAUxB,GACpD,IAIIqF,EAHFrF,EAAEuF,MACFlH,OAAOmH,YACPrJ,EAAEqF,eAAeR,wBAAwBiC,KACZ9G,EAAEiG,eAAiB,GAAK,EAEvDjG,EAAEvC,QAAQ0I,YAAc+C,EAAYlJ,EAAE8E,eACtCN,EAAexE,GAEf6D,EAAE8E,sBAkoBJ,aA9nBF,SAAmB3I,GACjBoI,EAAuBpI,EAAG,CACxB,iBACA,eACA,QACA,aACA,aACA,kBACA,aACA,IACA,mBAEFoI,EAAuBpI,EAAG,CACxB,kBACA,gBACA,QACA,cACA,aACA,mBACA,YACA,IACA,oBA0mBFsJ,SApiBF,SAAkBtJ,GAChB,IAAIvC,EAAUuC,EAAEvC,QAsChBuC,EAAE8I,MAAM9H,KAAKhB,EAAE+I,cAAe,WAAW,SAAUlF,GACjD,KACGA,EAAE0F,oBAAsB1F,EAAE0F,sBAC3B1F,EAAE2F,oBAtCGlL,EAAQb,EAAS,WAGjBa,EAAQ0B,EAAE0H,WAAY,WAAapJ,EAAQ0B,EAAE4H,WAAY,WAwChE,CAIA,IArXgBtC,EAqXZmE,EAAgBxL,SAASwL,cACzBxL,SAASwL,cACTzJ,EAAE+I,cAAcU,cACpB,GAAIA,EAAe,CACjB,GAA8B,WAA1BA,EAAcC,QAChBD,EAAgBA,EAAcE,gBAAgBF,mBAG9C,KAAOA,EAAcG,YACnBH,EAAgBA,EAAcG,WAAWH,cAG7C,GA/XFnL,EAFgBgH,EAiYCmE,EA/XL,4BACZnL,EAAQgH,EAAI,6BACZhH,EAAQgH,EAAI,+BACZhH,EAAQgH,EAAI,4BA6XR,OAIJ,IAAIuE,EAAS,EACTC,EAAS,EAEb,OAAQjG,EAAEkG,OACR,KAAK,GAEDF,EADEhG,EAAEmG,SACMhK,EAAEkF,aACHrB,EAAEoG,QACDjK,EAAE8E,gBAEF,GAEZ,MACF,KAAK,GAEDgF,EADEjG,EAAEmG,QACKhK,EAAE8C,cACFe,EAAEoG,OACFjK,EAAE+C,gBAEF,GAEX,MACF,KAAK,GAED8G,EADEhG,EAAEmG,QACKhK,EAAEkF,aACFrB,EAAEoG,OACFjK,EAAE8E,eAEF,GAEX,MACF,KAAK,GAEDgF,EADEjG,EAAEmG,SACMhK,EAAE8C,cACHe,EAAEoG,QACDjK,EAAE+C,iBAEF,GAEZ,MACF,KAAK,GAED+G,EADEjG,EAAEqG,SACKlK,EAAE+C,iBAED/C,EAAE+C,gBAEd,MACF,KAAK,GACH+G,EAAS9J,EAAE+C,gBACX,MACF,KAAK,GACH+G,GAAU9J,EAAE+C,gBACZ,MACF,KAAK,GACH+G,EAAS9J,EAAE8C,cACX,MACF,KAAK,GACHgH,GAAU9J,EAAE8C,cACZ,MACF,QACE,OAGA9C,EAAEQ,SAASiF,iBAA8B,IAAXoE,GAG9B7J,EAAEQ,SAAS4F,iBAA8B,IAAX0D,IAIlCrM,EAAQuF,WAAa8G,EAErBrM,EAAQ0I,YAAc0D,EACtBrF,EAAexE,GAnIjB,SAA8B6J,EAAQC,GACpC,IAAI9G,EAAY0B,KAAKC,MAAMlH,EAAQuF,WACnC,GAAe,IAAX6G,EAAc,CAChB,IAAK7J,EAAEsG,iBACL,OAAO,EAET,GACiB,IAAdtD,GAAmB8G,EAAS,GAC5B9G,GAAahD,EAAE8C,cAAgB9C,EAAE+C,iBAAmB+G,EAAS,EAE9D,OAAQ9J,EAAEQ,SAAS2J,iBAIvB,IAAIhE,EAAa1I,EAAQ0I,WACzB,GAAe,IAAX2D,EAAc,CAChB,IAAK9J,EAAE2F,iBACL,OAAO,EAET,GACkB,IAAfQ,GAAoB0D,EAAS,GAC7B1D,GAAcnG,EAAEkF,aAAelF,EAAE8E,gBAAkB+E,EAAS,EAE7D,OAAQ7J,EAAEQ,SAAS2J,iBAGvB,OAAO,EA2GHC,CAAqBP,EAAQC,IAC/BjG,EAAE+E,uBAqZNyB,MAhZF,SAAerK,GACb,IAAIvC,EAAUuC,EAAEvC,QAsGhB,SAAS6M,EAAkBzG,GACzB,IAAIhB,EAhFN,SAA2BgB,GACzB,IAAIgG,EAAShG,EAAEgG,OACXC,GAAU,EAAIjG,EAAEiG,OAoBpB,MAlBsB,qBAAXD,GAA4C,qBAAXC,IAE1CD,GAAW,EAAIhG,EAAE0G,YAAe,EAChCT,EAASjG,EAAE2G,YAAc,GAGvB3G,EAAE4G,WAA6B,IAAhB5G,EAAE4G,YAEnBZ,GAAU,GACVC,GAAU,IAGRD,IAAWA,GAAUC,IAAWA,IAElCD,EAAS,EACTC,EAASjG,EAAE6G,YAGT7G,EAAEqG,SAEG,EAAEJ,GAASD,GAEb,CAACA,EAAQC,GAsDNa,CAAkB9G,GACxBgG,EAAShH,EAAI,GACbiH,EAASjH,EAAI,GAEjB,IAvDF,SAAiCtB,EAAQsI,EAAQC,GAE/C,IAAK9F,GAAgBvG,EAAQmN,cAAc,gBACzC,OAAO,EAGT,IAAKnN,EAAQyC,SAASqB,GACpB,OAAO,EAKT,IAFA,IAAIsJ,EAAStJ,EAENsJ,GAAUA,IAAWpN,GAAS,CACnC,GAAIoN,EAAO5K,UAAUC,SAASd,EAAYI,WACxC,OAAO,EAGT,IAAIzB,EAAQP,EAAIqN,GAGhB,GAAIf,GAAU/L,EAAM+M,UAAUC,MAAM,iBAAkB,CACpD,IAAIC,EAAeH,EAAOzF,aAAeyF,EAAOI,aAChD,GAAID,EAAe,IAEdH,EAAO7H,UAAY,GAAK8G,EAAS,GACjCe,EAAO7H,UAAYgI,GAAgBlB,EAAS,GAE7C,OAAO,EAKb,GAAID,GAAU9L,EAAMmN,UAAUH,MAAM,iBAAkB,CACpD,IAAII,EAAgBN,EAAO1F,YAAc0F,EAAOO,YAChD,GAAID,EAAgB,IAEfN,EAAO1E,WAAa,GAAK0D,EAAS,GAClCgB,EAAO1E,WAAagF,GAAiBtB,EAAS,GAE/C,OAAO,EAKbgB,EAASA,EAAO/L,WAGlB,OAAO,EAQHuM,CAAwBxH,EAAEtC,OAAQsI,EAAQC,GAA9C,CAIA,IAAIwB,GAAgB,EACftL,EAAEQ,SAAS+K,iBAKLvL,EAAEsG,mBAAqBtG,EAAE2F,kBAG9BmE,EACFrM,EAAQuF,WAAa8G,EAAS9J,EAAEQ,SAASgL,WAEzC/N,EAAQuF,WAAa6G,EAAS7J,EAAEQ,SAASgL,WAE3CF,GAAgB,GACPtL,EAAE2F,mBAAqB3F,EAAEsG,mBAG9BuD,EACFpM,EAAQ0I,YAAc0D,EAAS7J,EAAEQ,SAASgL,WAE1C/N,EAAQ0I,YAAc2D,EAAS9J,EAAEQ,SAASgL,WAE5CF,GAAgB,IAnBhB7N,EAAQuF,WAAa8G,EAAS9J,EAAEQ,SAASgL,WACzC/N,EAAQ0I,YAAc0D,EAAS7J,EAAEQ,SAASgL,YAqB5ChH,EAAexE,IAEfsL,EAAgBA,GAzIlB,SAA8BzB,EAAQC,GACpC,IAAIrF,EAAmBC,KAAKC,MAAMlH,EAAQuF,WACtCyI,EAA8B,IAAtBhO,EAAQuF,UAChB0I,EACFjH,EAAmBhH,EAAQkO,eAAiBlO,EAAQ2H,aAClDwG,EAAgC,IAAvBnO,EAAQ0I,WACjB0F,EACFpO,EAAQ0I,WAAa1I,EAAQqO,cAAgBrO,EAAQ0H,YAWvD,QANIT,KAAKqH,IAAIjC,GAAUpF,KAAKqH,IAAIlC,GAClB4B,GAASC,EAETE,GAAUC,KAGJ7L,EAAEQ,SAAS2J,iBAuHEC,CAAqBP,EAAQC,MACxCjG,EAAEmI,UACtBnI,EAAE8E,kBACF9E,EAAE+E,mBAIwB,qBAAnB1G,OAAO+J,QAChBjM,EAAE8I,MAAM9H,KAAKvD,EAAS,QAAS6M,GACS,qBAAxBpI,OAAOgK,cACvBlM,EAAE8I,MAAM9H,KAAKvD,EAAS,aAAc6M,IA2PtC6B,MAvPF,SAAenM,GACb,GAAKgE,GAAsBA,EAA3B,CAIA,IAAIvG,EAAUuC,EAAEvC,QAoDZ2O,EAAc,GACdC,EAAY,EACZC,EAAQ,GACRC,EAAa,KAoJbvI,GACFhE,EAAE8I,MAAM9H,KAAKvD,EAAS,aAAc+O,GACpCxM,EAAE8I,MAAM9H,KAAKvD,EAAS,YAAagP,GACnCzM,EAAE8I,MAAM9H,KAAKvD,EAAS,WAAYiP,IACzB1I,IACL9B,OAAOyK,cACT3M,EAAE8I,MAAM9H,KAAKvD,EAAS,cAAe+O,GACrCxM,EAAE8I,MAAM9H,KAAKvD,EAAS,cAAegP,GACrCzM,EAAE8I,MAAM9H,KAAKvD,EAAS,YAAaiP,IAC1BxK,OAAO0K,iBAChB5M,EAAE8I,MAAM9H,KAAKvD,EAAS,gBAAiB+O,GACvCxM,EAAE8I,MAAM9H,KAAKvD,EAAS,gBAAiBgP,GACvCzM,EAAE8I,MAAM9H,KAAKvD,EAAS,cAAeiP,KA3KzC,SAASG,EAAeC,EAAaC,GACnCtP,EAAQuF,WAAa+J,EAErBtP,EAAQ0I,YAAc2G,EAEtBtI,EAAexE,GAQjB,SAASgN,EAASnJ,GAChB,OAAIA,EAAEoJ,cACGpJ,EAAEoJ,cAAc,GAGhBpJ,EAIX,SAASqJ,EAAarJ,GACpB,QAAIA,EAAEsJ,aAAiC,QAAlBtJ,EAAEsJ,aAAuC,IAAdtJ,EAAEuJ,cAG9CvJ,EAAEoJ,eAA4C,IAA3BpJ,EAAEoJ,cAAczR,YAIrCqI,EAAEsJ,aACgB,UAAlBtJ,EAAEsJ,aACFtJ,EAAEsJ,cAAgBtJ,EAAEwJ,uBAOxB,SAASb,EAAW3I,GAClB,GAAKqJ,EAAarJ,GAAlB,CAIA,IAAIsI,EAAQa,EAASnJ,GAErBuI,EAAYhD,MAAQ+C,EAAM/C,MAC1BgD,EAAY/D,MAAQ8D,EAAM9D,MAE1BgE,GAAY,IAAIiB,MAAOC,UAEJ,OAAfhB,GACFiB,cAAcjB,IAiDlB,SAASE,EAAU5I,GACjB,GAAIqJ,EAAarJ,GAAI,CACnB,IAAIsI,EAAQa,EAASnJ,GAEjB4J,EAAgB,CAAErE,MAAO+C,EAAM/C,MAAOf,MAAO8D,EAAM9D,OAEnDyE,EAAcW,EAAcrE,MAAQgD,EAAYhD,MAChD2D,EAAcU,EAAcpF,MAAQ+D,EAAY/D,MAEpD,GAtDJ,SAAiC9G,EAAQsI,EAAQC,GAC/C,IAAKrM,EAAQyC,SAASqB,GACpB,OAAO,EAKT,IAFA,IAAIsJ,EAAStJ,EAENsJ,GAAUA,IAAWpN,GAAS,CACnC,GAAIoN,EAAO5K,UAAUC,SAASd,EAAYI,WACxC,OAAO,EAGT,IAAIzB,EAAQP,EAAIqN,GAGhB,GAAIf,GAAU/L,EAAM+M,UAAUC,MAAM,iBAAkB,CACpD,IAAIC,EAAeH,EAAOzF,aAAeyF,EAAOI,aAChD,GAAID,EAAe,IAEdH,EAAO7H,UAAY,GAAK8G,EAAS,GACjCe,EAAO7H,UAAYgI,GAAgBlB,EAAS,GAE7C,OAAO,EAKb,GAAID,GAAU9L,EAAMmN,UAAUH,MAAM,iBAAkB,CACpD,IAAII,EAAgBN,EAAO1F,YAAc0F,EAAOO,YAChD,GAAID,EAAgB,IAEfN,EAAO1E,WAAa,GAAK0D,EAAS,GAClCgB,EAAO1E,WAAagF,GAAiBtB,EAAS,GAE/C,OAAO,EAKbgB,EAASA,EAAO/L,WAGlB,OAAO,EAYDuM,CAAwBxH,EAAEtC,OAAQuL,EAAaC,GACjD,OAGFF,EAAeC,EAAaC,GAC5BX,EAAcqB,EAEd,IAAIC,GAAc,IAAIJ,MAAOC,UAEzBI,EAAUD,EAAcrB,EACxBsB,EAAU,IACZrB,EAAMhN,EAAIwN,EAAca,EACxBrB,EAAMxM,EAAIiN,EAAcY,EACxBtB,EAAYqB,GAIV7J,EAAE+J,YAzKV,SAAuB/D,EAAQC,GAC7B,IAAI9G,EAAY0B,KAAKC,MAAMlH,EAAQuF,WACnC,MAAMmD,EAAazB,KAAKmJ,KAAKpQ,EAAQ0I,YACrC,IAAI2H,EAAapJ,KAAKqH,IAAIlC,GACtBkE,EAAarJ,KAAKqH,IAAIjC,GAE1B,IAAK9J,EAAEQ,SAAS2J,iBACd,OAAO,EAGT,GAAI4D,EAAaD,EAAY,CAG3B,GAAI9N,EAAEQ,SAAS4F,gBACb,OAAO,EAGT,GAAI0D,EAAS,EACX,OAAqB,IAAd9G,EAGT,GAAI8G,EAAS,EACX,OAAO9G,EAAYhD,EAAE8C,cAAgB9C,EAAE+C,qBAEpC,GAAI+K,EAAaC,EAAY,CAGlC,GAAI/N,EAAEQ,SAASiF,gBACb,OAAO,EAET,GAAIoE,EAAS,EACX,OAAsB,IAAf1D,EAGT,GAAI2D,EAAS,EACX,OAAO3D,EAAanG,EAAEkF,aAAelF,EAAE8E,eAI3C,OAAO,EAkIewG,CAAcwB,EAAaC,IAC7ClJ,EAAE+E,kBAIR,SAAS8D,IACH1M,EAAEQ,SAASwN,cACbR,cAAcjB,GACdA,EAAa0B,aAAY,WACnBjO,EAAEkO,cACJV,cAAcjB,GAIXD,EAAMhN,GAAMgN,EAAMxM,EAKnB4E,KAAKqH,IAAIO,EAAMhN,GAAK,KAAQoF,KAAKqH,IAAIO,EAAMxM,GAAK,IAClD0N,cAAcjB,IAIhBM,EAAyB,GAAVP,EAAMhN,EAAkB,GAAVgN,EAAMxM,GAEnCwM,EAAMhN,GAAK,GACXgN,EAAMxM,GAAK,IAZT0N,cAAcjB,KAaf,QA8CL4B,EAAmB,SAA0B1Q,EAAS2Q,GACxD,IAAI5M,EAASb,KAOb,QANqB,IAAjByN,IAAyBA,EAAe,IAErB,kBAAZ3Q,IACTA,EAAUQ,SAAS2M,cAAcnN,KAG9BA,IAAYA,EAAQ4Q,SACvB,MAAM,IAAI1P,MAAM,0DAQlB,IAAK,IAAId,KALT8C,KAAKlD,QAAUA,EAEfA,EAAQwC,UAAUG,IAAIhB,GAEtBuB,KAAKH,SAxCE,CACLI,SAAU,CAAC,aAAc,aAAc,WAAY,QAAS,SAC5DsH,mBAAoB,KACpBF,mBAAoB,KACpBvH,mBAAoB,IACpBiF,oBAAqB,EACrBW,oBAAqB,EACrBZ,iBAAiB,EACjBW,iBAAiB,EACjB4H,aAAa,EACbzC,kBAAkB,EAClBpB,kBAAkB,EAClBqB,WAAY,GA6BE4C,EACdzN,KAAKH,SAAS3C,GAAOuQ,EAAavQ,GAGpC8C,KAAKmE,eAAiB,KACtBnE,KAAKoC,gBAAkB,KACvBpC,KAAKuE,aAAe,KACpBvE,KAAKmC,cAAgB,KAErB,IAAIrD,EAAQ,WACV,OAAOhC,EAAQwC,UAAUG,IAAIhB,EAAUK,QAErC6O,EAAO,WACT,OAAO7Q,EAAQwC,UAAUpB,OAAOO,EAAUK,QAG5CkB,KAAKkG,MAAmC,QAA3BrJ,EAAIC,GAASyL,WACP,IAAfvI,KAAKkG,OACPpJ,EAAQwC,UAAUG,IAAIhB,GAExBuB,KAAK4N,iBAAoB,WACvB,IACIC,EADAC,EAAqBhR,EAAQ0I,WAKjC,OAHA1I,EAAQ0I,YAAc,EACtBqI,EAAS/Q,EAAQ0I,WAAa,EAC9B1I,EAAQ0I,WAAasI,EACdD,EANgB,GAQzB7N,KAAKuF,yBAA2BvF,KAAK4N,iBACjC9Q,EAAQ0H,YAAc1H,EAAQ2N,YAC9B,EACJzK,KAAKmI,MAAQ,IAAI/G,EACjBpB,KAAKoI,cAAgBtL,EAAQsL,eAAiB9K,SAE9C0C,KAAK0E,eAAiBrH,EAAIoB,EAAYG,KAAK,MAC3C9B,EAAQ8H,YAAY5E,KAAK0E,gBACzB1E,KAAK+G,WAAa1J,EAAIoB,EAAYC,MAAM,MACxCsB,KAAK0E,eAAeE,YAAY5E,KAAK+G,YACrC/G,KAAK+G,WAAWgH,aAAa,WAAY,GACzC/N,KAAKmI,MAAM9H,KAAKL,KAAK+G,WAAY,QAASjI,GAC1CkB,KAAKmI,MAAM9H,KAAKL,KAAK+G,WAAY,OAAQ4G,GACzC3N,KAAKgF,iBAAmB,KACxBhF,KAAKoF,gBAAkB,KACvBpF,KAAKsF,eAAiB,KACtB,IAAI0I,EAAanR,EAAImD,KAAK0E,gBAC1B1E,KAAKsG,iBAAmBxD,SAASkL,EAAW3H,OAAQ,IAChD4H,MAAMjO,KAAKsG,mBACbtG,KAAKoG,yBAA0B,EAC/BpG,KAAKwG,cAAgB3D,EAAMmL,EAAWzH,MAEtCvG,KAAKoG,yBAA0B,EAEjCpG,KAAKgH,iBACHnE,EAAMmL,EAAWE,iBAAmBrL,EAAMmL,EAAWG,kBAEvDnR,EAAIgD,KAAK0E,eAAgB,CAAE0J,QAAS,UACpCpO,KAAKkF,iBACHrC,EAAMmL,EAAWK,YAAcxL,EAAMmL,EAAWM,aAClDtR,EAAIgD,KAAK0E,eAAgB,CAAE0J,QAAS,KACpCpO,KAAKiF,WAAa,KAClBjF,KAAKmF,WAAa,KAElBnF,KAAK6E,eAAiBxH,EAAIoB,EAAYG,KAAK,MAC3C9B,EAAQ8H,YAAY5E,KAAK6E,gBACzB7E,KAAKiH,WAAa5J,EAAIoB,EAAYC,MAAM,MACxCsB,KAAK6E,eAAeD,YAAY5E,KAAKiH,YACrCjH,KAAKiH,WAAW8G,aAAa,WAAY,GACzC/N,KAAKmI,MAAM9H,KAAKL,KAAKiH,WAAY,QAASnI,GAC1CkB,KAAKmI,MAAM9H,KAAKL,KAAKiH,WAAY,OAAQ0G,GACzC3N,KAAK2F,iBAAmB,KACxB3F,KAAK+F,iBAAmB,KACxB/F,KAAKgG,cAAgB,KACrB,IAAIuI,EAAa1R,EAAImD,KAAK6E,gBAC1B7E,KAAK4G,gBAAkB9D,SAASyL,EAAW5H,MAAO,IAC9CsH,MAAMjO,KAAK4G,kBACb5G,KAAK0G,wBAAyB,EAC9B1G,KAAK8G,eAAiBjE,EAAM0L,EAAWpI,OAEvCnG,KAAK0G,wBAAyB,EAEhC1G,KAAK6G,qBAAuB7G,KAAKkG,MAn8BnC,SAAoBpJ,GAClB,IAAI0R,EAAS3R,EAAIC,GACjB,OACE+F,EAAM2L,EAAOnK,OACbxB,EAAM2L,EAAOC,aACb5L,EAAM2L,EAAOE,cACb7L,EAAM2L,EAAON,iBACbrL,EAAM2L,EAAOL,kBA47B0BQ,CAAW3O,KAAKiH,YAAc,KACvEjH,KAAKkH,iBACHrE,EAAM0L,EAAWK,gBAAkB/L,EAAM0L,EAAWM,mBACtD7R,EAAIgD,KAAK6E,eAAgB,CAAEuJ,QAAS,UACpCpO,KAAK6F,kBACHhD,EAAM0L,EAAWO,WAAajM,EAAM0L,EAAWQ,cACjD/R,EAAIgD,KAAK6E,eAAgB,CAAEuJ,QAAS,KACpCpO,KAAK4F,YAAc,KACnB5F,KAAK8F,WAAa,KAElB9F,KAAKwC,MAAQ,CACX7D,EACE7B,EAAQ0I,YAAc,EAClB,QACA1I,EAAQ0I,YAAcxF,KAAKuE,aAAevE,KAAKmE,eAC/C,MACA,KACNhF,EACErC,EAAQuF,WAAa,EACjB,QACAvF,EAAQuF,WAAarC,KAAKmC,cAAgBnC,KAAKoC,gBAC/C,MACA,MAGRpC,KAAKJ,SAAU,EAEfI,KAAKH,SAASI,SAASxE,SAAQ,SAAUuT,GACvC,OAAO/O,EAAS+O,GAAanO,MAG/Bb,KAAKiP,cAAgBlL,KAAKC,MAAMlH,EAAQuF,WACxCrC,KAAKkP,eAAiBpS,EAAQ0I,WAC9BxF,KAAKmI,MAAM9H,KAAKL,KAAKlD,QAAS,UAAU,SAAUoG,GAChD,OAAOrC,EAAOsO,SAASjM,MAEzBW,EAAe7D,OAGjBwN,EAAiB9P,UAAU0R,OAAS,SAClCpN,GAEKhC,KAAKJ,UAKVI,KAAKuF,yBAA2BvF,KAAK4N,iBACjC5N,KAAKlD,QAAQ0H,YAAcxE,KAAKlD,QAAQ2N,YACxC,EAGJzN,EAAIgD,KAAK0E,eAAgB,CAAE0J,QAAS,UACpCpR,EAAIgD,KAAK6E,eAAgB,CAAEuJ,QAAS,UACpCpO,KAAKkF,iBACHrC,EAAMhG,EAAImD,KAAK0E,gBAAgB2J,YAC/BxL,EAAMhG,EAAImD,KAAK0E,gBAAgB4J,aACjCtO,KAAK6F,kBACHhD,EAAMhG,EAAImD,KAAK6E,gBAAgBiK,WAC/BjM,EAAMhG,EAAImD,KAAK6E,gBAAgBkK,cAGjC/R,EAAIgD,KAAK0E,eAAgB,CAAE0J,QAAS,SACpCpR,EAAIgD,KAAK6E,eAAgB,CAAEuJ,QAAS,SAEpCvK,EAAe7D,MAEf2B,EAAkB3B,KAAM,MAAO,GAAG,GAAO,EAAMgC,GAC/CL,EAAkB3B,KAAM,OAAQ,GAAG,GAAO,EAAMgC,GAEhDhF,EAAIgD,KAAK0E,eAAgB,CAAE0J,QAAS,KACpCpR,EAAIgD,KAAK6E,eAAgB,CAAEuJ,QAAS,OAGtCZ,EAAiB9P,UAAUyR,SAAW,SAAkBjM,GACjDlD,KAAKJ,UAIViE,EAAe7D,MACf2B,EAAkB3B,KAAM,MAAOA,KAAKlD,QAAQuF,UAAYrC,KAAKiP,eAC7DtN,EACE3B,KACA,OACAA,KAAKlD,QAAQ0I,WAAaxF,KAAKkP,gBAGjClP,KAAKiP,cAAgBlL,KAAKC,MAAMhE,KAAKlD,QAAQuF,WAC7CrC,KAAKkP,eAAiBlP,KAAKlD,QAAQ0I,aAGrCgI,EAAiB9P,UAAU2R,QAAU,WAC9BrP,KAAKJ,UAIVI,KAAKmI,MAAMpH,YACX7C,EAAO8B,KAAK+G,YACZ7I,EAAO8B,KAAKiH,YACZ/I,EAAO8B,KAAK0E,gBACZxG,EAAO8B,KAAK6E,gBACZ7E,KAAKsP,kBAGLtP,KAAKlD,QAAU,KACfkD,KAAK+G,WAAa,KAClB/G,KAAKiH,WAAa,KAClBjH,KAAK0E,eAAiB,KACtB1E,KAAK6E,eAAiB,KAEtB7E,KAAKJ,SAAU,IAGjB4N,EAAiB9P,UAAU4R,gBAAkB,WAC3CtP,KAAKlD,QAAQ5C,UAAY8F,KAAKlD,QAAQ5C,UACnCqV,MAAM,KACNhR,QAAO,SAAUlD,GAChB,OAAQA,EAAK+O,MAAM,oBAEpBoF,KAAK,MAGKhC,QCn4Cf,MAAMiC,EAAqB,CACzB,cAAe,YACf,cAAe,YACf,eAAgB,aAChB,iBAAkB,eAClB,iBAAkB,eAClB,kBAAmB,gBACnB,mBAAoB,gBACpB,iBAAkB,cAClB,mBAAoB,gBACpB,iBAAkB,eAEpBzO,OAAO0O,OAAOD,GAEC,MAAME,UAAkBC,YACrCC,YAAY3T,GACV4T,MAAM5T,GAEN8D,KAAK+P,UAAY/P,KAAK+P,UAAU1P,KAAKL,MACrCA,KAAKgQ,gBAAkB,GAGzBC,oBACMjQ,KAAK9D,MAAMgU,QACbC,QAAQC,KACN,wFAIJpQ,KAAKqQ,IAAM,IAAI7C,EACbxN,KAAKsQ,WACLtQ,KAAK9D,MAAMqU,SAAWvQ,KAAK9D,MAAMgU,QAGnClQ,KAAKwQ,mBACLxQ,KAAKyQ,mBAGPC,mBAAmBC,GACjB3Q,KAAKwQ,iBAAiBG,GAEtB3Q,KAAK4Q,eAEDD,EAAUzW,YAAc8F,KAAK9D,MAAMhC,WACrC8F,KAAKyQ,mBAITI,uBAEE7P,OAAOC,KAAKjB,KAAKgQ,iBAAiBvU,SAASyB,IACzC,MAAM4T,EAAQ9Q,KAAKgQ,gBAAgB9S,GAE/B4T,GACF9Q,KAAKsQ,WAAWxP,oBAAoB5D,EAAK4T,GAAO,MAGpD9Q,KAAKgQ,gBAAkB,GACvBhQ,KAAKqQ,IAAIhB,UACTrP,KAAKqQ,IAAM,KAGbG,mBAAkC,IAAjBG,EAASI,UAAAlW,OAAA,QAAAJ,IAAAsW,UAAA,GAAAA,UAAA,GAAG,GAE3B/P,OAAOC,KAAKwO,GAAoBhU,SAASyB,IACvC,MAAM8T,EAAWhR,KAAK9D,MAAMuT,EAAmBvS,IACzC+T,EAAeN,EAAUlB,EAAmBvS,IAClD,GAAI8T,IAAaC,EAAc,CAC7B,GAAIA,EAAc,CAChB,MAAMC,EAAclR,KAAKgQ,gBAAgB9S,GACzC8C,KAAKsQ,WAAWxP,oBAAoB5D,EAAKgU,GAAa,GACtDlR,KAAKgQ,gBAAgB9S,GAAO,KAE9B,GAAI8T,EAAU,CACZ,MAAMzQ,EAAUA,IAAMyQ,EAAShR,KAAKsQ,YACpCtQ,KAAKsQ,WAAW7P,iBAAiBvD,EAAKqD,GAAS,GAC/CP,KAAKgQ,gBAAgB9S,GAAOqD,OAMpCkQ,mBACE,MAAM,UAAEvW,GAAc8F,KAAK9D,MAErBiV,EAAenR,KAAKsQ,WAAWpW,UAClCqV,MAAM,KACNhR,QAAQlD,GAASA,EAAK+O,MAAM,mBAC5BoF,KAAK,KAEJxP,KAAKsQ,aACPtQ,KAAKsQ,WAAWpW,UAAS,sBAAAG,OACvBH,EAAS,IAAAG,OAAOH,GAAc,IAAEG,OAC/B8W,EAAY,IAAA9W,OAAO8W,GAAiB,KAI3CP,eACE5Q,KAAK9D,MAAMkV,OAAOpR,KAAKqQ,KAGzBN,UAAU7N,GACRlC,KAAKsQ,WAAapO,EAClBlC,KAAK9D,MAAMmV,aAAanP,GAG1BoP,SACE,MAAM,UACJpX,EAAS,MACTkD,EAAK,OACL8S,EAAM,QACNK,EAAO,aACPc,EAAY,UACZE,EAAS,UACTC,EAAS,WACTC,EAAU,aACVC,EAAY,aACZC,EAAY,cACZC,EAAa,cACbC,EAAa,YACbC,EAAW,cACXC,EAAa,YACbC,EAAW,UACXrV,EAAS,OACTyU,EAAM,SACNnX,KACGgY,GACDjS,KAAK9D,MACHgW,EAAOvV,EAEb,OACErC,cAAC4X,EAAI,CAAC9U,MAAOA,EAAO8E,IAAKlC,KAAK+P,aAAekC,EAAWhY,SACrDA,KAMT0V,EAAUnV,aAAe,CACvBN,UAAW,GACXkD,WAAO3C,EACPyV,YAAQzV,EACR8V,aAAS9V,EACT4W,aAAcA,OACdE,eAAW9W,EACX+W,eAAW/W,EACXgX,gBAAYhX,EACZiX,kBAAcjX,EACdkX,kBAAclX,EACdmX,mBAAenX,EACfoX,mBAAepX,EACfqX,iBAAarX,EACbsX,mBAAetX,EACfuX,iBAAavX,EACb2W,OAASe,GAAOA,EAAG/C,SACnBzS,UAAW,OC9JEyV,QCGR,MAAMC,EAAStY,IAAgD,IAA/C,UAAEG,EAAS,QAAEoY,EAAO,SAAErY,KAAaE,GAAMJ,EAC9D,MAAMK,EAAK,GAAAC,OAAMR,EAAM,WACjB0Y,EACJjX,IAAMC,SAASiX,MAAMvY,GAAY,EAAC,GAAAI,OAAMD,EAAK,aAAc,GAC7D,OACEE,cAAA,UACMH,EACJD,UAAWK,IACTH,EACAmY,EACA,CAAE,CAAC,GAADlY,OAAID,EAAK,cAAAC,OAAaiY,IAAwB,YAAZA,GACpCpY,GAEFuY,KAAK,SAAQxY,SAEZA,KAgBPoY,EAAO7X,aAAe,CACpBN,eAAWO,EACXiY,WAAOjY,EACP6X,QAAS,WAGID,ICxCAA,EDwCAA,EErCR,MAAMM,EAAU5Y,IAAwD,IAAvD,UAAEG,EAAS,SAAED,EAAQ,KAAE0T,EAAI,UAAEiF,KAAczY,GAAMJ,EACvE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,YACjBgZ,EAAS,GAAAxY,OAAMD,EAAK,UACpB0Y,EAAc,GAAAzY,OAAMD,EAAK,eAE/B,OACEE,cAAA,UACMH,EACJD,UAAWK,IACTH,EACA,CAAE,CAACyY,GAAYlF,GACf,CAAE,CAACmF,GAAiBF,GACpB1Y,GACAD,SAEFK,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,aAAYH,SAAEA,OAyB5C0Y,EAAQnY,aAAe,CACrBN,UAAW,GACXD,cAAUQ,EACVkT,MAAM,EACNiF,WAAW,GAGED,IClDAA,GDkDAA,EEpDR,MAAMI,GAAa,CACxB,YACA,cACA,OACA,MACA,YACA,SAGWC,GAAW,CAAC,KAAM,KAAM,KAAM,KAAM,SCH1C,MAAMC,GAASlZ,IAQf,IARgB,OACrBmZ,EAAM,KACNC,EAAI,UACJjZ,EAAS,KACTmB,EAAI,SACJ+X,EAAQ,SACRnZ,KACGE,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,WACjBwZ,EAAS/Y,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,cACjCkZ,EAAQjY,GAAQpB,EAEtB,OACEsZ,eAAA,UACMpZ,EACJ,iBAA4B,IAAbiZ,EAAoB,GAAK,KACxClZ,UAAWK,IACTH,EAAM,GAADC,OACFD,EAAK,MAAAC,OAAK8Y,GAAI,GAAA9Y,OACdD,EAAK,MAAAC,OAAK6Y,GACb,CAAE,CAAC,GAAD7Y,OAAID,EAAK,eAAegZ,GAC1B,CAAE,CAAC,GAAD/Y,OAAID,EAAK,YAAYkZ,GACvBpZ,GACAD,SAAA,CAEDoZ,EACAC,GACChZ,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,UAASH,SAAEoB,GAAcpB,QA0BzDgZ,GAAOzY,aAAe,CACpB2Y,KAAM,MCtDR,SAASK,GAAWzZ,EAElBmI,GACC,IAFD,KAAE7G,EAAI,IAAEoY,EAAG,KAAEN,EAAI,OAAED,EAAM,UAAEhZ,EAAS,OAAE8E,EAAM,SAAE/E,KAAaE,GAAMJ,EAGjE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,WACjB6Z,EAA4B,qBAATP,EAAoB,IAAA9Y,OAAOD,EAAK,MAAAC,OAAK8Y,GAAS,GAEjEQ,EAAYC,mBAMlB,OAJAC,8BAAoB3R,GAAK,MACvBpD,MAAOA,IAAM6U,EAAUG,QAAQhV,YAI/BxE,cAAA,OACE4H,IAAKyR,KACDxZ,EACJD,UAAWK,IAAW,GAADF,OAChBD,GAAKC,OAAGqZ,GACX,CAAE,CAAC,GAADrZ,OAAID,EAAK,aAAa4E,GACxB9E,GACAD,SAEDA,GAGCsZ,eAAAQ,WAAA,CAAA9Z,SAAA,CACEK,cAAA,OAAKmZ,IAAKA,EAAKO,IAAK3Y,IACD,kBAAX6X,GACN5Y,cAAC2Y,GAAM,CAACC,OAAQA,EAAQC,KAAMA,IAC7B,SAOb,MAAMc,GAASC,qBAAWV,IAC1BS,GAAO7Y,YAAc,SAErB6Y,GAAOE,UAAY,CAEjBla,SAAUma,IAAUC,KAKpBhZ,KAAM+Y,IAAUE,OAGhBb,IAAKW,IAAUE,OAGfnB,KAAMiB,IAAUG,MAAMvB,IAGtBE,OAAQkB,IAAUG,MAAMxB,IAGxB/T,OAAQoV,IAAUI,KAGlBta,UAAWka,IAAUE,QAKvBd,GAAYhZ,aAAe,CACzBa,KAAM,GACNoY,IAAK,GACLN,KAAM,KACNnU,QAAQ,GAGViV,GAAOzZ,aAAegZ,GAAYhZ,aAGnByZ,IClFAA,GDkFAA,GE/ER,MAAMQ,GAAgB1a,IAMtB,IANuB,OAC5B2a,EAAM,SACNC,EAAQ,SACR1a,EAAQ,UACRC,KACGC,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,oBAEvB,OACES,cAAA,UAASH,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,SAChC,qBAAbA,EACNA,EAEAsZ,eAAAQ,WAAA,CAAA9Z,SAAA,CACEK,cAAA,OAAKJ,UAAS,GAAAG,OAAKR,EAAM,yBAAwBI,SAAEya,IACnDpa,cAAA,OAAKJ,UAAS,GAAAG,OAAKR,EAAM,uBAAsBI,SAAE0a,UAO3DF,GAAcrZ,YAAc,iBAa5BqZ,GAAcja,aAAe,CAC3Bka,OAAQ,GACRC,SAAU,GACV1a,cAAUQ,GAGGga,UCzCR,MAAMG,GAAgB7a,IAMtB,IANuB,OAC5B2a,EAAM,SACNC,EAAQ,SACR1a,EAAQ,UACRC,KACGC,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,oBAEvB,OACES,cAAA,UAASH,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,SAChC,qBAAbA,EACNA,EAEAsZ,eAAAQ,WAAA,CAAA9Z,SAAA,CACEK,cAAA,OAAKJ,UAAS,GAAAG,OAAKR,EAAM,yBAAwBI,SAAEya,IACnDpa,cAAA,OAAKJ,UAAS,GAAAG,OAAKR,EAAM,uBAAsBI,SAAE0a,UAO3DC,GAAcxZ,YAAc,iBAa5BwZ,GAAcpa,aAAe,CAC3Bka,OAAQ,GACRC,SAAU,GACV1a,cAAUQ,GAGGma,UC3CR,MAAMC,GAAuB9a,IAA8B,IAA7B,SAAEE,EAAQ,UAAEC,GAAWH,EAC1D,MAAMK,EAAK,GAAAC,OAAMR,EAAM,4BAEvB,OAAOS,cAAA,OAAKJ,UAAWK,IAAWH,EAAOF,GAAWD,SAAEA,KAGxD4a,GAAqBzZ,YAAc,wBAUnCyZ,GAAqBra,aAAe,GAErBqa,UClBR,MAAMC,GAAsB/a,IAA6C,IAA5C,IAAE0Z,EAAG,MAAEpP,EAAK,OAAEC,EAAM,IAAE0P,EAAG,UAAE9Z,GAAWH,EACxE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,2BAEjBuD,EAAQ,CACZiH,MACmB,kBAAVA,EAAkB,GAAAhK,OAClBgK,EAAK,MACS,kBAAVA,EACPA,OACA5J,EACN6J,OACoB,kBAAXA,EAAmB,GAAAjK,OACnBiK,EAAM,MACS,kBAAXA,EACPA,OACA7J,GAGR,OACEH,cAAA,OAAKJ,UAAWK,IAAWH,EAAOF,GAAWD,SAC3CK,cAAA,OAAKmZ,IAAKA,EAAKrW,MAAOA,EAAO4W,IAAKA,OAKxCc,GAAoB1Z,YAAc,uBAmBlC0Z,GAAoBta,aAAe,GAEpBsa,UC9CR,MAAMC,GAAqBhb,IAA0B,IAAzB,KAAEib,EAAI,UAAE9a,GAAWH,EACpD,MAAMK,EAAK,GAAAC,OAAMR,EAAM,0BAIvB,OACES,cAAA,OACEJ,UAAWK,IAAWH,EAAOF,GAC7B+a,wBALiB,CAASC,OAAQF,MAUxCD,GAAmB3Z,YAAc,sBAYjC2Z,GAAmBva,aAAe,GAEnBua,UC3BR,MAAMI,GAAqBpb,IAAoC,IAAnC,KAAEqb,EAAI,UAAElb,EAAS,SAAED,GAAUF,EAC9D,MAAMK,EAAK,GAAAC,OAAMR,EAAM,0BAEjBwb,EAAkB,OAARpb,QAAQ,IAARA,IAAYmb,EAE5B,OAAO9a,cAAA,OAAKJ,UAAWK,IAAWH,EAAOF,GAAWD,SAAEob,KAGxDF,GAAmB/Z,YAAc,sBAajC+Z,GAAmB3a,aAAe,GAEnB2a,UCZR,MAAMG,GAAUvb,IAiBhB,IAADwb,EAAAC,EAAA,IAhBJC,OAAO,QACLC,EAAO,SACPf,EAAQ,OACRD,EAAM,UACNnM,EAAS,SACToN,EACA9Z,KAAM+Z,EACNC,QAASC,GACV,aACDC,EAAY,eACZC,EAAc,KACdna,EACAga,QAASI,EAAU,SACnBhc,EAAQ,UACRC,KACGC,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,aAGrBqc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACE1b,EAAYb,EAAU,CACxBga,GACAQ,GACAG,GACAG,GACAI,GACAL,GACAD,KAGI4B,EACc,IAAdlO,GAAiC,aAAdA,EACf,GAANlO,OAAUD,EAAK,cACQ,IAAdmO,GAAiC,aAAdA,EACtB,GAANlO,OAAUD,EAAK,mBADV,EAKHsc,EAAsB,CAAEf,IAC5B,MAAMgB,EAAW,GAAAtc,OAAMD,EAAK,aAC5B,OAAiB,IAAbub,GAA+B,aAAbA,GAAwC,OAAbA,EACzC,GAANtb,OAAUsc,EAAW,MAER,IAAbhB,GACa,cAAbA,GACa,OAAbA,EAEM,GAANtb,OAAUsc,EAAW,MAER,IAAbhB,GACa,iBAAbA,GACa,OAAbA,EAEM,GAANtb,OAAUsc,EAAW,MAER,IAAbhB,GACa,gBAAbA,GACa,OAAbA,EAEM,GAANtb,OAAUsc,EAAW,MAER,IAAbhB,GACa,gBAAbA,GACa,OAAbA,EAEM,GAANtb,OAAUsc,EAAW,MAER,IAAbhB,GACa,iBAAbA,GACa,OAAbA,EAEM,GAANtb,OAAUsc,EAAW,WALhB,GA5BmB,CAmCzBX,GAEGY,EAAgB,CAAEjB,IACtB,MAAMgB,EAAW,GAAAtc,OAAMR,EAAM,cAC7B,MAAiB,WAAb8b,GAAsC,IAAbA,EACrB,GAANtb,OAAUsc,EAAW,UACC,UAAbhB,GAAqC,IAAbA,EAC3B,GAANtb,OAAUsc,EAAW,SACC,WAAbhB,GAAsC,IAAbA,EAC3B,GACe,SAAbA,GAAoC,IAAbA,EAC1B,GAANtb,OAAUsc,EAAW,aADhB,GARa,CAWnBhB,GAEGkB,GACM,OAANnC,QAAM,IAANA,OAAM,EAANA,EAAQ7Z,QAAS,IAAa,OAAR8Z,QAAQ,IAARA,OAAQ,EAARA,EAAU9Z,QAAS,EACrC,GAANR,OAAUqa,EAAM,MAAAra,OAAKsa,IAEf,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ7Z,QAAS,IACI,qBAAb8Z,GAAiD,KAAb,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU9Z,SAEvC6Z,EAEA,KAILoC,EACsC,QAD1BvB,EACU,QADVC,EACL,OAAXa,QAAW,IAAXA,IAAeC,SAAW,IAAAd,IAAIe,SAAY,IAAAhB,IAAIiB,EAE1CO,EACQ,OAAZD,QAAY,IAAZA,IACA,MACE,MAAME,EAAuB,OAATpB,QAAS,IAATA,IAAa/Z,EAE3Bob,EAA+B,OAAZnB,QAAY,IAAZA,IAAgBJ,EACnCG,EAA0B,OAAhBoB,QAAgB,IAAhBA,IAAoBhB,EAE9BiB,EACe,kBAAZrB,EAAuBnZ,EAAiBmZ,GAAW,GAE5D,MAAoB,SAAhBmB,GAA0C,0BAAhBE,EACrB5c,cAACya,GAAkB,CAACC,KAAMa,IACR,SAAhBmB,EACF1c,cAAC6a,GAAkB,CAACC,KAAMS,IACR,UAAhBmB,EACF1c,cAACwa,GAAmB,IAAKe,IAEhB,WAAhBmB,GACgB,0BAAhBE,EAEOrB,OAJF,GAfT,GAuBF,OACEtC,eAAA,cACMpZ,EACJ,aAAY0c,EACZ3c,UAAWK,IACTH,EACAqc,EACA,CAAE,CAAC,GAADpc,OAAID,EAAK,oBAAoB2b,GAC/Ba,EACAF,EACAxc,GAEI,CAAC,QAADG,OAASR,EAAM,aAAa,GAAEI,SAAA,CAEjB,qBAAXic,GACN5b,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,YAAWH,SAAEic,IAEvC3C,eAAA,OAAKrZ,UAAS,GAAAG,OAAKD,EAAK,qBAAoBH,SAAA,CACzCkc,EACD7b,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,aAAYH,SAAE8c,IACrCX,SA0HTd,GAAQ9a,aAAe,CACrBib,MAAO,CACLC,QAAS,GACTf,SAAU,GACVD,OAAQ,GACRnM,UAAW,GAEbwN,cAAc,EACdC,oBAAgBvb,EAChBoB,KAAM,QAGRyZ,GAAQ6B,OAAS1C,GACjBa,GAAQ8B,YAAcrC,GACtBO,GAAQ+B,YAAclC,GACtBG,GAAQgC,aAAexC,GACvBQ,GAAQiC,cAAgB1C,GACxBS,GAAQkC,OAAS5C,GAEFU,ICxTAA,GDwTAA,GErTR,MAAMmC,GAAqB1d,IAAuC,IAAtC,SAAEE,EAAQ,UAAEC,KAAcC,GAAMJ,EACjE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,0BACvB,OACES,cAAA,UAASH,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,SACpDA,KAKPwd,GAAmBrc,YAAc,sBAUjCqc,GAAmBjd,aAAe,CAChCP,cAAUQ,GAGGgd,UCvBR,MAAMC,GAAqB3d,IAAuC,IAAtC,SAAEE,EAAQ,UAAEC,KAAcC,GAAMJ,EACjE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,0BAEvB,OACES,cAAA,UAASH,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,SACpDA,KAKPyd,GAAmBtc,YAAc,sBAUjCsc,GAAmBld,aAAe,CAChCP,cAAUQ,GAGGid,UCvBR,MAAMC,GAAuB5d,IAAuC,IAAtC,SAAEE,EAAQ,UAAEC,KAAcC,GAAMJ,EACnE,MAAMK,EAAK,GAAAC,OAAMR,EAAM,kBACvB,OACES,cAAA,UAASH,EAAMD,UAAWK,IAAW,GAADF,OAAID,EAAK,cAAcF,GAAWD,SACnEA,KAKP0d,GAAqBvc,YAAc,wBAenCuc,GAAqBnd,aAAe,CAClCP,cAAUQ,GAGGkd,UCxBR,MAAMC,GAAe7d,IAQrB,IARsB,UAC3BwO,EAAS,eACTyN,EAAc,OACdtB,EAAM,SACNC,EAAQ,SACR1a,EAAQ,UACRC,KACGC,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,kBAEjB4c,EACc,IAAdlO,GAAiC,aAAdA,EACf,GAANlO,OAAUD,EAAK,cACQ,IAAdmO,GAAiC,aAAdA,EACtB,GAANlO,OAAUD,EAAK,mBADV,EAKHsc,EAAsB,MAC1B,MAAM7c,EAAM,GAAAQ,OAAMD,EAAK,aACvB,GAA8B,kBAAnB4b,IAEY,OAAnBA,GACmB,aAAnBA,GACmB,OAAnBA,GACmB,cAAnBA,GACmB,OAAnBA,GACmB,iBAAnBA,GACmB,OAAnBA,GACmB,iBAAnBA,GACmB,OAAnBA,GACmB,gBAAnBA,GACmB,OAAnBA,GACmB,iBAAnBA,GAEA,MAAM,GAAN3b,OAAUR,GAAMQ,OAAG2b,IAjBG,IAsBrBE,EAAQC,EAAQC,EAAQyB,GAAY/c,EAAYb,EAAU,CAC/Dga,GACAwD,GACAC,GACAC,KAGId,EACAnC,EAAO7Z,OAAS,GAAK8Z,EAAS9Z,OAAS,EACnC,GAANR,OAAUqa,EAAM,MAAAra,OAAKsa,GACZD,EAAO7Z,OAAS,GAAyB,IAApB8Z,EAAS9Z,OAChC6Z,EAEA,KAIX,OACEnB,eAAA,WACE,aAAYsD,KACR1c,EACJD,UAAWK,IACTH,EACAqc,EACAC,EACAxc,GAEI,CAAC,QAADG,OAASR,EAAM,mBAAmB,GAAEI,SAAA,CAEvB,qBAAXic,GACN5b,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,YAAWH,SAAEic,IAEvC3C,eAAA,OAAKrZ,UAAS,GAAAG,OAAKD,EAAK,aAAYH,SAAA,CACjCkc,EACA0B,EACAzB,SAmCTwB,GAAapd,aAAe,CAC1B+N,UAAW,WACXoM,SAAU,GACVD,OAAQ,GACRsB,oBAAgBvb,GAGlBmd,GAAaT,OAASM,GACtBG,GAAaJ,OAASE,GACtBE,GAAaE,SAAWH,GAETC,IClIAA,GDkIAA,GE9HR,MAAMG,GAAmBhe,IAMzB,IAN0B,QAC/Bsb,EAAO,GACPlZ,EAAE,SACFlC,EAAQ,UACRC,KACGC,GACJJ,EACC,MAAMK,EAAK,GAAAC,OAAMR,EAAM,sBAEjBme,EACc,kBAAP7b,GAAmBA,EAAGtB,OAAS,EACjCsB,EAEA4b,GAAiBvd,aAAa2B,GAIzC,OACE7B,cAAC0d,EAAG,IAAK7d,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,UACxB,IAA5BS,EAAcT,GAAqBob,EAAUpb,KAmBpD8d,GAAiBvd,aAAe,CAC9BP,cAAUQ,EACV4a,aAAS5a,EACT0B,GAAI,OAGS4b,IChDAA,GDgDAA,GE/CR,MAAME,GAAqBle,IAAA,IAAC,UAAEG,EAAS,SAAED,KAAaE,GAAMJ,EAAA,OACjEO,cAAA,UAASH,EAAMD,UAAWA,EAAUD,SACjCA,KAILge,GAAmB7c,YAAc,sBAUlB6c,UCNf,MAAMC,WAAyB5c,IAAMsU,UACnCC,YAAY3T,GACV4T,MAAM5T,GAAO,KAgCfic,aAAe,KAETnY,KAAKqR,aAAayC,QAAQxJ,aAAetK,KAAKoY,kBAChDpY,KAAKqY,YAAYrY,KAAK9D,MAAMoc,gBAG9BtY,KAAKuY,UAAUzE,QAAQlD,gBACvB,KAEF4H,sBAAwB,MACK,IAAvBxY,KAAKyY,gBACPlX,OAAOmX,uBAAsB,KAC3B,MAAMC,EAAO3Y,KAAKqR,aAAayC,QAE/B,GAAI6E,EAAM,CACR,MAEM9W,EAFgB8W,EAAKrO,aAEEtK,KAAKoY,iBAE9BvW,GAAQ,GAGoB,IAA1B7B,KAAK4Y,mBACPD,EAAKtW,UAAY0B,KAAKK,MAAMuU,EAAKtW,WAAaR,GAGhD8W,EAAKtW,UAAYsW,EAAKtW,UAAYR,EAGpC7B,KAAKoY,iBAAmBO,EAAKrO,aAE7BtK,KAAKuY,UAAUzE,QAAQlD,eAGzB5Q,KAAKyY,eAAgB,KAGvBzY,KAAKyY,eAAgB,IAEvB,KAEFI,UAAY,KACV,MAAMF,EAAO3Y,KAAKqR,aAAayC,QAE/B,OAAO6E,EAAKlU,eAAiBV,KAAKK,MAAMuU,EAAKtW,UAAYsW,EAAKrO,eAC9D,KAEFwO,aAAe,MACc,IAAvB9Y,KAAK+Y,gBACPxX,OAAOmX,uBAAsB,MACL,IAAlB1Y,KAAKgZ,SACPhZ,KAAK4Y,iBAAmB5Y,KAAK6Y,YAE7B7Y,KAAKgZ,UAAW,EAGlBhZ,KAAK+Y,eAAgB,KAGvB/Y,KAAK+Y,eAAgB,IAEvB,KA0HFE,sBAAwB,KACtB,MAAMC,EAAclZ,KAAKqR,aAAayC,QAAQ7J,cAAc,SAAD5P,OAChDR,EAAM,yBAAAQ,OAAwBR,EAAM,iCAAAQ,OAAgCR,EAAM,yBAAAQ,OAAwBR,EAAM,iCAG7Gsf,EAAgC,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAajP,cAAc,SAAD5P,OAC1CR,EAAM,2BAGjB,MAAO,CACLqf,cACAC,uBAhOFnZ,KAAKoZ,eAAiB9d,IAAM+d,YAC5BrZ,KAAKqR,aAAe/V,IAAM+d,YAC1BrZ,KAAKuY,UAAYjd,IAAM+d,YACvBrZ,KAAKoY,iBAAmB,EACxBpY,KAAK4Y,kBAAmB,EACxB5Y,KAAKsZ,oBAAiB7e,EACtBuF,KAAK+Y,eAAgB,EACrB/Y,KAAKyY,eAAgB,EACrBzY,KAAKgZ,cAAWve,EAGlB8e,0BACE,MAAMZ,EAAO3Y,KAAKqR,aAAayC,QAEzB0F,EAAYzV,KAAKK,MAAMuU,EAAKtW,UAAYsW,EAAKrO,cAOnD,MAAO,CACLmP,OALAd,EAAKlU,eAAiB+U,GACtBb,EAAKlU,aAAe,IAAM+U,GAC1Bb,EAAKlU,aAAe,IAAM+U,EAI1BlP,aAAcqO,EAAKrO,aACnB7F,aAAckU,EAAKlU,aACnBiV,mBAAoB1Z,KAAKiZ,wBACzBpX,KAAM8W,EAAKlU,aAAekU,EAAKtW,WAmEnC4N,qBAE+C,IAAzCjQ,KAAK9D,MAAMyd,2BACb3Z,KAAKqY,YAAYrY,KAAK9D,MAAMoc,gBAG9BtY,KAAKoY,iBAAmBpY,KAAKqR,aAAayC,QAAQxJ,aAElD/I,OAAOd,iBAAiB,SAAUT,KAAKmY,cAEF,oBAA1B5W,OAAOqY,iBAChB5Z,KAAKsZ,eAAiB,IAAIM,eAAe5Z,KAAKwY,uBAC9CxY,KAAKsZ,eAAeO,QAAQ7Z,KAAKqR,aAAayC,UAEhD9T,KAAKqR,aAAayC,QAAQrT,iBAAiB,SAAUT,KAAK8Y,cAG5DpI,mBAAmBC,EAAWmJ,EAAWC,GACvC,MACE7d,OAAO,mBAAE8d,IACPha,KAEJ,GAAwB,qBAAb+Z,EAA0B,CACnC,MAAMpB,EAAO3Y,KAAKqR,aAAayC,SAEzB,YAAEoF,EAAW,mBAAEC,GAAuBnZ,KAAKiZ,wBAejD,GAbIC,IAAgBa,EAASL,mBAAmBR,cAGd,qBAAvBC,GACPA,IAAuBY,EAASL,mBAAmBP,qBAEnDR,EAAKtW,UACHsW,EAAKlU,aACLsV,EAASlY,MACR7B,KAAKoY,iBAAmBO,EAAKrO,iBAIZ,IAApByP,EAASN,QACgB,IAAvBO,GACFha,KAAKqY,YAAYrY,KAAK9D,MAAMoc,gBAE9BtY,KAAK4Y,kBAAmB,OAExB,GAAImB,EAASzP,aAAetK,KAAKoY,iBAAkB,CAGjD,MAAM6B,EAAUtB,EAAKtW,UAAYrC,KAAKoY,iBAEpCO,EAAKlU,eAAiBwV,GACtBtB,EAAKlU,aAAe,IAAMwV,GAC1BtB,EAAKlU,aAAe,IAAMwV,GAEC,IAAvBD,IACFha,KAAKqY,YAAYrY,KAAK9D,MAAMoc,gBAC5BtY,KAAK4Y,kBAAmB,GAG1B5Y,KAAK4Y,kBAAmB,OAG1B5Y,KAAK4Y,kBAAmB,EAEpBM,IAAgBa,EAASL,mBAAmBR,cAEd,qBAAvBC,GACPA,IACEY,EAASL,mBAAmBP,oBAKT,IAAnBR,EAAKtW,WACLsW,EAAKlU,aAAesV,EAAStV,eAE7BkU,EAAKtW,UAAYsW,EAAKlU,aAAesV,EAAStV,eAOxDzE,KAAKoY,iBAAmB2B,EAASzP,cAIrCuG,uBACEtP,OAAOT,oBAAoB,SAAUd,KAAKmY,cACP,qBAAxBnY,KAAKsZ,gBACdtZ,KAAKsZ,eAAeY,aAEtBla,KAAKqR,aAAayC,QAAQhT,oBAAoB,SAAUd,KAAK8Y,cAG/DT,cAAyD,IAA7CC,EAAcvH,UAAAlW,OAAA,QAAAJ,IAAAsW,UAAA,GAAAA,UAAA,GAAG/Q,KAAK9D,MAAMoc,eACtC,MAAMK,EAAO3Y,KAAKqR,aAAayC,QACzBqG,EAAcna,KAAKoZ,eAAetF,QAGlCsG,EAAazB,EAAKzU,wBAIlBmW,EAHYF,EAAYjW,wBAGCqC,IAAMoS,EAAKtW,UAAY+X,EAAW7T,IAE7DoS,EAAK9Q,SACP8Q,EAAK9Q,SAAS,CAAEtB,IAAK8T,EAAcC,SAAUhC,IAE7CK,EAAKtW,UAAYgY,EAGnBra,KAAKoY,iBAAmBO,EAAKrO,aAI7BtK,KAAKgZ,UAAW,EAkBlB1H,SACE,MACEpV,OAAO,SACLjC,EAAQ,gBACRsgB,EAAe,QACfC,EAAO,YACPC,EAAW,oBACXC,EAAmB,cACnB7I,EAAa,YACbC,EAAW,UACX5X,EAAS,4BACT8H,EAA2B,eAC3BsW,EAAc,mBACd0B,EAAkB,0BAClBL,KACGxf,IAEH6F,KAEE5F,EAAK,GAAAC,OAAMR,EAAM,kBAEhB2c,GAAiB1b,EAAYb,EAAU,CAACge,KAE/C,OACE1E,eAAA,UAASpZ,EAAMD,UAAWK,IAAWH,EAAOF,GAAWD,SAAA,CACpDwgB,GACCngB,cAAA,OACEJ,UAAWK,IAAW,GAADF,OAAID,EAAK,kBAAkB,CAC9C,CAAC,GAADC,OAAID,EAAK,2BACiB,WAAxBsgB,IACDzgB,SAEHK,cAAC+X,EAAM,MAGVmI,GACClgB,cAACqY,GAAO,CAAA1Y,SACNK,cAAC+X,EAAM,MAGXkB,eAAC/F,EAAgB,CACfqE,cAAeA,EACfC,YAAaA,EACbV,OAASe,GAAOA,EAAG/C,OAAOpN,GAC1B9H,UAAS,GAAAG,OAAKD,EAAK,oBACnB8H,IAAKlC,KAAKuY,UACVlH,aAAenP,GAASlC,KAAKqR,aAAayC,QAAU5R,EACpDqO,QAAS,CAAEzL,iBAAiB,GACtB,CAAC,QAADzK,OAASR,EAAM,kBAAkB,GACvCuD,MAAO,CACLud,oBAAqB,OACrBC,eAAgB,OAChBC,YAAa,QACb5gB,SAAA,CAEDuc,GAAgCvc,EACjCK,cAAA,OACEJ,UAAS,GAAAG,OAAKD,EAAK,eACnB8H,IAAKlC,KAAKoZ,oBAGc,qBAApBmB,GACNjgB,cAAA,OAAKJ,UAAS,GAAAG,OAAKD,EAAK,gCAA+BH,SACpDsgB,QAUb,SAASO,GAAgB5e,EAAOgG,GAC9B,MAAM6Y,EAAanH,mBAEboH,EAAkB1C,GACtByC,EAAWjH,QAAQuE,YAAYC,GAOjC,OAJAzE,8BAAoB3R,GAAK,MACvB8Y,qBAGK1gB,cAAC4d,GAAgB,CAAChW,IAAK6Y,KAAgB7e,IAbhDgc,GAAiB9c,YAAc,cAgB/B,MAAM6f,GAAc/G,qBAAW4G,I5BjPCI,O4BmPhCD,GAAY9G,UAAY,CAUtBla,U5B7P8BihB,G4B6PJ,CACxB5F,GACAsC,GACAG,GACAE,I5BjQ6C,CAC/C/b,EACAif,EACAC,KAEA,MAAMC,EAAwBH,GAAahgB,KACxCC,GAAMA,EAAEE,MAAQF,EAAEC,cAOfkgB,EAAYhgB,IAAMC,SAASC,QAAQU,EAAMif,IAAWI,MAAM7f,IAC9D,GAAoB,kBAATA,GAA4C,IAAvBA,EAAK8f,OAAO3gB,OAE1C,OAAO,EAGT,IAAyC,IAArCqgB,GAAatf,QAAQF,EAAKG,MAAc,CAAC,IAAD4f,EAAAC,EAC1C,MAAMzf,GAAS,OAAJP,QAAI,IAAJA,GAAW,QAAP+f,EAAJ/f,EAAMQ,aAAK,IAAAuf,OAAP,EAAJA,EAAatf,MAAU,OAAJT,QAAI,IAAJA,GAAW,QAAPggB,EAAJhgB,EAAMQ,aAAK,IAAAwf,OAAP,EAAJA,EAAazf,IAErCG,SAAkBH,EAExB,GAAiB,aAAbG,EAEF,OAAqC,IAA9B8e,GAAatf,QAAQK,GACvB,GAAiB,WAAbG,EAAuB,CAEhC,MAAMG,EAAWN,EAAGZ,MAAQY,EAAGb,YAC/B,OAAoD,IAA7CigB,EAAsBzf,QAAQW,GAChC,MAAiB,WAAbH,IACqC,IAAvCif,EAAsBzf,QAAQK,OAS3C,GAAyB,qBAAdqf,EAA2B,CACpC,MAAM/e,EAAWG,EAAiB4e,GAE5BK,EAAeT,GAClBhgB,KAAKC,GAAMA,EAAEE,MAAQF,EAAEC,cACvBoU,KAAK,MACFoM,EAAU,IAAAvhB,OAAOkC,EAAQ,+BAAAlC,OAA8B+gB,EAAa,qBAAA/gB,OAAoBshB,GAE9F,OAAO,IAAI3d,MAAM4d,M4BoNnBrB,gBAAiBnG,IAAUC,KAG3BmG,QAASpG,IAAUI,KAGnBiG,YAAarG,IAAUI,KAGvBkG,oBAAqBtG,IAAUG,MAAM,CAAC,MAAO,WAM7C1C,cAAeuC,IAAUyH,KAMzB/J,YAAasC,IAAUyH,KAOvB7Z,4BAA6BoS,IAAUI,KAKvCwF,mBAAoB5F,IAAUI,KAK9BmF,0BAA2BvF,IAAUI,KAMrC8D,eAAgBlE,IAAUG,MAAM,CAAC,OAAQ,WAGzCra,UAAWka,IAAUE,QAGvB2G,GAAYzgB,aAAe,CACzB+f,qBAAiB9f,EACjB+f,SAAS,EACTC,aAAa,EACbC,oBAAqB,MACrB1Y,6BAA6B,EAC7BgY,oBAAoB,EACpBL,2BAA2B,EAC3BrB,eAAgB,QAIlBJ,GAAiB1d,aAAeygB,GAAYzgB,aAE5CygB,GAAYa,QAAU7D,GAEPgD,IChaAA,GDgaAA,G,oBElaA,I,yBC8BAc,I,4ECjBR,MAAMC,WAAmBpM,YAQ9BC,YAAa3T,GACX4T,MAAM5T,GAAM,KAQd+T,kBAAoB,KAClBjQ,KAAKic,cAAgBC,KAAaC,OAAO,CACvCC,oCAAqCriB,IAAoB,IAAnB,YAACsiB,GAAYtiB,EACjD,IAAIiG,KAAKsc,UAAUD,GAQnB,OAPArc,KAAKuc,YAAY,CAACF,gBAClBrc,KAAKwc,SAAS,CAACC,iBAAiB,IAEhCzc,KAAK0c,MAAMC,IAAIC,SAAS,CACtBje,GAAIqB,KAAK0c,MAAMvW,KAAOkW,EAAY5T,MAAQzI,KAAK9D,MAAMkL,UAAY,EACjEjI,GAAIa,KAAK0c,MAAMnW,IAAM8V,EAAY3U,MAAQ1H,KAAK9D,MAAMkL,UAAY,KAE3D,GAETyV,6BAA8BA,KAAM,EACpCC,mCAAoCA,KAAM,EAC1CC,oBAAqBA,KAAM,EAC3BC,mBAAoBA,CAAC7U,EAAO8U,KAC1B,IAAIjd,KAAKsc,UAAUW,GAGnB,OADAjd,KAAKkd,kBACEC,KAAShV,MACd,CACE,KACA,CACEiV,GAAIpd,KAAK0c,MAAMC,IAAIhe,EACnB0e,GAAIrd,KAAK0c,MAAMC,IAAIxd,IAGvB,CAACme,SAAUtd,KAAKuc,aARXY,CASLhV,EAAO8U,IAEXM,4BAA6BA,KAAM,EACnCC,sBAAuBjI,IAAoB,IAAnB,YAAC8G,GAAY9G,EACnCvV,KAAKwc,SAAS,CAACC,iBAAiB,IAChCzc,KAAK0c,MAAMC,IAAIc,gBACf,MAAM,OAACC,GAAU1d,KAAK2d,UAAUtB,GAC5BqB,EAAS,IACX1d,KAAK4d,YAAY,eAIxB,KA4EDrB,YAAc/G,IAAoB,IAAnB,YAAC6G,GAAY7G,EAC1B,MAAM,IAACqI,EAAG,OAAEH,GAAU1d,KAAK2d,UAAUtB,GAC/ByB,EAAeC,KAASC,QAAQ,CAACC,EAAGJ,EAAKK,EAAG,IAAMR,EAAQS,EAAG,MACnEne,KAAKwc,SAAS,CAACsB,iBACf9d,KAAK9D,MAAMkiB,cAAc,CAACH,EAAGJ,EAAKK,EAAG,IAAMR,EAAQS,EAAG,OACvD,KAEDP,YAAcS,IACZ,MAAM,EAACJ,EAAC,EAAEC,EAAC,EAAEC,GAAKJ,KAASO,QAAQD,IAC7B,KAAClY,EAAI,IAAEI,GAAOvG,KAAKue,cAAcN,EAAGC,EAAI,KAC9Cle,KAAKwc,SAAS,CAACsB,aAAcO,IAC7Bre,KAAK9D,MAAMkiB,cAAc,CAACH,IAAGC,IAAGC,MAChCne,KAAK0c,MAAMC,IAAIC,SAAS,CACtBje,EAAGwH,EAAOnG,KAAK9D,MAAMkL,UAAY,EACjCjI,EAAGoH,EAAMvG,KAAK9D,MAAMkL,UAAY,KAEnC,KAEDoX,eAAiBH,IACf,MAAM,EAACJ,EAAC,EAAEC,EAAC,EAAEC,GAAKJ,KAASO,QAAQD,IAC7B,KAAClY,EAAI,IAAEI,GAAOvG,KAAKue,cAAcN,EAAGC,EAAI,KAC9Cle,KAAKwc,SAAS,CAACsB,aAAcO,IAC7Bre,KAAK9D,MAAMkiB,cAAc,CAACH,IAAGC,IAAGC,MAChChB,KAASsB,OAAOze,KAAK0c,MAAMC,IAAK,CAC9B+B,QAAS,CACP/f,EAAGwH,EAAOnG,KAAK9D,MAAMkL,UAAY,EACjCjI,EAAGoH,EAAMvG,KAAK9D,MAAMkL,UAAY,KAEjCuX,SAxJH3e,KAAK0c,MAAQ,CACXkC,OAAQ,CAACjgB,EAAG,EAAGQ,EAAG,GAClB2e,aAAc5hB,EAAM2iB,aACpBlC,IAAK,IAAIQ,KAAS2B,SA+CtBC,WACE/e,KAAKgf,gBAGPA,gBAOEhf,KAAKif,KAAKC,iBAAgB,CAACvgB,EAAGQ,EAAGkF,EAAOC,KACtC,MAAM/C,EAAS4d,KAAWtiB,IAAI,UACxBuiB,EAAOzgB,EAAI0F,EACXqZ,EAAS3Z,KAAKyD,IAAInD,EAAOC,GAAU,EACnCsa,EAAS,CACbjgB,EAAGygB,EAAO/a,EAAQ,EAClBlF,EAAGA,EAAIoC,EAAO+C,OAASA,EAAS,GAGlCtE,KAAKwc,SAAS,CACZoC,SACAlB,SACApZ,SACAD,QACAkC,IAAKpH,EAAIoC,EAAO+C,OAChB6B,KAAMiZ,IAERpf,KAAK4d,YAAY5d,KAAK0c,MAAMoB,iBAIhCH,UAAWV,GACT,MAAM,MACJxU,EAAK,MAAEf,EAAK,MAAE2X,EAAK,MAAEC,GACnBrC,GACGte,EAAGQ,GAAK,CAACsJ,GAAS4W,EAAO3X,GAAS4X,IAClClC,EAAIC,GAAM,CAAC1e,EAAIqB,KAAK0c,MAAMkC,OAAOjgB,EAAGQ,EAAIa,KAAK0c,MAAMkC,OAAOzf,GACjE,MAAO,CACL0e,IAAK9Z,KAAKwb,MAAMlC,EAAID,KAAQ,IAAMrZ,KAAKyb,IAEvC9B,OAAQ3Z,KAAK0b,KAAKpC,EAAKA,EAAKD,EAAKA,GAAMpd,KAAK0c,MAAMgB,QAItDpB,UAAWW,GACT,MAAM,OAACS,GAAU1d,KAAK2d,UAAUV,GAChC,OAAOS,EAAS,EAGlBR,kBACOld,KAAK0c,MAAMD,kBAIhBzc,KAAKwc,SAAS,CAACC,iBAAiB,IAChCzc,KAAK0c,MAAMC,IAAI+C,UAAU,CACvB/gB,EAAGqB,KAAK0c,MAAMC,IAAIhe,EAAEghB,OACpBxgB,EAAGa,KAAK0c,MAAMC,IAAIxd,EAAEwgB,SAEtB3f,KAAK0c,MAAMC,IAAIC,SAAS,CAACje,EAAG,EAAGQ,EAAG,KAGpCof,cAAeV,EAAKH,GAClB,MAAMkC,EAAIlC,EAAS1d,KAAK0c,MAAMgB,OACxBmC,EAAM9b,KAAKyb,GAAK3B,EAAM,IACtBlf,EAAIihB,EAAI7b,KAAK+b,IAAID,GACjB1gB,EAAIygB,EAAI7b,KAAKgc,IAAIF,GACvB,MAAO,CACL1Z,KAAMnG,KAAK0c,MAAMrY,MAAQ,EAAI1F,EAC7B4H,IAAKvG,KAAK0c,MAAMpY,OAAS,EAAInF,GAmCjCmS,SACE,MAAM,OAACoM,GAAU1d,KAAK0c,MAChBsD,EAAa,CACjBxR,GAAOyR,OACPjgB,KAAK9D,MAAM8jB,WACX,CACE3b,MAAOrE,KAAK9D,MAAMkL,UAClB9C,OAAQtE,KAAK9D,MAAMkL,UACnB8Y,aAAclgB,KAAK9D,MAAMkL,UAAY,EACrC+Y,gBAAiBngB,KAAK0c,MAAMoB,aAC5BsC,QAAiC,IAAxBpgB,KAAK0c,MAAMkC,OAAOjgB,EAAU,EAAI,IAIvC0hB,EAAcrgB,KAAKic,eAAiBjc,KAAKic,cAAcoE,aAAe,GAE5E,OACE9M,eAAC+M,KAAI,CACHpe,IAAKmS,IACHrU,KAAKif,KAAO5K,MAEVgM,EACJtB,SAAU1C,GAAerc,KAAK+e,SAAS1C,GACvCjf,MAAO,CAACoR,GAAO+R,eAAgBvgB,KAAK9D,MAAMkB,OAAOnD,SAAA,CACjDK,cAACkmB,KAAK,CACJpjB,MAAO,CAACoR,GAAOiS,IAAK,CAACnc,OAAiB,EAAToZ,EAAYrZ,MAAgB,EAATqZ,IAChDgD,OAAQC,EAAQ,OAElBrmB,cAAC6iB,KAASmD,KAAI,CAACljB,MAAO,CAAC4C,KAAK0c,MAAMC,IAAIiE,YAAaZ,SAjM9ChE,GACJxhB,aAAe,CACpB4M,UAAW,GACXyX,aAAc,UACdT,cAAeA,OACfyC,UAAW,GAkMf,MAAMrS,GAASsS,KAAW3E,OAAO,CAC/BoE,eAAgB,CACdQ,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBR,IAAK,CACHS,UAAW,UAEbjB,OAAQ,CACNtK,SAAU,WACVwK,gBAAiB,UACjBgB,YAAa,EACbC,YAAa,UACbC,UAAW,EACXC,YAAa,kBACbC,aAAc,CAACld,MAAO,EAAGC,OAAQ,GACjCkd,cAAe,GACfC,aAAc,K,8CCnOlB,MAAMC,GAAoBC,aAAGC,QAAAC,YAAA,gKAUvBC,GAAoBH,aAAGI,QAAAF,YAAA,+HASvBG,GAAaC,KAAO5kB,IAAG6kB,QAAAL,YAAA,4MAWvBM,GAAQF,KAAO5kB,IAAG+kB,QAAAP,YAAA,gCAGlBQ,GAAQJ,KAAO5kB,IAAGilB,QAAAT,YAAA,gDAKlBU,GAAYN,KAAO5kB,IAAGmlB,QAAAX,YAAA,kCAItBY,GAAcR,KAAOS,MAAKC,QAAAd,YAAA,gvBAY1BC,GAGAJ,GAMAI,GAGAJ,GAGAI,GAWAJ,IAUAkB,GAAY7oB,IAAA,IAAC,YACjB8oB,EAAW,eACXC,EAAc,MACdC,EAAK,IACLvb,EAAG,IACHF,EAAG,KACH0b,GACDjpB,EAAA,OACCwZ,eAACgP,GAAS,CAAAtoB,SAAA,CACRsZ,eAACyO,GAAU,CAAA/nB,SAAA,CACTK,cAAC6nB,GAAK,CAAAloB,SACH8oB,IAEHzoB,cAAC+nB,GAAK,CAAApoB,SACH4oB,OAGLvoB,cAACmoB,GAAW,CAAC5mB,KAAK,QAAQ2L,IAAKA,EAAKF,IAAKA,EAAK0b,KAAMA,EAAMlS,MAAO+R,EAAaI,SAAUH,QAI5FF,GAAUpoB,aAAe,CACvBwoB,KAAM,KAGOJ,I,MCtHA,ICAA,ICAA,ICAA,ICcOX,KAAOiB,OAAMtB,QAAAC,YAAA,gWAmBnBI,KAAOxB,IAAGsB,QAAAF,YAAA,iEAGtB3lB,GAASA,EAAMinB,YAAc,iBAclBC,I,8BC3Cf,MAAMC,GAAc,IACdC,GAAkB,GAEPrB,KAAO5kB,IAAGukB,QAAAC,YAAA,6IAChByB,GACCA,IAGRpnB,GAASA,EAAMqnB,mBAAqBrnB,EAAMsnB,UAAQ,0BAClDtnB,GAASA,EAAMunB,oBAAkB,2DACjCvnB,GAASA,EAAMsnB,UAAQ,sCAIPvB,KAAO5kB,IAAG0kB,QAAAF,YAAA,kKACnByB,GACCA,IAGRpnB,GAASA,EAAMwnB,qBAAmB,0BAMdzB,KAAO5kB,IAAG6kB,QAAAL,YAAA,uXACtBwB,IACDC,GAIMD,KAeXnnB,GAASA,EAAMynB,YAAU,2BAIP1B,KAAO5kB,IAAG+kB,QAAAP,YAAA,8IAUTI,KAAO5kB,IAAGilB,QAAAT,YAAA,YAIdI,KAAO5kB,IAAGmlB,QAAAX,YAAA,oFAGnBwB,GACDA,IAGcpB,KAAO5kB,IAAGslB,QAAAd,YAAA,UAGZI,KAAO5kB,IAAGumB,QAAA/B,YAAA,yLAYPI,KAAO5kB,IAAGwmB,QAAAhC,YAAA,oLAEnBwB,KAQMpB,KAAO5kB,IAAGymB,QAAAjC,YAAA,uFAQTjS,YAoXTmU,I,2BCrcK9B,KAAO5kB,IAAGukB,QAAAC,YAAA,qDADV,KAKpB,IAAImC,GAAK,IAAIC,KAYahC,KAAOS,MAAKX,QAAAF,YAAA,mZAAtC,MAsDMqC,GAAe,yBACrBC,KAAM3H,SAAS,OAAQ,CACnB4H,aAAc,CAAC,CACX1O,QAAS,qKAIT2O,SAAS,EAET3H,MAAO,2BACPhI,OAAQ,QACRnE,QAAS,CAAC,qBAAsB,aAAa,kBAAmB,0CAA2C,UAC3GoE,SAAU,WACV2P,YAAaJ,GAAe,mBAC5BK,QAASL,GAAe,WACxBxH,MAAO,kBACP8H,cAAe,GACfC,aAAc,GACdC,SAAU,EACVC,YAAa,GACbC,WAAY,GACZC,KAAM,GACNC,eAAgB,GAChBC,gBAAiB,GACjBC,QAAS,GACTC,iBAAkB,GAClBC,oBAAqB,GACrBC,KAAM,OAIdhB,KAAM3H,SAAS,UAAW,CACtB4I,aAAc,CAAC,CACX1P,QAAS,iFAIjByO,KAAM3H,SAAS,UAAW,CACtBqI,KAAM,CAAC,CAACpR,IAAK,8CAA+CO,IAAK,OA4GrEqR,eAAeC,GAAc5P,EAAS6P,GAClC,IAAIC,EAAOrB,KAAMsB,SAAS,QACtBC,EAAWF,EAAK1U,MAAMsT,aAK1B,GAHAmB,EAAsB,oBAARA,GAAsBA,EAG1B,CACYG,EAASA,EAAS7qB,OAAS,GACjC6a,QAAUA,EAAQA,QAC9BgQ,EAASC,MAGbD,EAASllB,KAAKkV,GACd/V,YAAW,KACH6lB,EAAK5I,SACD,CAACwH,aAAcsB,MAGvB,IAGR,SAASE,GAAcC,GACnB,IAAIC,EAAU3B,KAAMsB,SAAS,WAC7B9lB,YAAW,KACHmmB,EAAQlJ,SACJ,CAACiI,KAAMgB,IAEX1V,QAAQ4V,IAAID,EAAQhV,MAAM+T,QAE9B,IAWRQ,eAAeW,GAAcvB,GAUzB,IAOIwB,EAAO,IAAIC,eAmDf,OAlDAD,EAAKE,KAAK,OARO,8BAQa,GAC9BF,EAAKG,iBAAiB,eAAgB,qCACtCH,EAAKI,mBAAqB,KACtB,GAAuB,GAAnBJ,EAAKK,YAAkC,KAAfL,EAAK/S,OAAe,CAC5C,IAAIqT,EAAgBC,KAAKC,MAAMR,EAAKS,cACpCvW,QAAQ4V,IAAIQ,GACZ,IAAI/B,EAAgB+B,EAAcI,KAElCxW,QAAQ4V,IAAIvB,EAAc3pB,QAE1B,IAAK,IAAIwE,EAAI,EAAGA,EAAImlB,EAAc3pB,OAAQwE,IAElCmlB,EAAcnlB,GAAU,OACxBmlB,EAAcnlB,GAAY,QAAI2kB,GAAG1S,OAAOkT,EAAcnlB,GAAGmlB,eACzDA,EAAcnlB,GAAY,QAAImlB,EAAcnlB,GAAY,QAAEunB,WAAW,MAAO,IAAIA,WAAW,OAAQ,IAAIA,WAAW,SAAU,QAAQA,WAAW,UAAW,UAG1JpC,EAAcnlB,GAAY,QAAImlB,EAAcnlB,GAAGmlB,cAGnDrU,QAAQ4V,IAAIvB,EAAcnlB,GAAY,SAEtCimB,GAAcd,EAAcnlB,IAGS,IAAjCmlB,EAAcnlB,GAAGwlB,KAAKhqB,SACtB+qB,GAAcpB,EAAcnlB,GAAGwlB,MAC/BvnB,SAASupB,eAAe,cAAcC,UAAYtC,EAAcnlB,GAAG0nB,WACnEzpB,SAASupB,eAAe,aAAaC,UAAYtC,EAAcnlB,GAAG2nB,WAIxC,sBAA1BxC,EAAcnlB,GAAGqd,OAA2D,wBAA1B8H,EAAcnlB,GAAGqd,OACnEvM,QAAQ4V,IAAI,gBACZzoB,SAASupB,eAAe,YAAYI,UAAW,GAG/C3pB,SAASupB,eAAe,YAAYI,UAAW,IAS/DhB,EAAKiB,KAAKC,mBAAmBX,KAAKY,UAAU,CACxC,KAAQ3C,EACR,KAAQ,aAEL,EA5LXljB,OAAO8lB,WAAa,SAAUV,GAe1BxW,QAAQ4V,IAAI,iCACZ,IAAIP,EAAOrB,KAAMsB,SAAS,QACtBC,EAAWF,EAAK1U,MAAMsT,aAC1B,IAAK,IAAI/kB,EAAI,EAAGA,EAAIsnB,EAAK9O,SAAShd,OAAQwE,IACtCqmB,EAASllB,KACL,CACIkV,QAASiR,EAAK9O,SAASxY,GACvBsV,SAAU,WACVD,OAAQ,cACR4S,OAAO,IA0BnB,OAtBIX,EAAKY,mBACL7B,EAASllB,KACL,CACIqV,QAAS,CACLpC,IAAKkT,EAAKa,YACVxT,IAAK,mBACL3P,MAAO,SAEXijB,OAAO,EACP3S,SAAU,WACVD,OAAQ,gBAIpB/U,YAAW,KACH6lB,EAAK5I,SACD,CAACwH,aAAcsB,MAGvB,IAGGc,KAAKY,UAAU,CAAClU,OAAQ,OAAQyT,KAAM,aAIjDplB,OAAOkmB,SAAW,SAAUd,GAExBrpB,SAASupB,eAAe,mBAAmBC,UAAYH,EAAKe,QAC5D,IAAIC,EAAU,GACVC,EAAc,EAClBjB,EAAKkB,OAAOpsB,SAAQ4iB,IAChBsJ,GAAWC,EAAYE,WAAa,MAAQzJ,EAAMyJ,WAAa,MAAuC,IAA/BnB,EAAKoB,WAAWH,IAAoBI,QAAQ,GAAK,QACxHJ,GAAe,KAEnBtqB,SAASupB,eAAe,kBAAkBC,UAAYa,EACtD,IAAIM,EAAY,oBAAsBtB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WAAnG,0BACUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WADvF,0BAEUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WAFvF,kCAGkBnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WAH/F,0BAIUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WAJvF,0BAKUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WALvF,0BAMUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WANvF,0BAOUnB,EAAKuB,cAAc,GAAG,GAAGF,QAAQ,GAAK,YAAcrB,EAAKuB,cAAc,GAAG,GAAGJ,WACvGxqB,SAASupB,eAAe,oBAAoBC,UAAYmB,GAkiC7CE,OA16Bf,SAAajsB,GACT,MAAOspB,EAAM4C,EAASC,GAAcC,aAAe,SAE5CxC,EAASyC,EAAY3C,GAAiB0C,aAAe,WAC5D,IAAIE,EAAchD,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAG3DgqB,EAAOiB,EAAQjB,KAKnBQ,eAAeoD,EAAYhE,EAAce,SAC/BF,GAAcb,SACduB,GAAcvB,GACyC,IAAzDe,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAGkD,MAChD2qB,EAASjE,EAAa/O,QAAS8P,GAE/BkD,EAASlD,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAGkD,MAAOynB,GAKxE,SAASkD,EAASC,EAAUnD,GAExB,IAAIoD,EAAK,IAAIC,YAAY,+CAAiDF,GACtEtT,EAAU,GACduT,EAAGE,UAAY,SAAU3gB,GAErBgI,QAAQ4V,IAAI5d,GACZ,MAAMwe,EAAOxe,EAAMwe,MAAQ,GACf,UAARA,GACAtR,EAAUA,EAAQuR,WAAW,OAAQ,MACrCpB,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAG6a,QAAUsO,GAAG1S,OAAO+D,GAASuR,WAAW,MAAO,IAAIA,WAAW,OAAQ,IAAIA,WAAW,SAAU,QAAQA,WAAW,UAAW,SAASA,WAAW,OAAQ,IAAIA,WAAW,QAAS,IACjOtB,GAAcE,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,IAAI,GAI/D+tB,EAAGG,UAGS,IAARpC,GAAsB,KAARA,EACdtR,GAAWsR,EAEXtR,EAAUA,EAAUsR,EAAO,KAM/BnB,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAG6a,SAAWiR,EAC3DrB,GAAcE,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,IAAI,KAU3E,MAAOmuB,EAASC,GAAc3tB,IAAM4tB,UAAS,GAC7C,OACI3V,eAAA,OAAKnW,MAAO,CAACiH,MAAO,MAAO8kB,OAAQ,QAAQlvB,SAAA,CACvCsZ,eAAA,OAAK6V,GAAG,cAAchsB,MAAO,CACzBisB,MAAO,OACP1T,SAAU,WACVrR,OAAQ,MACRD,MAAO,MACPilB,QAAS,MACTC,YAAa,QACbnI,YAAa,WACfnnB,SAAA,CACEK,cAAA,OAAK8C,MAAO,CAACuY,SAAU,WAAYrR,OAAQ,OAAQ8kB,GAAG,iBAAgBnvB,SAClEK,cAACR,EAAa,CAAAG,SACVK,cAAC2gB,GAAW,CAACmO,GAAG,iBAAgBnvB,SAS3BurB,EAAKpB,aAAalpB,KAAI,CAACwa,EAAS8T,IAE7BjW,eAAA,OAAAtZ,SAAA,CAGKyb,EAAQ2O,QACJ/pB,cAACgb,GAAO,CAACzZ,KAAK,QAAQ4Z,MAAOC,IAE7Bpb,cAACgb,GAAO,CAACG,MAAOC,IAGjB8S,EAAY9S,SAAWA,EAAQA,QAEvBpb,cAAA,OAAKJ,UAAU,mBAAkBD,SAC5BuuB,EAAYjY,QAAQrV,KAAI,CAACgV,EAAQsZ,IAEnB,kBAAVtZ,GAAwC,kBAAVA,GAAwC,uBAAVA,GAA8C,iBAAVA,GAAwC,kBAAVA,GAAwC,qBAAVA,GAA4C,uBAAVA,GAA6C,QAAVA,GAA8B,yBAAVA,GAA+C,qCAAVA,GAA4D,oCAAVA,GAA0D,uCAAVA,GAA6D,cAAVA,GAAoC,gBAAVA,GAAsC,sBAAVA,EAE9d5V,cAAA,UAAQJ,UAAU,wBACVuvB,QAASA,KAEL,IAAIhF,EAAe,CACf/O,QAASxF,EACTsU,cAAegE,EAAYhE,cAC3BM,eAAgB0D,EAAY1D,eAC5BE,QAASwD,EAAYxD,QACrBH,KAAM2D,EAAY3D,KAClBH,QAAS8D,EAAY9D,QACrBC,YAAa6D,EAAY7D,YACzBC,WAAY4D,EAAY5D,WACxBK,iBAAkBuD,EAAYvD,iBAC9BC,oBAAqBsD,EAAYtD,oBACjCC,KAAMqD,EAAYrD,KAClBd,SAAS,EACT3H,MAAO8L,EAAY9L,MACnBhI,OAAQ,OACRnE,QAAS,GACToE,SAAU,WACVpM,UAAW,WACXmhB,KAAMlB,EAAYkB,KAClBC,eAAgBnB,EAAYmB,eAC5B5C,WAAYyB,EAAYzB,WACxBC,UAAWwB,EAAYxB,UACvBhC,QAASwD,EAAYxD,QACrB4E,QAASpB,EAAYoB,QACrBC,MAAOrB,EAAYqB,MACnBnF,QAAS8D,EAAY9D,QACrBoF,YAAatB,EAAYsB,YACzB/E,gBAAiByD,EAAYzD,gBAC7BgF,OAAO,GAEX5Z,QAAQ4V,IAAItB,GACZa,GAAcb,GACduB,GAAcvB,GACdtU,QAAQ4V,IAAI7V,IAEdjW,SACLiW,IAKLqD,eAAA,UAAQrZ,UAAU,kBAAkBuvB,QAASA,KAEzC,IAAIhF,EAAe,CACf/O,QAASxF,EACTsU,cAAegE,EAAYhE,cAC3BM,eAAgB0D,EAAY1D,eAC5BE,QAASwD,EAAYxD,QACrBH,KAAM2D,EAAY3D,KAClBH,QAAS8D,EAAY9D,QACrBC,YAAa6D,EAAY7D,YACzBC,WAAY4D,EAAY5D,WACxBK,iBAAkBuD,EAAYvD,iBAC9BC,oBAAqBsD,EAAYtD,oBACjCC,KAAMqD,EAAYrD,KAClBd,SAAS,EACT3H,MAAO8L,EAAY9L,MACnBhI,OAAQ,OACRnE,QAAS,GACToE,SAAU,WACVpM,UAAW,WACXmhB,KAAMlB,EAAYkB,KAClBC,eAAgBnB,EAAYmB,eAC5B5C,WAAYyB,EAAYzB,WACxBC,UAAWwB,EAAYxB,UACvBhC,QAASwD,EAAYxD,QACrB4E,QAASpB,EAAYoB,QACrBC,MAAOrB,EAAYqB,MACnBnF,QAAS8D,EAAY9D,QACrBoF,YAAatB,EAAYsB,YACzB/E,gBAAiByD,EAAYzD,gBAC7BgF,OAAO,EACPhsB,MAAOyqB,EAAYzqB,OAEvBoS,QAAQ4V,IAAItB,GACgB,gCAAxBA,EAAa/O,SACb4P,GAAcb,GACduB,GAAcvB,IACiB,gCAAxBA,EAAa/O,SACpB+S,EAAYhE,EAAce,GAI9BrV,QAAQ4V,IAAI7V,IACdjW,SAAA,CACGiW,EAAO5V,cAAA,gBAQ5BA,cAAA,OAAKJ,UAAU,mBAAkBD,SAC5Byb,EAAQnF,QAAQrV,KAAI,CAACgV,EAAQsZ,IAC1BlvB,cAAA,UAAQJ,UAAU,sBAAsB+sB,UAAU,EAAKhtB,SAClDiW,mBAmB7C5V,cAAA,OAAK8C,MAAO,CAACkH,OAAQ,KAAMD,MAAO,OAAQyK,UAAW,MAAM7U,SA8CvDsZ,eAAA,OAAKnW,MAAO,CAACuY,SAAU,WAAYvH,QAAS,SAAU4S,WAAY,UAAU/mB,SAAA,CAClFK,cAAA,YACI8C,MAAO,CAACiH,MAAO,MAAOgK,WAAY,MAAO2b,SAAU,QACnDZ,GAAG,WACHa,YAAY,oDACZC,WAAS,EACTC,KAAK,IACLlD,SAAS,QAGT/kB,IAAKmS,IACGA,GACAA,EAAKvV,SAGbsrB,UAAW/E,UACP,GAAiB,IAAbniB,EAAEmnB,SAAiBnnB,EAAEqG,SACrBrG,EAAE+E,iBACF3K,SAASupB,eAAe,YAAY/V,OAAS,UAC1C,GAAiB,IAAb5N,EAAEmnB,QAAe,CACxBnnB,EAAE+E,iBACF,IAAIwc,EAAe,CACf/O,QAASpY,SAASupB,eAAe,YAAY/V,MAC7C0T,cAAegE,EAAYhE,cAC3BM,eAAgB0D,EAAY1D,eAC5BE,QAASwD,EAAYxD,QACrBH,KAAM2D,EAAY3D,KAClBH,QAAS8D,EAAY9D,QACrBE,WAAY4D,EAAY5D,WACxBK,iBAAkBuD,EAAYvD,iBAC9BC,oBAAqBsD,EAAYtD,oBACjCC,KAAMqD,EAAYrD,KAClBd,SAAS,EAET3H,MAAO8L,EAAY9L,MACnBhI,OAAQ,OACRnE,QAAS,GACToE,SAAU,WACVpM,UAAW,WACXmhB,KAAMlB,EAAYkB,KAClBC,eAAgBnB,EAAYmB,eAC5B5C,WAAYyB,EAAYzB,WACxBC,UAAWwB,EAAYxB,UACvBhC,QAASwD,EAAYxD,QACrB4E,QAASpB,EAAYoB,QACrBC,MAAOrB,EAAYqB,MACnBnF,QAAS8D,EAAY9D,QACrBoF,YAAatB,EAAYsB,YACzBnF,YAAa6D,EAAY7D,YACzBI,gBAAiByD,EAAYzD,gBAC7BhnB,MAAOyqB,EAAYzqB,OAGvB,GAA0B,qBAAtB0mB,EAAa/H,OAAsD,qCAAtB+H,EAAa/H,OAAsE,iDAAtB+H,EAAa/H,OAA2E,sDAAf+H,EACnLgE,EAAYhE,EAAce,QAEzB,GAA0B,sDAAtBf,EAAa/H,MAA+D,CACrE8I,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAG6a,QAC5D+S,EAAYhE,EAAce,QAG1BF,GAAcb,GACduB,GAAcvB,GAElBnnB,SAASupB,eAAe,YAAY/V,MAAQ,OAQ9CxW,cAAA,UAAQJ,UAAU,eAAeuvB,QAASpE,UACtC,IAAIZ,EAAe,CACf/O,QAASpY,SAASupB,eAAe,YAAY/V,MAC7C0T,cAAegE,EAAYhE,cAC3BM,eAAgB0D,EAAY1D,eAC5BE,QAASwD,EAAYxD,QACrBH,KAAM2D,EAAY3D,KAClBH,QAAS8D,EAAY9D,QACrBC,YAAa6D,EAAY7D,YACzBC,WAAY4D,EAAY5D,WACxBK,iBAAkBuD,EAAYvD,iBAC9BC,oBAAqBsD,EAAYtD,oBACjCC,KAAMqD,EAAYrD,KAClBd,SAAS,EAET3H,MAAO8L,EAAY9L,MACnBhI,OAAQ,OACRnE,QAAS,GACToE,SAAU,WACVpM,UAAW,WACXmhB,KAAMlB,EAAYkB,KAClBC,eAAgBnB,EAAYmB,eAC5B5C,WAAYyB,EAAYzB,WACxBC,UAAWwB,EAAYxB,UACvBhC,QAASwD,EAAYxD,QACrB4E,QAASpB,EAAYoB,QACrBC,MAAOrB,EAAYqB,MACnBnF,QAAS8D,EAAY9D,QACrBoF,YAAatB,EAAYsB,YACzB/E,gBAAiByD,EAAYzD,iBAIjC,GAA0B,qBAAtBN,EAAa/H,OAAsD,qCAAtB+H,EAAa/H,OAAsE,iDAAtB+H,EAAa/H,OAA2E,sDAAf+H,EACrLgE,EAAYhE,EAAce,QAEzB,GAA0B,sDAAtBf,EAAa/H,MAA+D,CACrE8I,EAAKpB,aAAaoB,EAAKpB,aAAavpB,OAAS,GAAG6a,QAC5D+S,EAAYhE,EAAce,QAG1BF,GAAcb,GACduB,GAAcvB,GAEhBnnB,SAASupB,eAAe,YAAY/V,MAAQ,IAI9C7W,SAAC,kBAMfK,cAAA,OAAK8C,MAAO,CACRisB,MAAO,SACP1T,SAAU,WACVwT,OAAQ,OACR7kB,OAAQ,MAERD,MAAO,MACPilB,QAAS,OACXrvB,SAmREK,cAAA,OAAKJ,UAAU,iBAAgBD,SAC3BK,cAACgwB,KAAM,CACHtB,QAASA,EACTuB,QAASA,KACLtB,GAAW,IAEfuB,OAAQ3F,YCpgCjB4F,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK7wB,IAAkD,IAAjD,OAAE8wB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlxB,EACpE8wB,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS5Z,OACPhX,cAACgB,IAAM6vB,WAAU,CAAAlxB,SACfK,cAAC6tB,GAAG,MAEN7qB,SAASupB,eAAe,SAM1B4D,O","file":"static/js/main.4ead6ad8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/color-wheel.1e5446c4.png\";","const prefix = \"cs\";\n\nexport { prefix };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MainContainer = ({ responsive, children, className, ...rest }) => {\n  const cName = `${prefix}-main-container`;\n\n  return (\n    <div\n      {...rest}\n      className={classNames(\n        cName,\n        { [`${cName}--responsive`]: responsive },\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nMainContainer.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Is container responsive. */\n  responsive: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMainContainer.defaultProps = {\n  children: undefined,\n  responsive: false,\n};\n\nexport default MainContainer;\n","import MainContainer from \"./MainContainer\";\nexport * from \"./MainContainer\";\nexport default MainContainer;\n","import React from \"react\";\n\nexport const noop = () => {};\n\n/**\n * Tests if children are nil in React and Preact.\n * @param {Object} children The children prop of a component.\n * @returns {Boolean}\n */\nexport const isChildrenNil = (children) =>\n  children === null ||\n  children === undefined ||\n  (Array.isArray(children) && children.length === 0);\n\n/**\n * Gets only specified types children\n * @param children\n * @param Array types\n * @returns {[]}\n */\nexport const getChildren = (children, types) => {\n  const ret = [];\n  const strTypes = types.map((t) => t.displayName || t.name);\n\n  React.Children.toArray(children).forEach((item) => {\n    const idx = types.indexOf(item.type);\n    if (idx !== -1) {\n      ret[idx] = item;\n    } else {\n      const is = item?.props?.as ?? item?.props?.is;\n      const typeofIs = typeof is;\n      if (typeofIs === \"function\") {\n        // Type\n        const fIdx = types.indexOf(is);\n        if (fIdx !== -1) {\n          ret[fIdx] = React.cloneElement(item, { ...item.props, as: null }); // Cloning to remove \"as\" attribute, which is not desirable\n        }\n      } else if (typeofIs === \"object\") {\n        // forward ref\n\n        const typeName = is.name || is.displayName;\n        const tIdx = strTypes.indexOf(typeName);\n        if (tIdx !== -1) {\n          ret[tIdx] = React.cloneElement(item, { ...item.props, as: null }); // Cloning to remove \"as\" attribute, which is not desirable\n        }\n      } else if (typeofIs === \"string\") {\n        const sIdx = strTypes.indexOf(is);\n        if (sIdx !== -1) {\n          ret[sIdx] = item;\n        }\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const getComponentName = (component) => {\n  if (typeof component === \"string\") {\n    return component;\n  }\n\n  if (\"type\" in component) {\n    const componentType = typeof component.type;\n\n    if (componentType === \"function\" || componentType === \"object\") {\n      if (\"displayName\" in component.type) {\n        return component.type.displayName;\n      }\n\n      if (\"name\" in component.type) {\n        return component.type.name;\n      }\n    } else if (componentType === \"string\") {\n      return component.type;\n    }\n\n    return \"undefined\";\n  }\n\n  return \"undefined\";\n};\n\n/**\n * PropTypes validator.\n * Checks if all children is allowed by its types.\n * Empty string nodes are always allowed for convenience.\n * Returns function for propTypes\n * @param {Array} allowedTypes\n * @return {Function}\n */\nexport const allowedChildren = (allowedTypes) => (\n  props,\n  propName,\n  componentName\n) => {\n  const allowedTypesAsStrings = allowedTypes.map(\n    (t) => t.name || t.displayName\n  );\n\n  // Function as Child is not supported by React.Children... functions\n  // and can be antipattern: https://americanexpress.io/faccs-are-an-antipattern/\n  // But we don't check fd function is passed as children and its intentional\n  // Passing function as children has no effect in chat-ui-kit\n  const forbidden = React.Children.toArray(props[propName]).find((item) => {\n    if (typeof item === \"string\" && item.trim().length === 0) {\n      // Ignore string\n      return false;\n    }\n\n    if (allowedTypes.indexOf(item.type) === -1) {\n      const is = item?.props?.as || item?.props?.is;\n\n      const typeofIs = typeof is;\n\n      if (typeofIs === \"function\") {\n        // Type\n        return allowedTypes.indexOf(is) === -1;\n      } else if (typeofIs === \"object\") {\n        // Forward ref\n        const typeName = is.name || is.displayName;\n        return allowedTypesAsStrings.indexOf(typeName) === -1;\n      } else if (typeofIs === \"string\") {\n        return allowedTypesAsStrings.indexOf(is) === -1;\n      } else {\n        return true;\n      }\n    }\n\n    return undefined;\n  });\n\n  if (typeof forbidden !== \"undefined\") {\n    const typeName = getComponentName(forbidden);\n\n    const allowedNames = allowedTypes\n      .map((t) => t.name || t.displayName)\n      .join(\", \");\n    const errMessage = `\"${typeName}\" is not a valid child for ${componentName}. Allowed types: ${allowedNames}`;\n\n    return new Error(errMessage);\n  }\n};\n","/*!\n * perfect-scrollbar v1.5.0\n * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors\n * Licensed under MIT\n */\n\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === \"number\") {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement(\"div\");\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== \"undefined\" &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error(\"No element matching method supported\");\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) {\n    return matches(child, selector);\n  });\n}\n\nvar cls = {\n  main: \"ps\",\n  rtl: \"ps__rtl\",\n  element: {\n    thumb: function (x) {\n      return \"ps__thumb-\" + x;\n    },\n    rail: function (x) {\n      return \"ps__rail-\" + x;\n    },\n    consuming: \"ps__child--consume\",\n  },\n  state: {\n    focus: \"ps--focus\",\n    clicking: \"ps--clicking\",\n    active: function (x) {\n      return \"ps--active-\" + x;\n    },\n    scrolling: function (x) {\n      return \"ps--scrolling-\" + x;\n    },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(function () {\n    return i.isAlive && i.element.classList.remove(cls.state.scrolling(x));\n  }, i.settings.scrollingThreshold);\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind(eventName, handler) {\n  if (typeof this.handlers[eventName] === \"undefined\") {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n\n  var evts = [\"touchstart\", \"wheel\", \"touchmove\"];\n  if (evts.indexOf(eventName) !== -1) {\n    this.element.addEventListener(eventName, handler, { passive: false });\n  } else {\n    this.element.addEventListener(eventName, handler, false);\n  }\n};\n\nEventElement.prototype.unbind = function unbind(eventName, target) {\n  var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (\n    handler\n  ) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll() {\n  for (var name in this.handlers) {\n    this.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n  var this$1 = this;\n\n  return Object.keys(this.handlers).every(function (key) {\n    return this$1.handlers[key].length === 0;\n  });\n};\n\nObject.defineProperties(EventElement.prototype, prototypeAccessors);\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement(element) {\n  var ee = this.eventElements.filter(function (ee) {\n    return ee.element === element;\n  })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind(element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind(element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll() {\n  this.eventElements.forEach(function (e) {\n    return e.unbindAll();\n  });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once(element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === \"function\") {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nfunction processScrollDiff(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent,\n  disableOnYReachWhenNoScroll\n) {\n  if (useScrollingClass === void 0) useScrollingClass = true;\n  if (forceFireReachEvent === void 0) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === \"top\") {\n    fields = [\n      \"contentHeight\",\n      \"containerHeight\",\n      \"scrollTop\",\n      \"y\",\n      \"up\",\n      \"down\",\n    ];\n  } else if (axis === \"left\") {\n    fields = [\n      \"contentWidth\",\n      \"containerWidth\",\n      \"scrollLeft\",\n      \"x\",\n      \"left\",\n      \"right\",\n    ];\n  } else {\n    throw new Error(\"A proper axis should be provided\");\n  }\n\n  processScrollDiff$1(\n    i,\n    diff,\n    fields,\n    useScrollingClass,\n    forceFireReachEvent,\n    disableOnYReachWhenNoScroll\n  );\n}\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent,\n  disableOnYReachWhenNoScroll\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if (useScrollingClass === void 0) useScrollingClass = true;\n  if (forceFireReachEvent === void 0) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  const eventFlag =\n    disableOnYReachWhenNoScroll === true\n      ? i[contentHeight] !== i[containerHeight]\n      : true;\n\n  // 1 for subpixel rounding\n  if (eventFlag && element[scrollTop] < 1) {\n    i.reach[y] = \"start\";\n  }\n\n  // 1 for subpixel rounding\n  if (\n    eventFlag &&\n    element[scrollTop] > i[contentHeight] - i[containerHeight] - 1\n  ) {\n    i.reach[y] = \"end\";\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent(\"ps-scroll-\" + y));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent(\"ps-scroll-\" + up));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent(\"ps-scroll-\" + down));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent(\"ps-\" + y + \"-reach-\" + i.reach[y]));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, \"input,[contenteditable]\") ||\n    matches(el, \"select,[contenteditable]\") ||\n    matches(el, \"textarea,[contenteditable]\") ||\n    matches(el, \"button,[contenteditable]\")\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== \"undefined\" &&\n    \"WebkitAppearance\" in document.documentElement.style,\n  supportsTouch:\n    typeof window !== \"undefined\" &&\n    (\"ontouchstart\" in window ||\n      (\"maxTouchPoints\" in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== \"undefined\" && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== \"undefined\" &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nfunction updateGeometry(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n  var rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.round(rect.width);\n  i.containerHeight = Math.round(rect.height);\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail(\"x\")).forEach(function (el) {\n      return remove(el);\n    });\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail(\"y\")).forEach(function (el) {\n      return remove(el);\n    });\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active(\"x\"));\n  } else {\n    element.classList.remove(cls.state.active(\"x\"));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active(\"y\"));\n  } else {\n    element.classList.remove(cls.state.active(\"y\"));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nfunction clickRail(i) {\n  var element = i.element;\n\n  i.event.bind(i.scrollbarY, \"mousedown\", function (e) {\n    return e.stopPropagation();\n  });\n  i.event.bind(i.scrollbarYRail, \"mousedown\", function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, \"mousedown\", function (e) {\n    return e.stopPropagation();\n  });\n  i.event.bind(i.scrollbarXRail, \"mousedown\", function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n\nfunction dragThumb(i) {\n  bindMouseScrollHandler(i, [\n    \"containerWidth\",\n    \"contentWidth\",\n    \"pageX\",\n    \"railXWidth\",\n    \"scrollbarX\",\n    \"scrollbarXWidth\",\n    \"scrollLeft\",\n    \"x\",\n    \"scrollbarXRail\",\n  ]);\n  bindMouseScrollHandler(i, [\n    \"containerHeight\",\n    \"contentHeight\",\n    \"pageY\",\n    \"railYHeight\",\n    \"scrollbarY\",\n    \"scrollbarYHeight\",\n    \"scrollTop\",\n    \"y\",\n    \"scrollbarYRail\",\n  ]);\n}\n\nfunction bindMouseScrollHandler(i, ref) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, \"mousemove\", mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, \"mousemove\", mouseMoveHandler);\n      i.event.once(i.ownerDocument, \"mouseup\", mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, \"touchmove\", mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], \"mousedown\", function (e) {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], \"touchstart\", function (e) {\n    bindMoves(e, true);\n  });\n}\n\nfunction keyboard(i) {\n  var element = i.element;\n\n  var elementHovered = function () {\n    return matches(element, \":hover\");\n  };\n  var scrollbarFocused = function () {\n    return matches(i.scrollbarX, \":focus\") || matches(i.scrollbarY, \":focus\");\n  };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, \"keydown\", function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === \"IFRAME\") {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n\nfunction wheel(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === \"undefined\" || typeof deltaY === \"undefined\") {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector(\"select:focus\")) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== \"undefined\") {\n    i.event.bind(element, \"wheel\", mousewheelHandler);\n  } else if (typeof window.onmousewheel !== \"undefined\") {\n    i.event.bind(element, \"mousewheel\", mousewheelHandler);\n  }\n}\n\nfunction touch(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    const scrollLeft = Math.ceil(element.scrollLeft);\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (!i.settings.wheelPropagation) {\n      return true;\n    }\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (i.settings.suppressScrollY) {\n        return false;\n      }\n\n      if (deltaY > 0) {\n        return scrollTop !== 0;\n      }\n\n      if (deltaY < 0) {\n        return scrollTop < i.contentHeight - i.containerHeight;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (i.settings.suppressScrollX) {\n        return false;\n      }\n      if (deltaX > 0) {\n        return scrollLeft !== 0;\n      }\n\n      if (deltaY < 0) {\n        return scrollLeft < i.contentWidth - i.containerWidth;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === \"pen\" && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== \"mouse\" &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      //if (shouldPrevent(differenceX, differenceY)) {\n      if (e.cancelable && shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function () {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, \"touchstart\", touchStart);\n    i.event.bind(element, \"touchmove\", touchMove);\n    i.event.bind(element, \"touchend\", touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, \"pointerdown\", touchStart);\n      i.event.bind(element, \"pointermove\", touchMove);\n      i.event.bind(element, \"pointerup\", touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, \"MSPointerDown\", touchStart);\n      i.event.bind(element, \"MSPointerMove\", touchMove);\n      i.event.bind(element, \"MSPointerUp\", touchEnd);\n    }\n  }\n}\n\nvar defaultSettings = function () {\n  return {\n    handlers: [\"click-rail\", \"drag-thumb\", \"keyboard\", \"wheel\", \"touch\"],\n    maxScrollbarLength: null,\n    minScrollbarLength: null,\n    scrollingThreshold: 1000,\n    scrollXMarginOffset: 0,\n    scrollYMarginOffset: 0,\n    suppressScrollX: false,\n    suppressScrollY: false,\n    swipeEasing: true,\n    useBothWheelAxes: false,\n    wheelPropagation: true,\n    wheelSpeed: 1,\n  };\n};\n\nvar handlers = {\n  \"click-rail\": clickRail,\n  \"drag-thumb\": dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if (userSettings === void 0) userSettings = {};\n\n  if (typeof element === \"string\") {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error(\"no element is specified to initialize PerfectScrollbar\");\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () {\n    return element.classList.add(cls.state.focus);\n  };\n  var blur = function () {\n    return element.classList.remove(cls.state.focus);\n  };\n\n  this.isRtl = get(element).direction === \"rtl\";\n  if (this.isRtl === true) {\n    element.classList.add(cls.rtl);\n  }\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail(\"x\"));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb(\"x\"));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute(\"tabindex\", 0);\n  this.event.bind(this.scrollbarX, \"focus\", focus);\n  this.event.bind(this.scrollbarX, \"blur\", blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: \"block\" });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: \"\" });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail(\"y\"));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb(\"y\"));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute(\"tabindex\", 0);\n  this.event.bind(this.scrollbarY, \"focus\", focus);\n  this.event.bind(this.scrollbarY, \"blur\", blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: \"block\" });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: \"\" });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? \"start\"\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n        ? \"end\"\n        : null,\n    y:\n      element.scrollTop <= 0\n        ? \"start\"\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n        ? \"end\"\n        : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) {\n    return handlers[handlerName](this$1);\n  });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, \"scroll\", function (e) {\n    return this$1.onScroll(e);\n  });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update(\n  disableOnYReachWhenNoScroll\n) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: \"block\" });\n  set(this.scrollbarYRail, { display: \"block\" });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: \"none\" });\n  set(this.scrollbarYRail, { display: \"none\" });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, \"top\", 0, false, true, disableOnYReachWhenNoScroll);\n  processScrollDiff(this, \"left\", 0, false, true, disableOnYReachWhenNoScroll);\n\n  set(this.scrollbarXRail, { display: \"\" });\n  set(this.scrollbarYRail, { display: \"\" });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll(e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, \"top\", this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    \"left\",\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy() {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses() {\n  this.element.className = this.element.className\n    .split(\" \")\n    .filter(function (name) {\n      return !name.match(/^ps([-_].+|)$/);\n    })\n    .join(\" \");\n};\n\nexport default PerfectScrollbar;\n//# sourceMappingURL=perfect-scrollbar.esm.js.map\n","// https://github.com/goldenyz/react-perfect-scrollbar/\nimport React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport PerfectScrollbar from \"./perfect-scrollbar.esm.js\";\n\nconst handlerNameByEvent = {\n  \"ps-scroll-y\": \"onScrollY\",\n  \"ps-scroll-x\": \"onScrollX\",\n  \"ps-scroll-up\": \"onScrollUp\",\n  \"ps-scroll-down\": \"onScrollDown\",\n  \"ps-scroll-left\": \"onScrollLeft\",\n  \"ps-scroll-right\": \"onScrollRight\",\n  \"ps-y-reach-start\": \"onYReachStart\",\n  \"ps-y-reach-end\": \"onYReachEnd\",\n  \"ps-x-reach-start\": \"onXReachStart\",\n  \"ps-x-reach-end\": \"onXReachEnd\",\n};\nObject.freeze(handlerNameByEvent);\n\nexport default class ScrollBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRef = this.handleRef.bind(this);\n    this._handlerByEvent = {};\n  }\n\n  componentDidMount() {\n    if (this.props.option) {\n      console.warn(\n        'react-perfect-scrollbar: the \"option\" prop has been deprecated in favor of \"options\"'\n      );\n    }\n\n    this._ps = new PerfectScrollbar(\n      this._container,\n      this.props.options || this.props.option\n    );\n    // hook up events\n    this._updateEventHook();\n    this._updateClassName();\n  }\n\n  componentDidUpdate(prevProps) {\n    this._updateEventHook(prevProps);\n\n    this.updateScroll();\n\n    if (prevProps.className !== this.props.className) {\n      this._updateClassName();\n    }\n  }\n\n  componentWillUnmount() {\n    // unhook up evens\n    Object.keys(this._handlerByEvent).forEach((key) => {\n      const value = this._handlerByEvent[key];\n\n      if (value) {\n        this._container.removeEventListener(key, value, false);\n      }\n    });\n    this._handlerByEvent = {};\n    this._ps.destroy();\n    this._ps = null;\n  }\n\n  _updateEventHook(prevProps = {}) {\n    // hook up events\n    Object.keys(handlerNameByEvent).forEach((key) => {\n      const callback = this.props[handlerNameByEvent[key]];\n      const prevCallback = prevProps[handlerNameByEvent[key]];\n      if (callback !== prevCallback) {\n        if (prevCallback) {\n          const prevHandler = this._handlerByEvent[key];\n          this._container.removeEventListener(key, prevHandler, false);\n          this._handlerByEvent[key] = null;\n        }\n        if (callback) {\n          const handler = () => callback(this._container);\n          this._container.addEventListener(key, handler, false);\n          this._handlerByEvent[key] = handler;\n        }\n      }\n    });\n  }\n\n  _updateClassName() {\n    const { className } = this.props;\n\n    const psClassNames = this._container.className\n      .split(\" \")\n      .filter((name) => name.match(/^ps([-_].+|)$/))\n      .join(\" \");\n\n    if (this._container) {\n      this._container.className = `scrollbar-container${\n        className ? ` ${className}` : \"\"\n      }${psClassNames ? ` ${psClassNames}` : \"\"}`;\n    }\n  }\n\n  updateScroll() {\n    this.props.onSync(this._ps);\n  }\n\n  handleRef(ref) {\n    this._container = ref;\n    this.props.containerRef(ref);\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      option,\n      options,\n      containerRef,\n      onScrollY,\n      onScrollX,\n      onScrollUp,\n      onScrollDown,\n      onScrollLeft,\n      onScrollRight,\n      onYReachStart,\n      onYReachEnd,\n      onXReachStart,\n      onXReachEnd,\n      component,\n      onSync,\n      children,\n      ...remainProps\n    } = this.props;\n    const Comp = component;\n\n    return (\n      <Comp style={style} ref={this.handleRef} {...remainProps}>\n        {children}\n      </Comp>\n    );\n  }\n}\n\nScrollBar.defaultProps = {\n  className: \"\",\n  style: undefined,\n  option: undefined,\n  options: undefined,\n  containerRef: () => {},\n  onScrollY: undefined,\n  onScrollX: undefined,\n  onScrollUp: undefined,\n  onScrollDown: undefined,\n  onScrollLeft: undefined,\n  onScrollRight: undefined,\n  onYReachStart: undefined,\n  onYReachEnd: undefined,\n  onXReachStart: undefined,\n  onXReachEnd: undefined,\n  onSync: (ps) => ps.update(),\n  component: \"div\",\n};\n\nScrollBar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  option: PropTypes.object,\n  options: PropTypes.object,\n  containerRef: PropTypes.func,\n  onScrollY: PropTypes.func,\n  onScrollX: PropTypes.func,\n  onScrollUp: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  onScrollLeft: PropTypes.func,\n  onScrollRight: PropTypes.func,\n  onYReachStart: PropTypes.func,\n  onYReachEnd: PropTypes.func,\n  onXReachStart: PropTypes.func,\n  onXReachEnd: PropTypes.func,\n  onSync: PropTypes.func,\n  component: PropTypes.string,\n};\n","import Scrollbar from \"./ReactPerfectScrollbar\";\nexport * from \"./ReactPerfectScrollbar\";\nexport default Scrollbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const Loader = ({ className, variant, children, ...rest }) => {\n  const cName = `${prefix}-loader`;\n  const textClass =\n    React.Children.count(children) > 0 ? `${cName}--content` : \"\";\n  return (\n    <div\n      {...rest}\n      className={classNames(\n        cName,\n        textClass,\n        { [`${cName}--variant-${variant}`]: variant !== \"default\" },\n        className\n      )}\n      role=\"status\"\n    >\n      {children}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Loader variant */\n  variant: PropTypes.oneOf([\"default\"]),\n};\n\nLoader.defaultProps = {\n  className: undefined,\n  title: undefined,\n  variant: \"default\",\n};\n\nexport default Loader;\n","import Loader from \"./Loader\";\nexport * from \"./Loader\";\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const Overlay = ({ className, children, blur, grayscale, ...rest }) => {\n  const cName = `${prefix}-overlay`;\n  const blurClass = `${cName}--blur`;\n  const grayscaleClass = `${cName}--grayscale`;\n\n  return (\n    <div\n      {...rest}\n      className={classNames(\n        cName,\n        { [blurClass]: blur },\n        { [grayscaleClass]: grayscale },\n        className\n      )}\n    >\n      <div className={`${cName}__content`}>{children}</div>\n    </div>\n  );\n};\n\nOverlay.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Blur overlayed content.\n   * This feature is experimental and have limited browser support\n   */\n  blur: PropTypes.bool,\n\n  /**\n   * Grayscale overlayed content.\n   * This feature is experimental and have limited browser support\n   */\n  grayscale: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  className: \"\",\n  children: undefined,\n  blur: false,\n  grayscale: false,\n};\n\nexport default Overlay;\n","import Overlay from \"./Overlay\";\nexport * from \"./Overlay\";\nexport default Overlay;\n","export const StatusEnum = [\n  \"available\",\n  \"unavailable\",\n  \"away\",\n  \"dnd\",\n  \"invisible\",\n  \"eager\",\n];\n\nexport const SizeEnum = [\"xs\", \"sm\", \"md\", \"lg\", \"fluid\"];\n\nexport const MessageTypeEnum = [\"html\", \"text\", \"image\", \"custom\"];\n\nexport default {\n  SizeEnum,\n  StatusEnum,\n  MessageTypeEnum,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { StatusEnum, SizeEnum } from \"../enums\";\nimport { prefix } from \"../settings\";\n\nexport const Status = ({\n  status,\n  size,\n  className,\n  name,\n  selected,\n  children,\n  ...rest\n}) => {\n  const cName = `${prefix}-status`;\n  const bullet = <div className={`${cName}__bullet`}></div>;\n  const named = name || children;\n\n  return (\n    <div\n      {...rest}\n      aria-selected={selected === true ? \"\" : null}\n      className={classNames(\n        cName,\n        `${cName}--${size}`,\n        `${cName}--${status}`,\n        { [`${cName}--selected`]: selected },\n        { [`${cName}--named`]: named },\n        className\n      )}\n    >\n      {bullet}\n      {named && (\n        <div className={`${cName}__name`}>{name ? name : children}</div>\n      )}\n    </div>\n  );\n};\n\nStatus.propTypes = {\n  /** Primary content */\n  children: PropTypes.node,\n\n  /** Status. */\n  status: PropTypes.oneOf(StatusEnum).isRequired,\n\n  /** Size. */\n  size: PropTypes.oneOf(SizeEnum),\n\n  /** Name */\n  name: PropTypes.node,\n\n  /** Selected */\n  selected: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nStatus.defaultProps = {\n  size: \"md\",\n};\n\nexport default Status;\n","import React, { useRef, forwardRef, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { prefix } from \"../settings\";\nimport classNames from \"classnames\";\nimport { Status } from \"../Status/Status\";\nimport { SizeEnum, StatusEnum } from \"../enums\";\n\nfunction AvatarInner(\n  { name, src, size, status, className, active, children, ...rest },\n  ref\n) {\n  const cName = `${prefix}-avatar`;\n  const sizeClass = typeof size !== \"undefined\" ? ` ${cName}--${size}` : \"\";\n\n  const avatarRef = useRef();\n\n  useImperativeHandle(ref, () => ({\n    focus: () => avatarRef.current.focus(),\n  }));\n\n  return (\n    <div\n      ref={avatarRef}\n      {...rest}\n      className={classNames(\n        `${cName}${sizeClass}`,\n        { [`${cName}--active`]: active },\n        className\n      )}\n    >\n      {children ? (\n        children\n      ) : (\n        <>\n          <img src={src} alt={name} />\n          {typeof status === \"string\" && (\n            <Status status={status} size={size} />\n          )}{\" \"}\n        </>\n      )}\n    </div>\n  );\n}\n\nconst Avatar = forwardRef(AvatarInner);\nAvatar.displayName = \"Avatar\";\n\nAvatar.propTypes = {\n  /** Primary content */\n  children: PropTypes.node,\n\n  /**\n   * User name/nickname/full name for displaying initials and image alt description\n   */\n  name: PropTypes.string,\n\n  /** Avatar image source */\n  src: PropTypes.string,\n\n  /** Size */\n  size: PropTypes.oneOf(SizeEnum),\n\n  /** Status. */\n  status: PropTypes.oneOf(StatusEnum),\n\n  /** Active */\n  active: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nAvatarInner.propTypes = Avatar.propTypes;\n\nAvatarInner.defaultProps = {\n  name: \"\",\n  src: \"\",\n  size: \"md\",\n  active: false,\n};\n\nAvatar.defaultProps = AvatarInner.defaultProps;\n\nexport { Avatar };\nexport default Avatar;\n","import Avatar from \"./Avatar\";\nexport * from \"./Avatar\";\nexport default Avatar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageHeader = ({\n  sender,\n  sentTime,\n  children,\n  className,\n  ...rest\n}) => {\n  const cName = `${prefix}-message__header`;\n\n  return (\n    <div {...rest} className={classNames(cName, className)}>\n      {typeof children !== \"undefined\" ? (\n        children\n      ) : (\n        <>\n          <div className={`${prefix}-message__sender-name`}>{sender}</div>\n          <div className={`${prefix}-message__sent-time`}>{sentTime}</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nMessageHeader.displayName = \"Message.Header\";\n\nMessageHeader.propTypes = {\n  sender: PropTypes.string,\n  sentTime: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageHeader.defaultProps = {\n  sender: \"\",\n  sentTime: \"\",\n  children: undefined,\n};\n\nexport default MessageHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { prefix } from \"../settings\";\n\nexport const MessageFooter = ({\n  sender,\n  sentTime,\n  children,\n  className,\n  ...rest\n}) => {\n  const cName = `${prefix}-message__footer`;\n\n  return (\n    <div {...rest} className={classNames(cName, className)}>\n      {typeof children !== \"undefined\" ? (\n        children\n      ) : (\n        <>\n          <div className={`${prefix}-message__sender-name`}>{sender}</div>\n          <div className={`${prefix}-message__sent-time`}>{sentTime}</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nMessageFooter.displayName = \"Message.Footer\";\n\nMessageFooter.propTypes = {\n  sender: PropTypes.string,\n  sentTime: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageFooter.defaultProps = {\n  sender: \"\",\n  sentTime: \"\",\n  children: undefined,\n};\n\nexport default MessageFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageCustomContent = ({ children, className }) => {\n  const cName = `${prefix}-message__custom-content`;\n\n  return <div className={classNames(cName, className)}>{children}</div>;\n};\n\nMessageCustomContent.displayName = \"Message.CustomContent\";\n\nMessageCustomContent.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageCustomContent.defaultProps = {};\n\nexport default MessageCustomContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageImageContent = ({ src, width, height, alt, className }) => {\n  const cName = `${prefix}-message__image-content`;\n\n  const style = {\n    width:\n      typeof width === \"number\"\n        ? `${width}px`\n        : typeof width === \"string\"\n        ? width\n        : undefined,\n    height:\n      typeof height === \"number\"\n        ? `${height}px`\n        : typeof height === \"string\"\n        ? height\n        : undefined,\n  };\n\n  return (\n    <div className={classNames(cName, className)}>\n      <img src={src} style={style} alt={alt} />\n    </div>\n  );\n};\n\nMessageImageContent.displayName = \"Message.ImageContent\";\n\nMessageImageContent.propTypes = {\n  /** Image source*/\n  src: PropTypes.string,\n\n  /** Image width */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Image height */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Alternate text for image */\n  alt: PropTypes.string,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageImageContent.defaultProps = {};\n\nexport default MessageImageContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageHtmlContent = ({ html, className }) => {\n  const cName = `${prefix}-message__html-content`;\n\n  const createMarkup = () => ({ __html: html });\n\n  return (\n    <div\n      className={classNames(cName, className)}\n      dangerouslySetInnerHTML={createMarkup()}\n    />\n  );\n};\n\nMessageHtmlContent.displayName = \"Message.HtmlContent\";\n\nMessageHtmlContent.propTypes = {\n  /**\n   * Html string will be rendered in component using dangerouslySetInnerHTML\n   */\n  html: PropTypes.string,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageHtmlContent.defaultProps = {};\n\nexport default MessageHtmlContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageTextContent = ({ text, className, children }) => {\n  const cName = `${prefix}-message__text-content`;\n\n  const content = children ?? text;\n\n  return <div className={classNames(cName, className)}>{content}</div>;\n};\n\nMessageTextContent.displayName = \"Message.TextContent\";\n\nMessageTextContent.propTypes = {\n  /** Primary content - message text */\n  children: PropTypes.string,\n\n  /** Message text. Property has precedence over children */\n  text: PropTypes.string,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageTextContent.defaultProps = {};\n\nexport default MessageTextContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { allowedChildren, getChildren, getComponentName } from \"../utils\";\nimport { prefix } from \"../settings\";\nimport Avatar from \"../Avatar\";\nimport MessageHeader from \"./MessageHeader\";\nimport MessageFooter from \"./MessageFooter\";\nimport MessageCustomContent from \"./MessageCustomContent\";\nimport MessageImageContent from \"./MessageImageContent\";\nimport MessageHtmlContent from \"./MessageHtmlContent\";\nimport MessageTextContent from \"./MessageTextContent\";\n\n/**\n * Chat message\n */\nexport const Message = ({\n  model: {\n    message,\n    sentTime,\n    sender,\n    direction,\n    position,\n    type: modelType,\n    payload: modelPayload,\n  },\n  avatarSpacer,\n  avatarPosition,\n  type,\n  payload: argPayload,\n  children,\n  className,\n  ...rest\n}) => {\n  const cName = `${prefix}-message`;\n\n  const [\n    avatar,\n    header,\n    footer,\n    htmlContent,\n    textContent,\n    imageContent,\n    customContent,\n  ] = getChildren(children, [\n    Avatar,\n    MessageHeader,\n    MessageFooter,\n    MessageHtmlContent,\n    MessageTextContent,\n    MessageImageContent,\n    MessageCustomContent,\n  ]);\n\n  const directionClass = (() => {\n    if (direction === 0 || direction === \"incoming\") {\n      return `${cName}--incoming`;\n    } else if (direction === 1 || direction === \"outgoing\") {\n      return `${cName}--outgoing`;\n    }\n  })();\n\n  const avatarPositionClass = ((position) => {\n    const classPrefix = `${cName}--avatar-`;\n    if (position === 0 || position === \"top-left\" || position === \"tl\") {\n      return `${classPrefix}tl`;\n    } else if (\n      position === 1 ||\n      position === \"top-right\" ||\n      position === \"tr\"\n    ) {\n      return `${classPrefix}tr`;\n    } else if (\n      position === 2 ||\n      position === \"bottom-right\" ||\n      position === \"br\"\n    ) {\n      return `${classPrefix}br`;\n    } else if (\n      position === 3 ||\n      position === \"bottom-left\" ||\n      position === \"bl\"\n    ) {\n      return `${classPrefix}bl`;\n    } else if (\n      position === 4 ||\n      position === \"center-left\" ||\n      position === \"cl\"\n    ) {\n      return `${classPrefix}cl`;\n    } else if (\n      position === 5 ||\n      position === \"center-right\" ||\n      position === \"cr\"\n    ) {\n      return `${classPrefix}cr`;\n    }\n  })(avatarPosition);\n\n  const positionClass = ((position) => {\n    const classPrefix = `${prefix}-message--`;\n    if (position === \"single\" || position === 0) {\n      return `${classPrefix}single`;\n    } else if (position === \"first\" || position === 1) {\n      return `${classPrefix}first`;\n    } else if (position === \"normal\" || position === 2) {\n      return \"\";\n    } else if (position === \"last\" || position === 3) {\n      return `${classPrefix}last`;\n    }\n  })(position);\n\n  const ariaLabel = (() => {\n    if (sender?.length > 0 && sentTime?.length > 0) {\n      return `${sender}: ${sentTime}`;\n    } else if (\n      sender?.length > 0 &&\n      (typeof sentTime === \"undefined\" || sentTime?.length === 0)\n    ) {\n      return sender;\n    } else {\n      return null;\n    }\n  })();\n\n  const childContent =\n    htmlContent ?? textContent ?? imageContent ?? customContent;\n\n  const messageContent =\n    childContent ??\n    (() => {\n      const messageType = modelType ?? type;\n\n      const payloadFromModel = modelPayload ?? message;\n      const payload = payloadFromModel ?? argPayload;\n\n      const payloadName =\n        typeof payload === \"object\" ? getComponentName(payload) : \"\";\n\n      if (messageType === \"html\" && payloadName !== \"Message.CustomContent\") {\n        return <MessageHtmlContent html={payload} />;\n      } else if (messageType === \"text\") {\n        return <MessageTextContent text={payload} />;\n      } else if (messageType === \"image\") {\n        return <MessageImageContent {...payload} />;\n      } else if (\n        messageType === \"custom\" ||\n        payloadName === \"Message.CustomContent\"\n      ) {\n        return payload;\n      }\n    })();\n\n  return (\n    <section\n      {...rest}\n      aria-label={ariaLabel}\n      className={classNames(\n        cName,\n        directionClass,\n        { [`${cName}--avatar-spacer`]: avatarSpacer },\n        positionClass,\n        avatarPositionClass,\n        className\n      )}\n      {...{ [`data-${prefix}-message`]: \"\" }}\n    >\n      {typeof avatar !== \"undefined\" && (\n        <div className={`${cName}__avatar`}>{avatar}</div>\n      )}\n      <div className={`${cName}__content-wrapper`}>\n        {header}\n        <div className={`${cName}__content`}>{messageContent}</div>\n        {footer}\n      </div>\n    </section>\n  );\n};\n\nMessage.propTypes = {\n  /**\n   * Model object\n   * **message**: string - Message to send\n   * **sentTime**: string - Message sent time\n   * **sender**: string - Sender name\n   * **direction**: \"incoming\" | \"outgoing\" | 0 | 1 - Message direction\n   * **position**: \"single\" | \"first\" | \"normal\" | \"last\" | 0 | 1 | 2 | 3 - Message position in feed\n   * **type**: \"html\" | \"text\" | \"image\" | \"custom\"\n   */\n  model: PropTypes.shape({\n    /** Chat message to display - content. */\n    message: PropTypes.string,\n    sentTime: PropTypes.string,\n    sender: PropTypes.string,\n    direction: PropTypes.oneOf([\"incoming\", \"outgoing\", 0, 1]),\n\n    /** Position. */\n    position: PropTypes.oneOf([\n      \"single\",\n      \"first\",\n      \"normal\",\n      \"last\",\n      0,\n      1,\n      2,\n      3,\n    ]),\n\n    /**\n     * Message type\n     * This property can also be added directly to component, but property from model has precedence.\n     * Each type can have payload defined in model.payload or in payload property.\n     * Allowed payloads for different message are described in payload property.\n     */\n    type: PropTypes.oneOf([\"html\", \"text\", \"image\", \"custom\"]),\n\n    /**\n     * Message payload.\n     * Must be adequate to message type.\n     * Allowed payloads for different message types:\n     * html: String - Html string to render,\n     * text: String - Text to render,\n     * image: Object - for object properties please see **&lt;Message.ImageContent /&gt** properties,\n     * custom: **Message.CustomContent** - Component\n     */\n    payload: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n      allowedChildren([MessageCustomContent]),\n    ]),\n  }),\n  avatarSpacer: PropTypes.bool,\n  avatarPosition: PropTypes.oneOf([\n    \"tl\",\n    \"tr\",\n    \"cl\",\n    \"cr\",\n    \"bl\",\n    \"br\",\n    \"top-left\",\n    \"top-right\",\n    \"center-left\",\n    \"center-right\",\n    \"bottom-left\",\n    \"bottom-right\",\n  ]),\n\n  /**\n   * Primary content.\n   * Content from payload has precedence over Message.*Content properties.\n   * Whe\n   * Allowed components:\n   *\n   * * &lt;Avatar /&gt;\n   * * &lt;Message.Header /&gt;\n   * * &lt;Message.Footer /&gt;\n   * * &lt;Message.HtmlContent /&gt;\n   * * &lt;Message.TextContent /&gt;\n   * * &lt;Message.ImageContent /&gt;\n   * * &lt;Message.CustomContent /&gt;\n   */\n  children: allowedChildren([\n    Avatar,\n    MessageHeader,\n    MessageFooter,\n    MessageHtmlContent,\n    MessageTextContent,\n    MessageImageContent,\n    MessageCustomContent,\n  ]),\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Message type\n   * This property can also exists in model. In that case value from model has precedence.\n   **/\n  type: PropTypes.oneOf([\"html\", \"text\", \"image\", \"custom\"]),\n\n  /**\n   * Message payload.\n   * Must be adequate to message type.\n   * Allowed payloads for different message types:\n   * html: String - Html string to render,\n   * text: String - Text to render,\n   * image: Object - for object properties please see **&lt;Message.ImageContent &gt/>** properties,\n   * custom: **Message.CustomContent** - Component\n   */\n  payload: PropTypes.oneOfType([\n    PropTypes.string,\n    allowedChildren([MessageCustomContent]),\n  ]),\n};\n\nMessage.defaultProps = {\n  model: {\n    message: \"\",\n    sentTime: \"\",\n    sender: \"\",\n    direction: 1,\n  },\n  avatarSpacer: false,\n  avatarPosition: undefined,\n  type: \"html\",\n};\n\nMessage.Header = MessageHeader;\nMessage.HtmlContent = MessageHtmlContent;\nMessage.TextContent = MessageTextContent;\nMessage.ImageContent = MessageImageContent;\nMessage.CustomContent = MessageCustomContent;\nMessage.Footer = MessageFooter;\n\nexport default Message;\n","import Message from \"./Message\";\nexport * from \"./Message\";\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageGroupHeader = ({ children, className, ...rest }) => {\n  const cName = `${prefix}-message-group__header`;\n  return (\n    <div {...rest} className={classNames(cName, className)}>\n      {children}\n    </div>\n  );\n};\n\nMessageGroupHeader.displayName = \"MessageGroup.Header\";\n\nMessageGroupHeader.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageGroupHeader.defaultProps = {\n  children: undefined,\n};\n\nexport default MessageGroupHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\n\nexport const MessageGroupFooter = ({ children, className, ...rest }) => {\n  const cName = `${prefix}-message-group__footer`;\n\n  return (\n    <div {...rest} className={classNames(cName, className)}>\n      {children}\n    </div>\n  );\n};\n\nMessageGroupFooter.displayName = \"MessageGroup.Footer\";\n\nMessageGroupFooter.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageGroupFooter.defaultProps = {\n  children: undefined,\n};\n\nexport default MessageGroupFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { prefix } from \"../settings\";\n\nexport const MessageGroupMessages = ({ children, className, ...rest }) => {\n  const cName = `${prefix}-message-group`;\n  return (\n    <div {...rest} className={classNames(`${cName}__messages`, className)}>\n      {children}\n    </div>\n  );\n};\n\nMessageGroupMessages.displayName = \"MessageGroup.Messages\";\n\nMessageGroupMessages.propTypes = {\n  /**\n   * Messages.\n   * Allowed node:\n   *\n   * * &lt;Message /&gt;\n   */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageGroupMessages.defaultProps = {\n  children: undefined,\n};\n\nexport default MessageGroupMessages;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { allowedChildren, getChildren } from \"../utils\";\nimport { prefix } from \"../settings\";\nimport MessageGroupHeader from \"./MessageGroupHeader\";\nimport MessageGroupFooter from \"./MessageGroupFooter\";\nimport MessageGroupMessages from \"./MessageGroupMessages\";\nimport Avatar from \"../Avatar\";\n\nexport const MessageGroup = ({\n  direction,\n  avatarPosition,\n  sender,\n  sentTime,\n  children,\n  className,\n  ...rest\n}) => {\n  const cName = `${prefix}-message-group`;\n\n  const directionClass = (() => {\n    if (direction === 0 || direction === \"incoming\") {\n      return `${cName}--incoming`;\n    } else if (direction === 1 || direction === \"outgoing\") {\n      return `${cName}--outgoing`;\n    }\n  })();\n\n  const avatarPositionClass = (() => {\n    const prefix = `${cName}--avatar-`;\n    if (typeof avatarPosition === \"string\") {\n      if (\n        avatarPosition === \"tl\" ||\n        avatarPosition === \"top-left\" ||\n        avatarPosition === \"tr\" ||\n        avatarPosition === \"top-right\" ||\n        avatarPosition === \"bl\" ||\n        avatarPosition === \"bottom-right\" ||\n        avatarPosition === \"br\" ||\n        avatarPosition === \"bottom-right\" ||\n        avatarPosition === \"cl\" ||\n        avatarPosition === \"center-left\" ||\n        avatarPosition === \"cr\" ||\n        avatarPosition === \"center-right\"\n      ) {\n        return `${prefix}${avatarPosition}`;\n      }\n    }\n  })();\n\n  const [avatar, header, footer, messages] = getChildren(children, [\n    Avatar,\n    MessageGroupHeader,\n    MessageGroupFooter,\n    MessageGroupMessages,\n  ]);\n\n  const ariaLabel = (() => {\n    if (sender.length > 0 && sentTime.length > 0) {\n      return `${sender}: ${sentTime}`;\n    } else if (sender.length > 0 && sentTime.length === 0) {\n      return sender;\n    } else {\n      return null;\n    }\n  })();\n\n  return (\n    <section\n      aria-label={ariaLabel}\n      {...rest}\n      className={classNames(\n        cName,\n        directionClass,\n        avatarPositionClass,\n        className\n      )}\n      {...{ [`data-${prefix}-message-group`]: \"\" }}\n    >\n      {typeof avatar !== \"undefined\" && (\n        <div className={`${cName}__avatar`}>{avatar}</div>\n      )}\n      <div className={`${cName}__content`}>\n        {header}\n        {messages}\n        {footer}\n      </div>\n    </section>\n  );\n};\n\nMessageGroup.propTypes = {\n  /** Direction. */\n  direction: PropTypes.oneOf([\"incoming\", \"outgoing\", 0, 1]),\n\n  /** Avatar position. */\n  avatarPosition: PropTypes.oneOf([\"tl\", \"tr\", \"br\", \"bl\", \"cl\", \"cr\"]),\n  sentTime: PropTypes.string,\n  sender: PropTypes.string,\n  /**\n   * Primary content.\n   * Allowed nodes:\n   *\n   * * &lt;Avatar /&gt;\n   * * &lt;MessageGroup.Header /&gt;\n   * * &lt;MessageGroup.Footer /&gt;\n   * * &lt;MessageGroup.Messages /&gt;\n   * </ul>\n   */\n  children: allowedChildren([\n    Avatar,\n    MessageGroupHeader,\n    MessageGroupFooter,\n    MessageGroupMessages,\n  ]),\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageGroup.defaultProps = {\n  direction: \"incoming\",\n  sentTime: \"\",\n  sender: \"\",\n  avatarPosition: undefined,\n};\n\nMessageGroup.Header = MessageGroupHeader;\nMessageGroup.Footer = MessageGroupFooter;\nMessageGroup.Messages = MessageGroupMessages;\n\nexport default MessageGroup;\n","import MessageGroup from \"./MessageGroup\";\nexport * from \"./MessageGroup\";\nexport default MessageGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\nimport { isChildrenNil } from \"../utils\";\n\nexport const MessageSeparator = ({\n  content,\n  as,\n  children,\n  className,\n  ...rest\n}) => {\n  const cName = `${prefix}-message-separator`;\n\n  const Tag = (() => {\n    if (typeof as === \"string\" && as.length > 0) {\n      return as;\n    } else {\n      return MessageSeparator.defaultProps.as;\n    }\n  })();\n\n  return (\n    <Tag {...rest} className={classNames(cName, className)}>\n      {isChildrenNil(children) === true ? content : children}\n    </Tag>\n  );\n};\n\nMessageSeparator.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Shorthand for primary content. */\n  content: PropTypes.node,\n\n  /** An element type to render as. */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageSeparator.defaultProps = {\n  children: undefined,\n  content: undefined,\n  as: \"div\",\n};\n\nexport default MessageSeparator;\n","import MessageSeparator from \"./MessageSeparator\";\nexport * from \"./MessageSeparator\";\nexport default MessageSeparator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const MessageListContent = ({ className, children, ...rest }) => (\n  <div {...rest} className={className}>\n    {children}\n  </div>\n);\n\nMessageListContent.displayName = \"MessageList.Content\";\n\nMessageListContent.propTypes = {\n  /** Primary content. Message elements */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nexport default MessageListContent;\n","import React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { allowedChildren, getChildren } from \"../utils\";\nimport { prefix } from \"../settings\";\nimport PerfectScrollbar from \"../Scroll\";\nimport Loader from \"../Loader\";\nimport Overlay from \"../Overlay\";\nimport Message from \"../Message\";\nimport MessageGroup from \"../MessageGroup\";\nimport MessageSeparator from \"../MessageSeparator\";\nimport MessageListContent from \"./MessageListContent\";\n\nclass MessageListInner extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollPointRef = React.createRef();\n    this.containerRef = React.createRef();\n    this.scrollRef = React.createRef();\n    this.lastClientHeight = 0;\n    this.preventScrollTop = false;\n    this.resizeObserver = undefined;\n    this.scrollTicking = false;\n    this.resizeTicking = false;\n    this.noScroll = undefined;\n  }\n\n  getSnapshotBeforeUpdate() {\n    const list = this.containerRef.current;\n\n    const topHeight = Math.round(list.scrollTop + list.clientHeight);\n    // 1 px fix for firefox\n    const sticky =\n      list.scrollHeight === topHeight ||\n      list.scrollHeight + 1 === topHeight ||\n      list.scrollHeight - 1 === topHeight;\n\n    return {\n      sticky,\n      clientHeight: list.clientHeight,\n      scrollHeight: list.scrollHeight,\n      lastMessageOrGroup: this.getLastMessageOrGroup(),\n      diff: list.scrollHeight - list.scrollTop,\n    };\n  }\n\n  handleResize = () => {\n    // If container is smaller than before resize - scroll to End\n    if (this.containerRef.current.clientHeight < this.lastClientHeight) {\n      this.scrollToEnd(this.props.scrollBehavior);\n    }\n\n    this.scrollRef.current.updateScroll();\n  };\n\n  handleContainerResize = () => {\n    if (this.resizeTicking === false) {\n      window.requestAnimationFrame(() => {\n        const list = this.containerRef.current;\n\n        if (list) {\n          const currentHeight = list.clientHeight;\n\n          const diff = currentHeight - this.lastClientHeight;\n\n          if (diff >= 1) {\n            // Because fractional\n\n            if (this.preventScrollTop === false) {\n              list.scrollTop = Math.round(list.scrollTop) - diff;\n            }\n          } else {\n            list.scrollTop = list.scrollTop - diff;\n          }\n\n          this.lastClientHeight = list.clientHeight;\n\n          this.scrollRef.current.updateScroll();\n        }\n\n        this.resizeTicking = false;\n      });\n\n      this.resizeTicking = true;\n    }\n  };\n\n  isSticked = () => {\n    const list = this.containerRef.current;\n\n    return list.scrollHeight === Math.round(list.scrollTop + list.clientHeight);\n  };\n\n  handleScroll = () => {\n    if (this.scrollTicking === false) {\n      window.requestAnimationFrame(() => {\n        if (this.noScroll === false) {\n          this.preventScrollTop = this.isSticked();\n        } else {\n          this.noScroll = false;\n        }\n\n        this.scrollTicking = false;\n      });\n\n      this.scrollTicking = true;\n    }\n  };\n\n  componentDidMount() {\n    // Set scrollbar to bottom on start (getSnaphotBeforeUpdate is not invoked on mount)\n    if (this.props.autoScrollToBottomOnMount === true) {\n      this.scrollToEnd(this.props.scrollBehavior);\n    }\n\n    this.lastClientHeight = this.containerRef.current.clientHeight;\n\n    window.addEventListener(\"resize\", this.handleResize);\n\n    if (typeof window.ResizeObserver === \"function\") {\n      this.resizeObserver = new ResizeObserver(this.handleContainerResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    }\n    this.containerRef.current.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      props: { autoScrollToBottom },\n    } = this;\n\n    if (typeof snapshot !== \"undefined\") {\n      const list = this.containerRef.current;\n\n      const { lastElement, lastMessageInGroup } = this.getLastMessageOrGroup();\n\n      if (lastElement === snapshot.lastMessageOrGroup.lastElement) {\n        // If lastMessageInGroup is defined last element is MessageGroup otherwise its Message\n        if (\n          typeof lastMessageInGroup === \"undefined\" ||\n          lastMessageInGroup === snapshot.lastMessageOrGroup.lastMessageInGroup\n        ) {\n          list.scrollTop =\n            list.scrollHeight -\n            snapshot.diff +\n            (this.lastClientHeight - list.clientHeight);\n        }\n      }\n\n      if (snapshot.sticky === true) {\n        if (autoScrollToBottom === true) {\n          this.scrollToEnd(this.props.scrollBehavior);\n        }\n        this.preventScrollTop = true;\n      } else {\n        if (snapshot.clientHeight < this.lastClientHeight) {\n          // If was sticky because scrollHeight is not changing, so here will be equal to lastHeight plus current scrollTop\n          // 1px fix id for firefox\n          const sHeight = list.scrollTop + this.lastClientHeight;\n          if (\n            list.scrollHeight === sHeight ||\n            list.scrollHeight + 1 === sHeight ||\n            list.scrollHeight - 1 === sHeight\n          ) {\n            if (autoScrollToBottom === true) {\n              this.scrollToEnd(this.props.scrollBehavior);\n              this.preventScrollTop = true;\n            }\n          } else {\n            this.preventScrollTop = false;\n          }\n        } else {\n          this.preventScrollTop = false;\n\n          if (lastElement === snapshot.lastMessageOrGroup.lastElement) {\n            if (\n              typeof lastMessageInGroup === \"undefined\" ||\n              lastMessageInGroup ===\n                snapshot.lastMessageOrGroup.lastMessageInGroup\n            ) {\n              // New elements were not added at end\n              // New elements were added at start\n              if (\n                list.scrollTop === 0 &&\n                list.scrollHeight > snapshot.scrollHeight\n              ) {\n                list.scrollTop = list.scrollHeight - snapshot.scrollHeight;\n              }\n            }\n          }\n        }\n      }\n\n      this.lastClientHeight = snapshot.clientHeight;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n    if (typeof this.resizeObserver !== \"undefined\") {\n      this.resizeObserver.disconnect();\n    }\n    this.containerRef.current.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  scrollToEnd(scrollBehavior = this.props.scrollBehavior) {\n    const list = this.containerRef.current;\n    const scrollPoint = this.scrollPointRef.current;\n\n    // https://stackoverflow.com/a/45411081/6316091\n    const parentRect = list.getBoundingClientRect();\n    const childRect = scrollPoint.getBoundingClientRect();\n\n    // Scroll by offset relative to parent\n    const scrollOffset = childRect.top + list.scrollTop - parentRect.top;\n\n    if (list.scrollBy) {\n      list.scrollBy({ top: scrollOffset, behavior: scrollBehavior });\n    } else {\n      list.scrollTop = scrollOffset;\n    }\n\n    this.lastClientHeight = list.clientHeight;\n\n    // Important flag! Blocks strange Chrome mobile behaviour - automatic scroll.\n    // Chrome mobile sometimes trigger scroll when new content is entered to MessageInput. It's probably Chrome Bug - sth related with overflow-anchor\n    this.noScroll = true;\n  }\n\n  getLastMessageOrGroup = () => {\n    const lastElement = this.containerRef.current.querySelector(\n      `[data-${prefix}-message-list]>[data-${prefix}-message]:last-of-type,[data-${prefix}-message-list]>[data-${prefix}-message-group]:last-of-type`\n    );\n\n    const lastMessageInGroup = lastElement?.querySelector(\n      `[data-${prefix}-message]:last-of-type`\n    );\n\n    return {\n      lastElement,\n      lastMessageInGroup,\n    };\n  };\n\n  render() {\n    const {\n      props: {\n        children,\n        typingIndicator,\n        loading,\n        loadingMore,\n        loadingMorePosition,\n        onYReachStart,\n        onYReachEnd,\n        className,\n        disableOnYReachWhenNoScroll,\n        scrollBehavior, // Just to remove rest\n        autoScrollToBottom, // Just to remove rest\n        autoScrollToBottomOnMount, // Just to remove rest\n        ...rest\n      },\n    } = this;\n\n    const cName = `${prefix}-message-list`;\n\n    const [customContent] = getChildren(children, [MessageListContent]);\n\n    return (\n      <div {...rest} className={classNames(cName, className)}>\n        {loadingMore && (\n          <div\n            className={classNames(`${cName}__loading-more`, {\n              [`${cName}__loading-more--bottom`]:\n                loadingMorePosition === \"bottom\",\n            })}\n          >\n            <Loader />\n          </div>\n        )}\n        {loading && (\n          <Overlay>\n            <Loader />\n          </Overlay>\n        )}\n        <PerfectScrollbar\n          onYReachStart={onYReachStart}\n          onYReachEnd={onYReachEnd}\n          onSync={(ps) => ps.update(disableOnYReachWhenNoScroll)}\n          className={`${cName}__scroll-wrapper`}\n          ref={this.scrollRef}\n          containerRef={(ref) => (this.containerRef.current = ref)}\n          options={{ suppressScrollX: true }}\n          {...{ [`data-${prefix}-message-list`]: \"\" }}\n          style={{\n            overscrollBehaviorY: \"none\",\n            overflowAnchor: \"auto\",\n            touchAction: \"none\",\n          }}\n        >\n          {customContent ? customContent : children}\n          <div\n            className={`${cName}__scroll-to`}\n            ref={this.scrollPointRef}\n          ></div>\n        </PerfectScrollbar>\n        {typeof typingIndicator !== \"undefined\" && (\n          <div className={`${cName}__typing-indicator-container`}>\n            {typingIndicator}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMessageListInner.displayName = \"MessageList\";\n\nfunction MessageListFunc(props, ref) {\n  const msgListRef = useRef();\n\n  const scrollToBottom = (scrollBehavior) =>\n    msgListRef.current.scrollToEnd(scrollBehavior);\n\n  // Return object with public Api\n  useImperativeHandle(ref, () => ({\n    scrollToBottom,\n  }));\n\n  return <MessageListInner ref={msgListRef} {...props} />;\n}\n\nconst MessageList = forwardRef(MessageListFunc);\n\nMessageList.propTypes = {\n  /**\n   * Primary content. Message elements\n   * Allowed components:\n   *\n   * * &lt;Message /&gt;\n   * * &lt;MessageGroup /&gt;\n   * * &lt;MessageSeparator /&gt;\n   * * &lt;MessageListContent /&gt;\n   */\n  children: allowedChildren([\n    Message,\n    MessageGroup,\n    MessageSeparator,\n    MessageListContent,\n  ]),\n\n  /** Typing indicator element. */\n  typingIndicator: PropTypes.node,\n\n  /** Loading flag. */\n  loading: PropTypes.bool,\n\n  /** Loading more flag for infinity scroll. */\n  loadingMore: PropTypes.bool,\n\n  /** Loading more loader position. */\n  loadingMorePosition: PropTypes.oneOf([\"top\", \"bottom\"]),\n\n  /**\n   * This is fired when the scrollbar reaches the beginning on the y axis.<br/>\n   * It can be used to load previous messages using the infinite scroll.\n   */\n  onYReachStart: PropTypes.func,\n\n  /**\n   * This is fired when the scrollbar reaches the end on the y axis.<br/>\n   * It can be used to load next messages using the infinite scroll.\n   */\n  onYReachEnd: PropTypes.func,\n\n  /**\n   * Disables onYReachStart and onYReachEnd events from being fired<br />\n   * when the list is not scrollable.\n   * This is set to false by default for backward compatibility.\n   */\n  disableOnYReachWhenNoScroll: PropTypes.bool,\n\n  /**\n   * Auto scroll to bottom\n   */\n  autoScrollToBottom: PropTypes.bool,\n\n  /**\n   * Auto scroll to bottom on mount\n   */\n  autoScrollToBottomOnMount: PropTypes.bool,\n\n  /**\n   * Scroll behavior\n   * https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions/behavior\n   */\n  scrollBehavior: PropTypes.oneOf([\"auto\", \"smooth\"]),\n\n  /** Additional classes. */\n  className: PropTypes.string,\n};\n\nMessageList.defaultProps = {\n  typingIndicator: undefined,\n  loading: false,\n  loadingMore: false,\n  loadingMorePosition: \"top\",\n  disableOnYReachWhenNoScroll: false,\n  autoScrollToBottom: true,\n  autoScrollToBottomOnMount: true,\n  scrollBehavior: \"auto\",\n};\n\nMessageListInner.propTypes = MessageList.propTypes;\nMessageListInner.defaultProps = MessageList.defaultProps;\n\nMessageList.Content = MessageListContent;\n\nexport default MessageList;\n","import MessageList from \"./MessageList\";\nexport * from \"./MessageList\";\nexport default MessageList;\n","export default __webpack_public_path__ + \"static/media/index.9926c182.less\";","import React, { useEffect } from 'react';\r\n\r\nconst CozeChatComponent = () => {\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = \"https://sf-cdn.coze.com/obj/unpkg-va/flow-platform/chat-app-sdk/0.1.0-beta.5/libs/oversea/index.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      new window.CozeWebSDK.WebChatClient({\r\n        config: {\r\n          bot_id: '7400725791468273670',\r\n        },\r\n        componentProps: {\r\n          title: 'Coze',\r\n        },\r\n      });\r\n    };\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"coze-chat\"></div>\r\n  );\r\n};\r\n\r\nexport default CozeChatComponent;\r\n","// @flow\n\nimport React, {Component} from 'react'\nimport {\n  Animated,\n  Image,\n  Dimensions,\n  PanResponder,\n  StyleSheet,\n  View,\n} from 'react-native'\nimport colorsys from 'colorsys'\n\nexport class ColorWheel extends Component {\n  static defaultProps = {\n    thumbSize: 50,\n    initialColor: '#ffffff',\n    onColorChange: () => {},\n    precision: 0,\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      offset: {x: 0, y: 0},\n      currentColor: props.initialColor,\n      pan: new Animated.ValueXY(),\n    }\n  }\n\n  componentDidMount = () => {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponderCapture: ({nativeEvent}) => {\n        if (this.outBounds(nativeEvent)) return\n        this.updateColor({nativeEvent})\n        this.setState({panHandlerReady: true})\n\n        this.state.pan.setValue({\n          x: -this.state.left + nativeEvent.pageX - this.props.thumbSize / 2,\n          y: -this.state.top + nativeEvent.pageY - this.props.thumbSize / 2,\n        })\n        return true\n      },\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderGrant: () => true,\n      onPanResponderMove: (event, gestureState) => {\n        if (this.outBounds(gestureState)) return\n\n        this.resetPanHandler()\n        return Animated.event(\n          [\n            null,\n            {\n              dx: this.state.pan.x,\n              dy: this.state.pan.y,\n            },\n          ],\n          {listener: this.updateColor}\n        )(event, gestureState)\n      },\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderRelease: ({nativeEvent}) => {\n        this.setState({panHandlerReady: true})\n        this.state.pan.flattenOffset()\n        const {radius} = this.calcPolar(nativeEvent)\n        if (radius < 0.1) {\n          this.forceUpdate('#ffffff')\n        }\n      },\n    })\n  }\n\n  onLayout () {\n    this.measureOffset()\n  }\n\n  measureOffset () {\n    /*\n    * const {x, y, width, height} = nativeEvent.layout\n    * onlayout values are different than measureInWindow\n    * x and y are the distances to its previous element\n    * but in measureInWindow they are relative to the window\n    */\n    this.self.measureInWindow((x, y, width, height) => {\n      const window = Dimensions.get('window')\n      const absX = x % width\n      const radius = Math.min(width, height) / 2\n      const offset = {\n        x: absX + width / 2,\n        y: y % window.height + height / 2,\n      }\n\n      this.setState({\n        offset,\n        radius,\n        height,\n        width,\n        top: y % window.height,\n        left: absX,\n      })\n      this.forceUpdate(this.state.currentColor)\n    })\n  }\n\n  calcPolar (gestureState) {\n    const {\n      pageX, pageY, moveX, moveY,\n    } = gestureState\n    const [x, y] = [pageX || moveX, pageY || moveY]\n    const [dx, dy] = [x - this.state.offset.x, y - this.state.offset.y]\n    return {\n      deg: Math.atan2(dy, dx) * (-180 / Math.PI),\n      // pitagoras r^2 = x^2 + y^2 normalized\n      radius: Math.sqrt(dy * dy + dx * dx) / this.state.radius,\n    }\n  }\n\n  outBounds (gestureState) {\n    const {radius} = this.calcPolar(gestureState)\n    return radius > 1\n  }\n\n  resetPanHandler () {\n    if (!this.state.panHandlerReady) {\n      return\n    }\n\n    this.setState({panHandlerReady: false})\n    this.state.pan.setOffset({\n      x: this.state.pan.x._value,\n      y: this.state.pan.y._value,\n    })\n    this.state.pan.setValue({x: 0, y: 0})\n  }\n\n  calcCartesian (deg, radius) {\n    const r = radius * this.state.radius // was normalized\n    const rad = Math.PI * deg / 180\n    const x = r * Math.cos(rad)\n    const y = r * Math.sin(rad)\n    return {\n      left: this.state.width / 2 + x,\n      top: this.state.height / 2 - y,\n    }\n  }\n\n  updateColor = ({nativeEvent}) => {\n    const {deg, radius} = this.calcPolar(nativeEvent)\n    const currentColor = colorsys.hsv2Hex({h: deg, s: 100 * radius, v: 100})\n    this.setState({currentColor})\n    this.props.onColorChange({h: deg, s: 100 * radius, v: 100})\n  }\n\n  forceUpdate = color => {\n    const {h, s, v} = colorsys.hex2Hsv(color)\n    const {left, top} = this.calcCartesian(h, s / 100)\n    this.setState({currentColor: color})\n    this.props.onColorChange({h, s, v})\n    this.state.pan.setValue({\n      x: left - this.props.thumbSize / 2,\n      y: top - this.props.thumbSize / 2,\n    })\n  }\n\n  animatedUpdate = color => {\n    const {h, s, v} = colorsys.hex2Hsv(color)\n    const {left, top} = this.calcCartesian(h, s / 100)\n    this.setState({currentColor: color})\n    this.props.onColorChange({h, s, v})\n    Animated.spring(this.state.pan, {\n      toValue: {\n        x: left - this.props.thumbSize / 2,\n        y: top - this.props.thumbSize / 2,\n      },\n    }).start()\n  }\n\n  render () {\n    const {radius} = this.state\n    const thumbStyle = [\n      styles.circle,\n      this.props.thumbStyle,\n      {\n        width: this.props.thumbSize,\n        height: this.props.thumbSize,\n        borderRadius: this.props.thumbSize / 2,\n        backgroundColor: this.state.currentColor,\n        opacity: this.state.offset.x === 0 ? 0 : 1,\n      },\n    ]\n\n    const panHandlers = this._panResponder && this._panResponder.panHandlers || {}\n\n    return (\n      <View\n        ref={node => {\n          this.self = node\n        }}\n        {...panHandlers}\n        onLayout={nativeEvent => this.onLayout(nativeEvent)}\n        style={[styles.coverResponder, this.props.style]}>\n        <Image\n          style={[styles.img, {height: radius * 2, width: radius * 2}]}\n          source={require('./color-wheel.png')}\n        />\n        <Animated.View style={[this.state.pan.getLayout(), thumbStyle]} />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  coverResponder: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  img: {\n    alignSelf: 'center',\n  },\n  circle: {\n    position: 'absolute',\n    backgroundColor: '#EEEEEE',\n    borderWidth: 3,\n    borderColor: '#EEEEEE',\n    elevation: 3,\n    shadowColor: 'rgb(46, 48, 58)',\n    shadowOffset: {width: 0, height: 2},\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n  },\n})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst sliderThumbStyles = css`\n  height: 12px;\n  width: 12px;\n  border-radius: 50%;\n  background: #404040;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -5px;\n`\n\nconst sliderTrackStyles = css`\n  width: 100%;\n  height: 2px;\n  cursor: pointer;\n  animate: 0.2s;\n  background: #D8D8D8;\n  border-radius: 2px;\n`\n\nconst SliderText = styled.div`\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: 1px;\n  font-weight: bold;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst Label = styled.div`\n  user-select: none;\n`\nconst Value = styled.div`\n  opacity: .6;\n  user-select: none;\n`\n\nconst SliderRow = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SliderInput = styled.input`\n  width: 224px;\n  height: 12px;\n  -webkit-appearance: none;\n  margin: 0;\n  display: block;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n  &::-webkit-slider-runnable-track {\n    ${sliderTrackStyles}\n  }\n  &::-webkit-slider-thumb {\n    ${sliderThumbStyles}\n  }\n  &:focus::-webkit-slider-runnable-track {\n    background: #aaa;\n  }\n  &::-moz-range-track {\n    ${sliderTrackStyles}\n  }\n  &::-moz-range-thumb {\n    ${sliderThumbStyles}\n  }\n  &::-ms-track {\n    ${sliderTrackStyles}\n  }\n  &::-ms-fill-lower {\n    background: #D8D8D8;\n    border-radius: 2px;\n  }\n  &::-ms-fill-upper {\n    background: #D8D8D8;\n    border-radius: 2px;\n  }\n  &::-ms-thumb {\n    ${sliderThumbStyles}\n  }\n  &:focus::-ms-fill-lower {\n    background: #D8D8D8;\n  }\n  &:focus::-ms-fill-upper {\n    background: #D8D8D8;\n  }\n`\n\nconst SliderBox = ({\n  sliderValue,\n  sliderOnChange,\n  label,\n  min,\n  max,\n  step\n}) => (\n  <SliderRow>\n    <SliderText>\n      <Label>\n        {label}\n      </Label>\n      <Value>\n        {sliderValue}\n      </Value>\n    </SliderText>\n    <SliderInput type='range' min={min} max={max} step={step} value={sliderValue} onChange={sliderOnChange} />\n  </SliderRow>\n)\n\nSliderBox.defaultProps = {\n  step: 0.01\n}\n\nexport default SliderBox\n","export default __webpack_public_path__ + \"static/media/eye.187cd8af.svg\";","export default __webpack_public_path__ + \"static/media/duplicate.6bdb95c3.svg\";","export default __webpack_public_path__ + \"static/media/cross.f2f60d91.svg\";","export default __webpack_public_path__ + \"static/media/trash.2d787a55.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport eye from '../icons/eye.svg'\nimport duplicate from '../icons/duplicate.svg'\nimport cross from '../icons/cross.svg'\nimport trash from '../icons/trash.svg'\n\nconst icons = {\n  eye: eye,\n  duplicate: duplicate,\n  cross: cross,\n  trash: trash\n}\n\nconst ButtonWrapper = styled.button`\n  appearance: none;\n  border: none;\n  background-color: rgba(0,0,0,.1);\n  height: 32px;\n  width: 32px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  transition: background-color .3s;\n\n  &:hover {\n    background-color: rgba(0,0,0,.2);\n  }\n`\n\nconst IconImg = styled.img`\n  display: block;\n  transition: opacity .3s;\n  ${props => props.isDisabled && 'opacity: 0.4'};\n`\n\nconst IconButton = ({\n  icon,\n  onClick,\n  isDisabled,\n  title\n}) => (\n  <ButtonWrapper onClick={onClick} isDisabled={isDisabled} title={title}>\n    <IconImg src={icons[icon]} isDisabled={isDisabled} />\n  </ButtonWrapper>\n)\n\nexport default IconButton\n","import React, { Component } from 'react'\nimport Color from 'color'\nimport styled from 'styled-components'\nimport colorString from 'color-string'\nimport SliderBox from './slider-box'\nimport IconButton from './icon-button'\n\nconst wheelRadius = 320\nconst colorCircleSize = 32\n\nconst ColorBox = styled.div`\n  width: ${colorCircleSize}px;\n  height: ${colorCircleSize}px;\n  border-radius: 50%;\n  transition: transform .2s;\n  ${props => props.colorSettinsOpen && !props.isHidden && `transform: scale(1.8)`};\n  ${props => props.colorIsHighlighted && `box-shadow: 0 0 0 4px white, 0 0 0 6px rgba(0,0,0,.5);`};\n  ${props => props.isHidden && `border: 1px solid rgba(0,0,0,.2);`};\n  cursor: pointer;\n`\n\nconst SecColorBox = styled.div`\n  width: ${colorCircleSize}px;\n  height: ${colorCircleSize}px;\n  border-radius: 50%;\n  transition: transform .2s;\n  ${props => props.secColorSettinsOpen && `transform: scale(1.8)`};\n  cursor: pointer;\n  position: relative;\n  top: 20px;\n`\n\nconst ColorBoxWrapper = styled.div`\n  height: ${wheelRadius / 2}px;\n  width: ${colorCircleSize}px;\n  transform-origin: center bottom;\n  position: absolute;\n  top: 0;\n  margin-left: ${wheelRadius / 2 - colorCircleSize / 2}px;\n\n  &:after {\n    content: '';\n    width: 6px;\n    height: 6px;\n    display: block;\n    border-radius: 50%;\n    top: 39px;\n    left: 0;\n    right: 0;\n    margin: auto;\n    position: absolute;\n    z-index: -1;\n\n    ${props => props.hasChanged && `background-color: #555`};\n  }\n`\n\nconst SlidersBackdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  background-color: rgba(255,0,0,0);\n  left: 0;\n  top: 0;\n  z-index: 80;\n`\n\nconst SlidersContainer = styled.div`\n\n`\n\nconst WheelWrapper = styled.div`\n  z-index: 110;\n  position: relative;\n  height: ${wheelRadius}px;\n  width: ${wheelRadius}px;\n`\n\nconst WheelItemWrapper = styled.div`\n`\n\nconst SlidersWrapper = styled.div`\n  margin-left: 48px;\n  height: 100%;\n  left: 100%;\n  display: flex;\n  align-items: center;\n  z-index: 120;\n  background-color: white;\n  position: absolute;\n  top: 0;\n`\n\nconst ColorCodesSection = styled.div`\n  border-left: 1px solid rgba(0,0,0,.1);\n  margin-left: ${wheelRadius + 244 + 96}px;\n  padding-left: 48px;\n  font-size: 16px;\n  line-height: 24px;\n  position: relative;\n  display: flex;\n`\n\nconst ButtonsSection = styled.div`\n  display: flex;\n\n  & > *:not(:last-child) {\n    margin-right: 8px;\n  }\n`\n\nclass WheelItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      saturationValue: 0,\n      desaturationValue: 0,\n      lightenValue: 0,\n      darkenValue: 0,\n\n      colorSettinsOpen: false,\n      secColorSettinsOpen: false,\n\n      secSaturationValue: 0,\n      secDesaturationValue: 0,\n      secLightenValue: 0,\n      secDarkenValue: 0,\n\n      showSecColor: false,\n      settingsLinked: true,\n\n      colorIsHighlighted: false,\n      isHidden: false\n    }\n    this.handleSaturationChange = this.handleSaturationChange.bind(this)\n    this.handleDesaturationChange = this.handleDesaturationChange.bind(this)\n    this.handleLightenChange = this.handleLightenChange.bind(this)\n    this.handleDarkenChange = this.handleDarkenChange.bind(this)\n\n    this.handleColorClick = this.handleColorClick.bind(this)\n    this.handleSettingsCloseClick = this.handleSettingsCloseClick.bind(this)\n    this.handleBackdropClick = this.handleBackdropClick.bind(this)\n    this.handleSecColorClick = this.handleSecColorClick.bind(this)\n\n    this.handleSecSaturationChange = this.handleSecSaturationChange.bind(this)\n    this.handleSecDesaturationChange = this.handleSecDesaturationChange.bind(this)\n    this.handleSecLightenChange = this.handleSecLightenChange.bind(this)\n    this.handleSecDarkenChange = this.handleSecDarkenChange.bind(this)\n\n    this.handleDuplicate = this.handleDuplicate.bind(this)\n    this.handleRemoveDuplicate = this.handleRemoveDuplicate.bind(this)\n    this.handleColorCodeHover = this.handleColorCodeHover.bind(this)\n    this.handleHide = this.handleHide.bind(this)\n  }\n\n  handleSaturationChange (e) {\n    if (this.state.showSecColor) {\n      this.setState({\n        saturationValue: e.target.value,\n        desaturationValue: 0,\n\n        settingsLinked: false\n      })\n    } else {\n      this.setState({\n        saturationValue: e.target.value,\n        desaturationValue: 0,\n\n        secSaturationValue: e.target.value,\n        secDesaturationValue: 0\n      })\n    }\n  }\n\n  handleDesaturationChange (e) {\n    if (this.state.showSecColor) {\n      this.setState({\n        desaturationValue: e.target.value,\n        saturationValue: 0,\n\n        settingsLinked: false\n      })\n    } else {\n      this.setState({\n        desaturationValue: e.target.value,\n        saturationValue: 0,\n\n        secDesaturationValue: e.target.value,\n        secSaturationValue: 0\n      })\n    }\n  }\n\n  handleLightenChange (e) {\n    if (this.state.showSecColor) {\n      this.setState({\n        lightenValue: e.target.value,\n        darkenValue: 0,\n\n        settingsLinked: false\n      })\n    } else {\n      this.setState({\n        lightenValue: e.target.value,\n        darkenValue: 0,\n\n        secLightenValue: e.target.value,\n        secDarkenValue: 0\n      })\n    }\n  }\n\n  handleDarkenChange (e) {\n    if (this.state.showSecColor) {\n      this.setState({\n        darkenValue: e.target.value,\n        lightenValue: 0,\n\n        settingsLinked: false\n      })\n    } else {\n      this.setState({\n        darkenValue: e.target.value,\n        lightenValue: 0,\n\n        secDarkenValue: e.target.value,\n        secLightenValue: 0\n      })\n    }\n  }\n\n  handleSecSaturationChange (e) {\n    this.setState({\n      settingsLinked: false,\n      secSaturationValue: e.target.value,\n      secDesaturationValue: 0\n    })\n  }\n\n  handleSecDesaturationChange (e) {\n    this.setState({\n      settingsLinked: false,\n      secDesaturationValue: e.target.value,\n      secSaturationValue: 0\n    })\n  }\n\n  handleSecLightenChange (e) {\n    this.setState({\n      settingsLinked: false,\n      secLightenValue: e.target.value,\n      secDarkenValue: 0\n    })\n  }\n\n  handleSecDarkenChange (e) {\n    this.setState({\n      settingsLinked: false,\n      secDarkenValue: e.target.value,\n      secLightenValue: 0\n    })\n  }\n\n  handleColorClick (e) {\n    if (!this.state.colorSettinsOpen) {\n      this.setState({\n        colorSettinsOpen: true\n      })\n    } else {\n      this.setState({\n        colorSettinsOpen: false\n      })\n    }\n  }\n\n  handleSecColorClick (e) {\n    if (!this.state.secColorSettinsOpen) {\n      this.setState({\n        secColorSettinsOpen: true\n      })\n    } else {\n      this.setState({\n        secColorSettinsOpen: false\n      })\n    }\n  }\n\n  handleSettingsCloseClick (e) {\n    this.setState({\n      colorSettinsOpen: false,\n      secColorSettinsOpen: false\n    })\n  }\n\n  handleBackdropClick (e) {\n    this.setState({\n      colorSettinsOpen: false,\n      secColorSettinsOpen: false\n    })\n  }\n\n  handleDuplicate () {\n    this.setState({\n      showSecColor: true,\n      colorSettinsOpen: false,\n      secColorSettinsOpen: true\n    })\n  }\n\n  handleRemoveDuplicate () {\n    this.setState({\n      showSecColor: false,\n      secColorSettinsOpen: false\n    })\n  }\n\n  handleColorCodeHover () {\n    if (this.state.colorIsHighlighted) {\n      this.setState({\n        colorIsHighlighted: false\n      })\n    } else {\n      this.setState({\n        colorIsHighlighted: true\n      })\n    }\n  }\n\n  handleHide () {\n    if (this.state.isHidden) {\n      this.setState({\n        isHidden: false\n      })\n    } else {\n      this.setState({\n        isHidden: true\n      })\n    }\n  }\n\n  render () {\n    const settingsHasChanged = this.state.saturationValue > 0 || this.state.desaturationValue > 0 || this.state.lightenValue > 0 || this.state.darkenValue > 0\n\n    return (\n      <WheelItemWrapper>\n        <ColorBoxWrapper\n          rotateAngle={this.props.rotateAngle}\n          hasChanged={settingsHasChanged}\n          style={{\n            transform: `rotate(${this.props.rotateAngle}deg)`\n          }}\n        >\n          <ColorBox\n            onClick={this.handleColorClick}\n            colorSettinsOpen={this.state.colorSettinsOpen}\n            colorIsHighlighted={this.state.colorIsHighlighted}\n            isHidden={this.state.isHidden}\n            style={{\n              backgroundColor: !this.state.isHidden && Color(this.props.color).saturate(this.state.saturationValue).desaturate(this.state.desaturationValue).lighten(this.state.lightenValue).darken(this.state.darkenValue)\n            }}\n          />\n          {this.state.showSecColor && (\n            <SecColorBox\n              secColorSettinsOpen={this.state.secColorSettinsOpen}\n              onClick={this.handleSecColorClick}\n              style={{ width: 32, backgroundColor: Color(this.props.color).saturate(this.state.settingsLinked ? this.state.saturationValue : this.state.secSaturationValue).desaturate(this.state.settingsLinked ? this.state.desaturationValue : this.state.secDesaturationValue).lighten(this.state.settingsLinked ? this.state.lightenValue : this.state.secLightenValue).darken(this.state.settingsLinked ? this.state.darkenValue : this.state.secDarkenValue) }}\n            />\n          )}\n        </ColorBoxWrapper>\n\n        {(this.state.secColorSettinsOpen || this.state.colorSettinsOpen) && (\n          <SlidersBackdrop onClick={this.handleBackdropClick} />\n        )}\n\n        {this.state.colorSettinsOpen && (\n          <SlidersContainer>\n            <SlidersWrapper>\n              <div>\n                <SliderBox\n                  label='Saturate'\n                  sliderValue={this.state.saturationValue}\n                  sliderOnChange={this.handleSaturationChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Desaturate'\n                  sliderValue={this.state.desaturationValue}\n                  sliderOnChange={this.handleDesaturationChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Lighten'\n                  sliderValue={this.state.lightenValue}\n                  sliderOnChange={this.handleLightenChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Darken'\n                  sliderValue={this.state.darkenValue}\n                  sliderOnChange={this.handleDarkenChange}\n                  min={0}\n                  max={1}\n                />\n\n                <ButtonsSection>\n                  <IconButton icon='eye' onClick={this.handleHide} isDisabled={this.state.isHidden} title='Hide/Show' />\n                  <IconButton icon='duplicate' onClick={this.handleDuplicate} title='Duplicate' />\n                </ButtonsSection>\n              </div>\n            </SlidersWrapper>\n          </SlidersContainer>\n        )}\n\n        {this.state.secColorSettinsOpen && (\n          <SlidersContainer>\n            <SlidersWrapper>\n              <div>\n                <SliderBox\n                  label='Saturate'\n                  sliderValue={this.state.secSaturationValue}\n                  sliderOnChange={this.handleSecSaturationChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Desaturate'\n                  sliderValue={this.state.secDesaturationValue}\n                  sliderOnChange={this.handleSecDesaturationChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Lighten'\n                  sliderValue={this.state.secLightenValue}\n                  sliderOnChange={this.handleSecLightenChange}\n                  min={0}\n                  max={1}\n                />\n\n                <SliderBox\n                  label='Darken'\n                  sliderValue={this.state.secDarkenValue}\n                  sliderOnChange={this.handleSecDarkenChange}\n                  min={0}\n                  max={1}\n                />\n\n                <ButtonsSection>\n                  <IconButton icon='trash' onClick={this.handleRemoveDuplicate} title='Remove duplicate' />\n                </ButtonsSection>\n              </div>\n            </SlidersWrapper>\n          </SlidersContainer>\n        )}\n\n        <ColorCodesSection style={{ top: `-100px` }}>\n          <div onMouseOver={this.handleColorCodeHover} onMouseOut={this.handleColorCodeHover}>{colorString.to.hex(Color(this.props.color).saturate(this.state.saturationValue).desaturate(this.state.desaturationValue).lighten(this.state.lightenValue).darken(this.state.darkenValue).rgb().round().array())}</div>\n\n          {this.state.showSecColor && (<span>&nbsp;+&nbsp;</span>)}\n\n          {this.state.showSecColor && colorString.to.hex(Color(this.props.color).saturate(this.state.secSaturationValue).desaturate(this.state.secDesaturationValue).lighten(this.state.secLightenValue).darken(this.state.secDarkenValue).rgb().round().array())}\n        </ColorCodesSection>\n      </WheelItemWrapper>\n    )\n  }\n}\n\nconst Wheel = ({ colorsList, colorsAmount }) => (\n  <WheelWrapper>\n    {colorsList.map((colorsListItem, index) => (\n      <WheelItem rotateAngle={index * 360 / colorsAmount} color={colorsListItem} colorsAmount={colorsAmount} key={index} />\n    ))}\n  </WheelWrapper>\n)\n\nexport default Wheel\n","import React, {Component, useState} from 'react';\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\n// import { MainContainer, ChatContainer, MessageList, Message, MessageInput } from '@chatscope/chat-ui-kit-react';\nimport \"./App.css\";\nimport MainContainer from \"./components/MainContainer\"\n// import ChatContainer from \"./components/ChatContainer\"\nimport MessageList from \"./components/MessageList\"\nimport Message from \"./components/Message\"\nimport {store, useGlobalState} from 'state-pool';  // https://github.com/yezyilomo/state-pool   Learn from here to handle globle state  https://dev.to/yezyilomo/global-state-management-in-react-with-global-variables-and-hooks-state-management-doesn-t-have-to-be-so-hard-2n2c\n// import MessageInput from \"./components/MessageInput\"\nimport Image from 'rc-image';\nimport './index.less';\nimport ImgsViewer from \"react-images-viewer\";\nimport Viewer from 'react-viewer';\nimport CozeChatComponent from './chatbot'\n// import {marked} from 'marked'\n// import marked from 'marked'\nimport {\n    Dimensions,\n    StyleSheet,\n    View\n} from 'react-native';\nimport {ColorWheel} from './ColorWheel';\nimport Wheel from './components/wheel'\nimport SliderBox from './components/slider-box'\nimport Color from 'color'\nimport styled from 'styled-components'\nimport MarkdownIt from \"markdown-it\";\n\nconst wheelRadius = 320\nconst WheelHelper = styled.div`\n    width: ${wheelRadius}px;\n    position: relative;\n`\nvar md = new MarkdownIt();\n\nvar flag = true\n// res.writeHead(200, {\n//     'Content-Type': 'text/event-stream'\n// })\n// for await (const chunk of gptStream){\n//     res.write('data:${JSON.stringify(chunk)}\\n\\n')\n// }\n//\n\n\nconst ColorsAmountInput = styled.input`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    width: 56px;\n    height: 40px;\n    z-index: 2;\n    font: inherit;\n    border: 0;\n    text-align: center;\n    font-size: 24px;\n    padding: 4px;\n    color: inherit;\n    appearance: none;\n    z-index: 120;\n\n    &::-webkit-inner-spin-button {\n        appearance: none;\n    }\n`\n\ntype\n    Mes = {\n    message: String, // user input\n    tutor_message: String,\n    isImage: Boolean,\n    payload: { // if isImage = True; otherwise, this key is not existed\n        src: String, //'http://zhenhuipeng.com/img/me-d.jpg',\n        alt: String, //\"concepts\",\n        width: String //\"800px\"\n    },\n    state: String,\n    sender: String,\n    sentTime: String,\n    options: Array<String>,\n    direction: String, //\"incoming\" \"outgoing\"\n    gui: String, // gui base64 data\n    post_id: Number,\n    explanation: String,\n    cloze_test: String,\n    multiple_choices: Array<String>\n};\n\ntype\n    State = {\n    message_list: Array<Mes>,\n    cur_message: Mes,\n    count: Number,\n    chatbot_list: Array<Mes>\n};\n//  let chat = createGlobalState(\nconst image_server = 'http://127.0.0.1:3004/'\nstore.setState(\"chat\", {\n    message_list: [{\n        message: 'Hi, I am <b>Sex Ed Tutor</b>.<br/>' +\n            ' <b>What problem you want to discuss with me?</b> Or <br/>' +\n            '<b>what topic you want to learn today?</b><br/>' +\n            'Here are some Examples:',//\"<b>DesignTutor here to help you familiarize design elements through UI examples! </b> To do so, I will ask you multiple-choices questions about the critique on UI examples. Ready?\",\n        isImage: false,\n        //payload: {src: '', alt: '', width: ''},\n        state: \"state of the dialog flow\",\n        sender: \"tutor\",\n        options: ['Sexual Orientation', 'Sex Health','Gender Identity', 'Healthy relationships and Communication', 'Others'],\n        sentTime: \"just now\",\n        palette_url: image_server + 'test_palette.png',\n        gui_url: image_server + 'test.png',\n        state: 'Topic Selection',\n        tutor_message: '',\n        user_message: '',\n        post_id: -1,\n        explanation: '',\n        cloze_test: '',\n        imgs: [],\n        correct_answer: '',\n        correct_answers: [],\n        user_id: '',\n        multiple_choices: [],\n        mention_ui_elements: [],\n        wiki: []\n    }]\n})\n\nstore.setState(\"chatbot\", {\n    chatbot_list: [{\n        message: \"Hi, I am your assistance <b>Chatbot</b>. Feel free to ask me any question!\"\n    }]\n})\n\nstore.setState(\"uiImage\", {\n    imgs: [{src: 'D:\\\\0universe\\\\vision_transformer\\\\rose.jpg', alt: ''}],\n})\n\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nvar changeCount = 0\nvar base64data = 'hehehe'\nvar image_content = {\n    direction: \"outgoing\",\n    payload: {\n        src: base64data,\n        alt: \"\",\n        width: \"200px\"\n    }\n}\nvar image_flag = false\n\n// window.postMessage('nativeLog', 'Called from the webview')\nfunction randomChange() {\n    document.getElementById('random_change_p').innerHTML = \"The random change button was clicked. No. \" + changeCount\n    changeCount += 1\n    console.log('button is clicked')\n    window.postMessage('nativeLog', 'Request the design tutor for suggestion')\n}\n\nwindow.send2webui = function (data) {\n    // Functions that connect to the Sketch plugin.\n    // let pluginData  = JSON.parse(arg)\n    // document.getElementById('random_change_p').innerHTML = data.others\n    // base64data = data.base64data\n    // if (!data.first_contact) {\n    //   let hamrony_p = 'Type i distance: ' + data.color_harmony[0][0].toFixed(2) + ', angle: ' + data.color_harmony[1][0].toString() + \"<br />\" + \n    //   'Type V distance: ' + data.color_harmony[0][1].toFixed(2) + ', angle: ' + data.color_harmony[1][1].toString() + '<br />' + \n    //   'Type L distance: ' + data.color_harmony[0][2].toFixed(2) + ', angle: ' + data.color_harmony[1][2].toString() + '<br />' + \n    //   'Type L_inverse distance: ' + data.color_harmony[0][3].toFixed(2) + ', angle: ' + data.color_harmony[1][3].toString() + '<br />' + \n    //   'Type I distance: ' + data.color_harmony[0][4].toFixed(2) + ', angle: ' + data.color_harmony[1][4].toString() + '<br />' + \n    //   'Type T distance: ' + data.color_harmony[0][5].toFixed(2) + ', angle: ' + data.color_harmony[1][5].toString() + '<br />' + \n    //   'Type X distance: ' + data.color_harmony[0][6].toFixed(2) + ', angle: ' + data.color_harmony[1][6].toString() + '<br />' + \n    //   'Type Y distance: ' + data.color_harmony[0][7].toFixed(2) + ', angle: ' + data.color_harmony[1][7].toString()\n    // }\n    console.log('get a command from the plugin')\n    let chat = store.getState(\"chat\")\n    let old_list = chat.value.message_list\n    for (let i = 0; i < data.messages.length; i++) {\n        old_list.push(\n            {\n                message: data.messages[i],\n                sentTime: \"just now\",\n                sender: \"DesignTutor\",\n                image: false\n            }\n        )\n    }\n    if (data.change_color_flag) {\n        old_list.push(\n            {\n                payload: {\n                    src: data.new_gui_url, //data.new_gui_data,\n                    alt: \"Suggested change\",\n                    width: \"200px\"\n                },\n                image: true,\n                sentTime: \"just now\",\n                sender: \"DesignTutor\",\n            }\n        )\n    }\n    setTimeout(() => {\n            chat.setValue(\n                {message_list: old_list}\n            )\n        },\n        50);\n    // console.log(chat)\n    // console.log(chat.value)\n    return JSON.stringify({status: 'good', data: 'no data'})\n}\n\n\nwindow.updateUI = function (data) {\n    // Functions that connect to the Sketch plugin.\n    document.getElementById('random_change_p').innerHTML = data.success\n    let color_p = ''\n    let color_count = 0\n    data.colors.forEach(color => {\n        color_p += color_count.toString() + '. (' + color.toString() + ')[' + (data.proportion[color_count] * 100).toFixed(1) + '%]   '\n        color_count += 1\n    });\n    document.getElementById('detected_color').innerHTML = color_p\n    let hamrony_p = 'Type i distance: ' + data.color_harmony[0][0].toFixed(2) + ', angle: ' + data.color_harmony[1][0].toString() + \"<br />\" +\n        'Type V distance: ' + data.color_harmony[0][1].toFixed(2) + ', angle: ' + data.color_harmony[1][1].toString() + '<br />' +\n        'Type L distance: ' + data.color_harmony[0][2].toFixed(2) + ', angle: ' + data.color_harmony[1][2].toString() + '<br />' +\n        'Type L_inverse distance: ' + data.color_harmony[0][3].toFixed(2) + ', angle: ' + data.color_harmony[1][3].toString() + '<br />' +\n        'Type I distance: ' + data.color_harmony[0][4].toFixed(2) + ', angle: ' + data.color_harmony[1][4].toString() + '<br />' +\n        'Type T distance: ' + data.color_harmony[0][5].toFixed(2) + ', angle: ' + data.color_harmony[1][5].toString() + '<br />' +\n        'Type X distance: ' + data.color_harmony[0][6].toFixed(2) + ', angle: ' + data.color_harmony[1][6].toString() + '<br />' +\n        'Type Y distance: ' + data.color_harmony[0][7].toFixed(2) + ', angle: ' + data.color_harmony[1][7].toString()\n    document.getElementById('harmony_distance').innerHTML = hamrony_p\n}\n\n\n// function mark(message_str){\n//     return marked.parse(message_str)\n// }\nasync function updateMessage(message, flag) {\n    let chat = store.getState(\"chat\")\n    let old_list = chat.value.message_list\n\n    flag = typeof flag != \"undefined\" ? flag : false\n\n    //only tutor_gpt needs pop.\n    if (flag) {\n        let old_message = old_list[old_list.length - 1]\n        old_message.message = message.message;\n        old_list.pop()\n    }\n\n    old_list.push(message)\n    setTimeout(() => {\n            chat.setValue(\n                {message_list: old_list}\n            )\n        },\n        50);\n}\n\nfunction updateUiImage(ui_images) {\n    let uiImage = store.getState(\"uiImage\")\n    setTimeout(() => {\n            uiImage.setValue(\n                {imgs: ui_images}\n            )\n            console.log(uiImage.value.imgs)\n        },\n        50);\n}\n\nfunction sleep(delay) {\n    var start = (new Date()).getTime();\n    while ((new Date()).getTime() - start < delay) {\n\n    }\n}\n\n// var imgs = [{src: 'https://i.redd.it/w8waenbekhe91.jpg', alt: ''}]\nasync function connectServer(user_message) {\n    let payload = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: {'data': user_message}//JSON.stringify(data)}\n    };\n    // document.getElementById('random_change_p').innerHTML = base64data\n    var server_url = 'http://113.45.221.230:5000' //'http://172.17.69.175:5000' //'http://127.0.0.1:5000'\n    // var es2 = new EventSource(server_url)\n    // es2.onmessage = function (event) {\n    //\n    //\n    //\n    // }\n    var http = new XMLHttpRequest();\n    http.open('POST', server_url, true);\n    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded'); //\n    http.onreadystatechange = () => {//Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n            var http_response = JSON.parse(http.responseText);\n            console.log(http_response)\n            let tutor_message = http_response.data\n            var srq = \"\"\n            console.log(tutor_message.length)\n\n            for (var i = 0; i < tutor_message.length; i++) {\n                // sleep(1000)\n                if (tutor_message[i]['isGpt']) {\n                    tutor_message[i]['message'] = md.render(tutor_message[i].tutor_message)\n                    tutor_message[i]['message'] = tutor_message[i]['message'].replaceAll(\"<p>\", \"\").replaceAll(\"</p>\", \"\").replaceAll(\"<li>\\n\", \"<li>\").replaceAll(\"</li>\\n\", \"</li>\")\n\n                } else {\n                    tutor_message[i]['message'] = tutor_message[i].tutor_message\n                }\n\n                console.log(tutor_message[i]['message'])\n\n                updateMessage(tutor_message[i])\n                // Currently can only update images with the last non-empty imgs value\n                // console.log(tutor_message[i].imgs)\n                if (tutor_message[i].imgs.length !== 0) {\n                    updateUiImage(tutor_message[i].imgs)\n                    document.getElementById('post_title').innerHTML = tutor_message[i].post_title\n                    document.getElementById('post_body').innerHTML = tutor_message[i].post_body\n                    // console.log('HAHA')\n                }\n                // document.getElementById('performance').innerHTML = '(Correct) ' + tutor_message[i].correct + ' / ' + tutor_message[i].total + ' (Total)'\n                if (tutor_message[i].state == 'Query UI Component' || tutor_message[i].state == 'Query Visual Element') {\n                    console.log('set textarea')\n                    document.getElementById('textarea').disabled = false\n                    // document.getElementById('textarea_chatbot').disabled = false\n                } else {\n                    document.getElementById('textarea').disabled = false\n                    // document.getElementById('textarea_chatbot').disabled = false\n                }\n            }\n\n        }\n\n    }\n    //sending the data\n    http.send(encodeURIComponent(JSON.stringify({\n        'data': user_message,\n        'time': '11112'\n    })));\n    return true;\n}\n\n\nfunction App(props) {\n    const [chat, setChat, updateChat] = useGlobalState(\"chat\");\n    // const [chatbot, setbot, updatebot] = useGlobalState(\"chatbot\");\n    const [uiImage, setUiImage, updateUiImage] = useGlobalState(\"uiImage\");\n    var cur_message = chat.message_list[chat.message_list.length - 1]\n    // if(chatbot.chatbot_list){}\n    //     var cur_chat_message = chatbot.chatbot_list[chatbot.chatbot_list.length - 1]\n    var imgs = uiImage.imgs\n    // console.log(imgs)\n    var widthchange = \"\"\n    const colorsList = []\n\n    async function runflowtest(user_message, chat) {\n        await updateMessage(user_message);\n        await connectServer(user_message);\n        if (chat.message_list[chat.message_list.length - 1].query == \"\") {\n            flowtest(user_message.message, chat)\n        } else {\n            flowtest(chat.message_list[chat.message_list.length - 1].query, chat)\n        }\n\n    }\n\n    function flowtest(question, chat) {\n\n        var es = new EventSource(\"http://113.45.230.221:5000/chatgpt?question=\" + question)\n        var content = ''\n        es.onmessage = function (event) {\n            // console.log(\"QAAAAAAAAAAAAAAAAAAAAAAA\"+event.data)\n            console.log(event)\n            const data = event.data || ''\n            if (data == \"[DONE]\") {\n                content = content.replaceAll(\"<br>\", \"\\n\")\n                chat.message_list[chat.message_list.length - 1].message = md.render(content).replaceAll(\"<p>\", \"\").replaceAll(\"</p>\", \"\").replaceAll(\"<li>\\n\", \"<li>\").replaceAll(\"</li>\\n\", \"</li>\").replaceAll(\"<h3>\", \"\").replaceAll(\"</h3>\", \"\")\n                updateMessage(chat.message_list[chat.message_list.length - 1], true)\n                // var testBody = document.getElementById(\"test\")\n                // testBody.innerHT       ML = md.render(content).replaceAll(\"<p>\", \"\").replaceAll(\"</p>\", \"\").replaceAll(\"<li>\\n\", \"<li>\").replaceAll(\"</li>\\n\", \"</li>\").replaceAll(\"<h3>\", \"<b>\").replaceAll(\"</h3>\", \"</b>\")\n\n                es.close()\n            } else {\n                // console.log(data)\n                if (data != \"\" && data != \":\") {\n                    content += data\n                } else\n                    content = content + data + \"\\n\"\n                // chat.message_list.map((message,index)=>{\n                //     message.message += data\n                //     console.log(message.message)\n                //     }\n                // )\n                chat.message_list[chat.message_list.length - 1].message += data\n                updateMessage(chat.message_list[chat.message_list.length - 1], true)\n\n                // document.getElementById(\"test\").innerHTML = content\n                // console.log(document.getElementById(\"test\"))\n                //how to locate the message?\n            }\n        }\n    }\n\n\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div style={{width: \"50%\", margin: \"auto\"}}>\n            <div id='designtutor' style={{\n                float: \"left\",\n                position: \"absolute\",\n                height: \"96%\",\n                width: \"50%\",\n                padding: \"5px\",\n                borderStyle: \"solid\",\n                borderColor: \"#92a8d1\"\n            }}>\n                <div style={{position: \"relative\", height: \"94%\"}} id='chat_container'>\n                    <MainContainer>\n                        <MessageList id=\"main_container\">\n                            {/*{*/}\n                            {/*    chat.message_list.map((message, index) => (*/}\n                            {/*        <div>*/}\n                            {/*            {message.message}*/}\n                            {/*        </div>*/}\n                            {/*    ))*/}\n                            {/*}*/}\n\n                            {chat.message_list.map((message, index) => (\n\n                                <div>\n\n\n                                    {message.isImage ?\n                                        (<Message type=\"image\" model={message}/>)\n                                        :\n                                        (<Message model={message}/>)\n                                    }\n                                    {\n                                        cur_message.message == message.message ?\n                                            (\n                                                <div className=\"button_container\">\n                                                    {cur_message.options.map((option, index) => (\n\n                                                        (option == \"I need a hint.\" || option == \"Cool, but how?\" || option == \"No, I\\'ll try again.\" || option == \"I don\\'t know.\" || option == \"Next Question!\" || option == \"Got it. Let\\'s go!\" || option == \"Yes, answer please.\" || option == \"Why?\" || option == \"Wait, I got it right!\" || option == \"Wait, it\\'s not necessarily right!\" || option == \"I want to explore an UI element.\" || option == \"I want to explore a design element.\" || option == \"Need Hints\" || option == 'Move Forward' || option == 'sexual orientation') ?\n                                                            (\n                                                                <button className=\"other_response_button\"\n                                                                        onClick={() => {\n                                                                            // Should customize this message\n                                                                            let user_message = {\n                                                                                message: option,\n                                                                                tutor_message: cur_message.tutor_message,\n                                                                                correct_answer: cur_message.correct_answer,\n                                                                                user_id: cur_message.user_id,\n                                                                                imgs: cur_message.imgs,\n                                                                                post_id: cur_message.post_id,\n                                                                                explanation: cur_message.explanation,\n                                                                                cloze_test: cur_message.cloze_test,\n                                                                                multiple_choices: cur_message.multiple_choices,\n                                                                                mention_ui_elements: cur_message.mention_ui_elements,\n                                                                                wiki: cur_message.wiki,\n                                                                                isImage: false,\n                                                                                state: cur_message.state,\n                                                                                sender: \"user\",\n                                                                                options: [],\n                                                                                sentTime: \"just now\",\n                                                                                direction: \"outgoing\",\n                                                                                hint: cur_message.hint,\n                                                                                answer_cluster: cur_message.answer_cluster,\n                                                                                post_title: cur_message.post_title,\n                                                                                post_body: cur_message.post_body,\n                                                                                user_id: cur_message.user_id,\n                                                                                correct: cur_message.correct,\n                                                                                total: cur_message.total,\n                                                                                post_id: cur_message.post_id,\n                                                                                question_id: cur_message.question_id,\n                                                                                correct_answers: cur_message.correct_answers,\n                                                                                isGpt: false\n                                                                            }\n                                                                            console.log(user_message)\n                                                                            updateMessage(user_message)\n                                                                            connectServer(user_message)\n                                                                            console.log(option)\n\n                                                                        }}>\n                                                                    {option}\n                                                                </button>\n                                                            )\n                                                            :\n                                                            (\n                                                                <button className=\"response_button\" onClick={() => {\n                                                                    // Should customize this message\n                                                                    let user_message = {\n                                                                        message: option,\n                                                                        tutor_message: cur_message.tutor_message,\n                                                                        correct_answer: cur_message.correct_answer,\n                                                                        user_id: cur_message.user_id,\n                                                                        imgs: cur_message.imgs,\n                                                                        post_id: cur_message.post_id,\n                                                                        explanation: cur_message.explanation,\n                                                                        cloze_test: cur_message.cloze_test,\n                                                                        multiple_choices: cur_message.multiple_choices,\n                                                                        mention_ui_elements: cur_message.mention_ui_elements,\n                                                                        wiki: cur_message.wiki,\n                                                                        isImage: false,\n                                                                        state: cur_message.state,\n                                                                        sender: \"user\",\n                                                                        options: [],\n                                                                        sentTime: \"just now\",\n                                                                        direction: \"outgoing\",\n                                                                        hint: cur_message.hint,\n                                                                        answer_cluster: cur_message.answer_cluster,\n                                                                        post_title: cur_message.post_title,\n                                                                        post_body: cur_message.post_body,\n                                                                        user_id: cur_message.user_id,\n                                                                        correct: cur_message.correct,\n                                                                        total: cur_message.total,\n                                                                        post_id: cur_message.post_id,\n                                                                        question_id: cur_message.question_id,\n                                                                        correct_answers: cur_message.correct_answers,\n                                                                        isGpt: false,\n                                                                        query: cur_message.query\n                                                                    }\n                                                                    console.log(user_message)\n                                                                    if (user_message.message != \"I didn\\'t understand the post\") {\n                                                                        updateMessage(user_message)\n                                                                        connectServer(user_message)\n                                                                    } else if (user_message.message == \"I didn\\'t understand the post\") {\n                                                                        runflowtest(user_message, chat)\n                                                                    }\n\n\n                                                                    console.log(option)\n                                                                }}>\n                                                                    {option}<br/>\n                                                                </button>\n                                                            )\n\n                                                    ))}\n                                                </div>\n                                            ) :\n                                            (\n                                                <div className=\"button_container\">\n                                                    {message.options.map((option, index) => (\n                                                        <button className=\"response_button_old\" disabled={true}>\n                                                            {option}\n                                                        </button>\n                                                    ))}\n                                                </div>\n                                            )\n                                    }\n\n\n                                </div>\n\n                            ))}\n\n                            {/*<div id=\"test\"></div>*/}\n                        </MessageList>\n\n                    </MainContainer>\n\n                </div>\n\n                <div style={{height: \"5%\", width: \"100%\", marginTop: \"1%\"}}>\n                    {/* {\n            cur_message.options.length != 0 ? \n            (\n              <div className=\"button_container\">\n              {cur_message.options.map((option, index) => (\n                  <button className=\"response_button\" onClick={() => {\n                    // Should customize this message\n                    let user_message = { \n                      message: option,\n                      tutor_message: cur_message.tutor_message,\n                      correct_answer: cur_message.correct_answer,\n                      user_id: cur_message.user_id,\n                      imgs: cur_message.imgs,\n                      post_id: cur_message.post_id,\n                      explanation: cur_message.explanation,\n                      cloze_test: cur_message.cloze_test,\n                      multiple_choices: cur_message.multiple_choices,\n                      mention_ui_elements: cur_message.mention_ui_elements,\n                      wiki: cur_message.wiki,\n                      isImage: false,\n                      state: cur_message.state,\n                      sender: \"user\",\n                      options: [],\n                      sentTime: \"just now\",\n                      direction: \"outgoing\",\n                      hint: cur_message.hint,\n                      answer_cluster: cur_message.answer_cluster,\n                      post_title: cur_message.post_title,\n                      post_body: cur_message.post_body\n                    }\n                    console.log(user_message)\n                    updateMessage(user_message)\n                    connectServer(user_message) \n                    console.log(option)\n                  }}> \n                  {option}\n                  </button>\n                ))}\n              </div>\n            ): \n            (\n              null\n            )\n          } */}\n\n                    <div style={{position: \"relative\", display: \"inline\", alignItems: \"center\"}}>\n              <textarea\n                  style={{width: '85%', marginLeft: \"5px\", fontSize: \"16px\"}}\n                  id=\"textarea\"\n                  placeholder=\"Select a button or type your message if needed...\"\n                  autoFocus\n                  rows=\"2\"\n                  disabled=\"false\"\n                  // value={this.text}\n                  // onChange={event => {this.text = event.target.value; console.log(this.text)}}\n                  ref={node => {\n                      if (node) {\n                          node.focus();\n                      }\n                  }}\n                  onKeyDown={async (e) => {\n                      if (e.keyCode == 13 && e.shiftKey) {\n                          e.preventDefault();\n                          document.getElementById('textarea').value += \"\\n\";\n                      } else if (e.keyCode == 13) {\n                          e.preventDefault();\n                          let user_message = {\n                              message: document.getElementById('textarea').value,\n                              tutor_message: cur_message.tutor_message,\n                              correct_answer: cur_message.correct_answer,\n                              user_id: cur_message.user_id,\n                              imgs: cur_message.imgs,\n                              post_id: cur_message.post_id,\n                              cloze_test: cur_message.cloze_test,\n                              multiple_choices: cur_message.multiple_choices,\n                              mention_ui_elements: cur_message.mention_ui_elements,\n                              wiki: cur_message.wiki,\n                              isImage: false,\n                              //payload: {src: '', alt: '', width: ''},\n                              state: cur_message.state,\n                              sender: \"user\",\n                              options: [],\n                              sentTime: \"just now\",\n                              direction: \"outgoing\",\n                              hint: cur_message.hint,\n                              answer_cluster: cur_message.answer_cluster,\n                              post_title: cur_message.post_title,\n                              post_body: cur_message.post_body,\n                              user_id: cur_message.user_id,\n                              correct: cur_message.correct,\n                              total: cur_message.total,\n                              post_id: cur_message.post_id,\n                              question_id: cur_message.question_id,\n                              explanation: cur_message.explanation,\n                              correct_answers: cur_message.correct_answers,\n                              query: cur_message.query\n                          }\n\n                          if (user_message.state != 'ready to be asked' && user_message.state != \"Scenario-specific creativity Quiz\" && user_message.state != \"Scenario-specific creativity Quiz-A1 received\" && user_message!= \"Scenario-specific creativity Quiz-Answers received\") {\n                              runflowtest(user_message, chat)\n                          }\n                          else if (user_message.state == \"Scenario-specific creativity Quiz-Answers received\") {\n                              let query = chat.message_list[chat.message_list.length - 1].message + \"Q1 and Q2 is given by you. And the answers are provided by the users. You should evaluate the answers using the structure: positive feedback, suggestions, relevant cases, summray and guidance but don't show them in the answers.Please give the answers in the format of paragraph text\"\n                              runflowtest(user_message, chat)\n                          }\n                          else {\n                              updateMessage(user_message)\n                              connectServer(user_message)\n                          }\n                          document.getElementById('textarea').value = '';\n\n                          // // connect to Sketch plugin\n                          // window.send2webui('ss')\n                      }\n\n                  }}\n              />\n                        <button className=\"submitButton\" onClick={async () => {\n                            let user_message = {\n                                message: document.getElementById('textarea').value,\n                                tutor_message: cur_message.tutor_message,\n                                correct_answer: cur_message.correct_answer,\n                                user_id: cur_message.user_id,\n                                imgs: cur_message.imgs,\n                                post_id: cur_message.post_id,\n                                explanation: cur_message.explanation,\n                                cloze_test: cur_message.cloze_test,\n                                multiple_choices: cur_message.multiple_choices,\n                                mention_ui_elements: cur_message.mention_ui_elements,\n                                wiki: cur_message.wiki,\n                                isImage: false,\n                                //payload: {src: '', alt: '', width: ''},\n                                state: cur_message.state,\n                                sender: \"user\",\n                                options: [],\n                                sentTime: \"just now\",\n                                direction: \"outgoing\",\n                                hint: cur_message.hint,\n                                answer_cluster: cur_message.answer_cluster,\n                                post_title: cur_message.post_title,\n                                post_body: cur_message.post_body,\n                                user_id: cur_message.user_id,\n                                correct: cur_message.correct,\n                                total: cur_message.total,\n                                post_id: cur_message.post_id,\n                                question_id: cur_message.question_id,\n                                correct_answers: cur_message.correct_answers,\n                            }\n\n\n                            if (user_message.state != 'ready to be asked' && user_message.state != \"Scenario-specific creativity Quiz\" && user_message.state != \"Scenario-specific creativity Quiz-A1 received\" && user_message!= \"Scenario-specific creativity Quiz-Answers received\") {\n                              runflowtest(user_message, chat)\n                          }\n                          else if (user_message.state == \"Scenario-specific creativity Quiz-Answers received\") {\n                              let query = chat.message_list[chat.message_list.length - 1].message + \"Q1 and Q2 is given by you. And the answers are provided by the users. You should evaluate the answers using the structure: positive feedback, suggestions, relevant cases, summray and guidance but don't show them in the answers.Please give the answers in the format of paragraph text\"\n                              runflowtest(user_message, chat)\n                          }\n                          else {\n                              updateMessage(user_message)\n                              connectServer(user_message)\n                          }\n                            document.getElementById('textarea').value = '';\n\n                            // // connect to Sketch plugin\n                            // window.send2webui('ss')\n                        }}> Send\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div style={{\n                float: \"middle\",\n                position: \"relative\",\n                margin: \"auto\",\n                height: \"96%\",\n                // width: (cur_message.state == \"Topic Selection\" || cur_message.state == \"0\" || cur_message.state == \"Self Introduction\" || cur_message.state == \"Multiple-choice Quiz\") ? \"67%\" : \"50%\",\n                width: \"67%\",\n                padding: \"5px\"\n            }}>\n                {/*<div style={{position: \"relative\", width: \"100%\", padding: \"5px\"}}>*/}\n                {/*    <div*/}\n                {/*        style={{float: \"left\", position: \"relative\", width: \"48%\", padding: \"5px\", borderColor: \"red\"}}>*/}\n                {/*        <h3 id='post_title'>Post title here</h3>*/}\n                {/*        <p id='post_body'>The post body here</p>*/}\n                {/*        <p>GUI example (click to enlarge): </p>*/}\n                {/*    </div>*/}\n                {/*    <div style={{float: \"right\", position: \"relative\", width: \"38%\", padding: \"5px\"}}>*/}\n                {/*        <h3 id='progress_bar'>Your Quiz Result: </h3>*/}\n                {/*        <h4 id='performance'>(Correct) 0 / 0 (Total)</h4>*/}\n                {/*    </div>*/}\n                {/*    <div className=\"iframediv\"*/}\n                {/*         style={{float: \"right\", width: \"100%\", display: \"inline-block\", border: \"solid\"}}>*/}\n\n                {/*        <a style={{position: \"relative\", left: \"5%\", top: \"2%\"}}><b>This colomn is made for you better*/}\n                {/*            understanding examples and explanations!</b></a><br/>*/}\n                {/*        <div>*/}\n                {/*            /!*<a href=\"https://www.yangshipin.cn/2\" target=\"woc\"*!/*/}\n                {/*            /!*   style={{position: \"relative\", left: \"5%\", top: \"2%\"}}>Resources Test</a><a>&ensp;</a>*!/*/}\n                {/*            /!*<a href=\"https://www.yangshipin.cn/tv\" target=\"woc\"*!/*/}\n                {/*            /!*   style={{position: \"relative\", left: \"5%\", top: \"2%\"}}>Chatbot Test</a><br/>*!/*/}\n\n                {/*            /!*<a href=\"https://yiyan.baidu.com/?uid=1723102203382_850&traceid=\" target=\"woc\">*!/*/}\n                {/*            /!*    EXAMPLEEEEEE*!/*/}\n                {/*            /!*</a>*!/*/}\n                {/*        </div>*/}\n                {/*        <iframe name=\"woc\" frameBorder=\"0\" width=\"100%\" height=\"800px\"></iframe>*/}\n                {/*        <CozeChatComponent />*/}\n                {/*        /!*<div id='designtutor' style={{*!/*/}\n                {/*        /!*    float: \"right\",*!/*/}\n                {/*        /!*    position: \"relative\",*!/*/}\n                {/*        /!*    height: \"96%\",*!/*/}\n                {/*        /!*    width: (cur_message.state == \"Topic Selection\" || cur_message.state == \"0\" || cur_message.state == \"Self Introduction\" || cur_message.state == \"Multiple-choice Quiz\") ? \"67%\" : \"50%\",*!/*/}\n                {/*        /!*    padding: \"5px\",*!/*/}\n                {/*        /!*    borderStyle: \"solid\",*!/*/}\n                {/*        /!*    borderColor: \"#92a8d1\"*!/*/}\n                {/*        /!*}}>*!/*/}\n                {/*        /!*              <div style={{position: \"relative\", height: \"94%\"}} id='chatbot_container'>*!/*/}\n                {/*        /!*                      <MainContainer>*!/*/}\n                {/*        /!*                          <MessageList id=\"main_container_chatbot\">*!/*/}\n                {/*        /!*                              {chatbot.chatbot_list.map((message, index) => (*!/*/}\n\n                {/*        /!*                                  <div>*!/*/}\n                {/*        /!*                                      {message.isImage ?*!/*/}\n                {/*        /!*                                          (<Message type=\"image\" model={message}/>)*!/*/}\n                {/*        /!*                                          :*!/*/}\n                {/*        /!*                                          (<Message model={message}/>)*!/*/}\n                {/*        /!*                                      }*!/*/}\n                {/*        /!*                                      /!*{*!/*!/*/}\n                {/*        /!*                                      /!*    cur_chat_message.message == message.message ?*!/*!/*/}\n                {/*        /!*                                      /!*        (*!/*!/*/}\n                {/*        /!*                                      /!*            <div className=\"button_container\">*!/*!/*/}\n                {/*        /!*                                      /!*                {cur_message.options.map((option, index) => (*!/*!/*/}\n\n                {/*        /!*                                      /!*                    (option == \"I need a hint.\" || option == \"Cool, but how?\" || option == \"No, I\\'ll try again.\" || option == \"I don\\'t know.\" || option == \"Next Question!\" || option == \"Got it. Let\\'s go!\" || option == \"Yes, answer please.\" || option == \"Why?\" || option == \"Wait, I got it right!\" || option == \"Wait, it\\'s not necessarily right!\" || option == \"I want to explore an UI element.\" || option == \"I want to explore a design element.\" || option == \"Need Hints\" || option == 'Move Forward' || option == 'sexual orientation') ?*!/*!/*/}\n                {/*        /!*                                      /!*                        (*!/*!/*/}\n                {/*        /!*                                      /!*                            <button className=\"other_response_button\"*!/*!/*/}\n                {/*        /!*                                      /!*                                    onClick={() => {*!/*!/*/}\n                {/*        /!*                                      /!*                                        // Should customize this message*!/*!/*/}\n                {/*        /!*                                      /!*                                        let user_message = {*!/*!/*/}\n                {/*        /!*                                      /!*                                            message: option,*!/*!/*/}\n                {/*        /!*                                      /!*                                            tutor_message: cur_message.tutor_message,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct_answer: cur_message.correct_answer,*!/*!/*/}\n                {/*        /!*                                      /!*                                            user_id: cur_message.user_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            imgs: cur_message.imgs,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_id: cur_message.post_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            explanation: cur_message.explanation,*!/*!/*/}\n                {/*        /!*                                      /!*                                            cloze_test: cur_message.cloze_test,*!/*!/*/}\n                {/*        /!*                                      /!*                                            multiple_choices: cur_message.multiple_choices,*!/*!/*/}\n                {/*        /!*                                      /!*                                            mention_ui_elements: cur_message.mention_ui_elements,*!/*!/*/}\n                {/*        /!*                                      /!*                                            wiki: cur_message.wiki,*!/*!/*/}\n                {/*        /!*                                      /!*                                            isImage: false,*!/*!/*/}\n                {/*        /!*                                      /!*                                            state: cur_message.state,*!/*!/*/}\n                {/*        /!*                                      /!*                                            sender: \"user\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            options: [],*!/*!/*/}\n                {/*        /!*                                      /!*                                            sentTime: \"just now\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            direction: \"outgoing\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            hint: cur_message.hint,*!/*!/*/}\n                {/*        /!*                                      /!*                                            answer_cluster: cur_message.answer_cluster,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_title: cur_message.post_title,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_body: cur_message.post_body,*!/*!/*/}\n                {/*        /!*                                      /!*                                            user_id: cur_message.user_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct: cur_message.correct,*!/*!/*/}\n                {/*        /!*                                      /!*                                            total: cur_message.total,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_id: cur_message.post_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            question_id: cur_message.question_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct_answers: cur_message.correct_answers,*!/*!/*/}\n                {/*        /!*                                      /!*                                        }*!/*!/*/}\n                {/*        /!*                                      /!*                                        console.log(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        updateMessage(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        connectServer(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        console.log(option)*!/*!/*/}\n                {/*        /!*                                      /!*                                    }}>*!/*!/*/}\n                {/*        /!*                                      /!*                                {option}*!/*!/*/}\n                {/*        /!*                                      /!*                            </button>*!/*!/*/}\n                {/*        /!*                                      /!*                        )*!/*!/*/}\n                {/*        /!*                                      /!*                        :*!/*!/*/}\n                {/*        /!*                                      /!*                        (*!/*!/*/}\n                {/*        /!*                                      /!*                            <button className=\"response_button\"*!/*!/*/}\n                {/*        /!*                                      /!*                                    onClick={() => {*!/*!/*/}\n                {/*        /!*                                      /!*                                        // Should customize this message*!/*!/*/}\n                {/*        /!*                                      /!*                                        let user_message = {*!/*!/*/}\n                {/*        /!*                                      /!*                                            message: option,*!/*!/*/}\n                {/*        /!*                                      /!*                                            tutor_message: cur_message.tutor_message,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct_answer: cur_message.correct_answer,*!/*!/*/}\n                {/*        /!*                                      /!*                                            user_id: cur_message.user_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            imgs: cur_message.imgs,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_id: cur_message.post_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            explanation: cur_message.explanation,*!/*!/*/}\n                {/*        /!*                                      /!*                                            cloze_test: cur_message.cloze_test,*!/*!/*/}\n                {/*        /!*                                      /!*                                            multiple_choices: cur_message.multiple_choices,*!/*!/*/}\n                {/*        /!*                                      /!*                                            mention_ui_elements: cur_message.mention_ui_elements,*!/*!/*/}\n                {/*        /!*                                      /!*                                            wiki: cur_message.wiki,*!/*!/*/}\n                {/*        /!*                                      /!*                                            isImage: false,*!/*!/*/}\n                {/*        /!*                                      /!*                                            state: cur_message.state,*!/*!/*/}\n                {/*        /!*                                      /!*                                            sender: \"user\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            options: [],*!/*!/*/}\n                {/*        /!*                                      /!*                                            sentTime: \"just now\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            direction: \"outgoing\",*!/*!/*/}\n                {/*        /!*                                      /!*                                            hint: cur_message.hint,*!/*!/*/}\n                {/*        /!*                                      /!*                                            answer_cluster: cur_message.answer_cluster,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_title: cur_message.post_title,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_body: cur_message.post_body,*!/*!/*/}\n                {/*        /!*                                      /!*                                            user_id: cur_message.user_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct: cur_message.correct,*!/*!/*/}\n                {/*        /!*                                      /!*                                            total: cur_message.total,*!/*!/*/}\n                {/*        /!*                                      /!*                                            post_id: cur_message.post_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            question_id: cur_message.question_id,*!/*!/*/}\n                {/*        /!*                                      /!*                                            correct_answers: cur_message.correct_answers,*!/*!/*/}\n                {/*        /!*                                      /!*                                        }*!/*!/*/}\n                {/*        /!*                                      /!*                                        console.log(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        updateMessage(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        connectServer(user_message)*!/*!/*/}\n                {/*        /!*                                      /!*                                        console.log(option)*!/*!/*/}\n                {/*        /!*                                      /!*                                    }}>*!/*!/*/}\n                {/*        /!*                                      /!*                                {option}<br/>*!/*!/*/}\n                {/*        /!*                                      /!*                            </button>*!/*!/*/}\n                {/*        /!*                                      /!*                        )*!/*!/*/}\n\n                {/*        /!*                                      /!*                ))}*!/*!/*/}\n                {/*        /!*                                      /!*            </div>*!/*!/*/}\n                {/*        /!*                                      /!*        ) :*!/*!/*/}\n                {/*        /!*                                      /!*        (*!/*!/*/}\n                {/*        /!*                                      /!*            <div className=\"button_container\">*!/*!/*/}\n                {/*        /!*                                      /!*                {message.options.map((option, index) => (*!/*!/*/}\n                {/*        /!*                                      /!*                    <button className=\"response_button_old\"*!/*!/*/}\n                {/*        /!*                                      /!*                            disabled={true}>*!/*!/*/}\n                {/*        /!*                                      /!*                        {option}*!/*!/*/}\n                {/*        /!*                                      /!*                    </button>*!/*!/*/}\n                {/*        /!*                                      /!*                ))}*!/*!/*/}\n                {/*        /!*                                      /!*            </div>*!/*!/*/}\n                {/*        /!*                                      /!*        )*!/*!/*/}\n                {/*        /!*                                      /!*}*!/*!/*/}\n                {/*        /!*                                  </div>*!/*/}\n\n                {/*        /!*                              ))}*!/*/}\n\n                {/*        /!*                          </MessageList>*!/*/}\n                {/*        /!*                      </MainContainer>*!/*/}\n                {/*        /!*                  </div>*!/*/}\n\n                {/*        /!*              <div style={{height: \"5%\", width: \"100%\", marginTop: \"1%\"}}>*!/*/}\n                {/*        /!*                      /!* {*!/*/}\n                {/*        /!*  cur_message.options.length != 0 ?*!/*/}\n                {/*        /!*  (*!/*/}\n                {/*        /!*    <div className=\"button_container\">*!/*/}\n                {/*        /!*    {cur_message.options.map((option, index) => (*!/*/}\n                {/*        /!*        <button className=\"response_button\" onClick={() => {*!/*/}\n                {/*        /!*          // Should customize this message*!/*/}\n                {/*        /!*          let user_message = {*!/*/}\n                {/*        /!*            message: option,*!/*/}\n                {/*        /!*            tutor_message: cur_message.tutor_message,*!/*/}\n                {/*        /!*            correct_answer: cur_message.correct_answer,*!/*/}\n                {/*        /!*            user_id: cur_message.user_id,*!/*/}\n                {/*        /!*            imgs: cur_message.imgs,*!/*/}\n                {/*        /!*            post_id: cur_message.post_id,*!/*/}\n                {/*        /!*            explanation: cur_message.explanation,*!/*/}\n                {/*        /!*            cloze_test: cur_message.cloze_test,*!/*/}\n                {/*        /!*            multiple_choices: cur_message.multiple_choices,*!/*/}\n                {/*        /!*            mention_ui_elements: cur_message.mention_ui_elements,*!/*/}\n                {/*        /!*            wiki: cur_message.wiki,*!/*/}\n                {/*        /!*            isImage: false,*!/*/}\n                {/*        /!*            state: cur_message.state,*!/*/}\n                {/*        /!*            sender: \"user\",*!/*/}\n                {/*        /!*            options: [],*!/*/}\n                {/*        /!*            sentTime: \"just now\",*!/*/}\n                {/*        /!*            direction: \"outgoing\",*!/*/}\n                {/*        /!*            hint: cur_message.hint,*!/*/}\n                {/*        /!*            answer_cluster: cur_message.answer_cluster,*!/*/}\n                {/*        /!*            post_title: cur_message.post_title,*!/*/}\n                {/*        /!*            post_body: cur_message.post_body*!/*/}\n                {/*        /!*          }*!/*/}\n                {/*        /!*          console.log(user_message)*!/*/}\n                {/*        /!*          updateMessage(user_message)*!/*/}\n                {/*        /!*          connectServer(user_message)*!/*/}\n                {/*        /!*          console.log(option)*!/*/}\n                {/*        /!*        }}>*!/*/}\n                {/*        /!*        {option}*!/*/}\n                {/*        /!*        </button>*!/*/}\n                {/*        /!*      ))}*!/*/}\n                {/*        /!*    </div>*!/*/}\n                {/*        /!*  ):*!/*/}\n                {/*        /!*  (*!/*/}\n                {/*        /!*    null*!/*/}\n                {/*        /!*  )*!/*/}\n                {/*        /!*} *!/*!/*/}\n\n                {/*        /!*                      <div style={{position: \"relative\", display: \"inline\", alignItems: \"center\"}}>*!/*/}\n                {/*        /!*    <textarea*!/*/}\n                {/*        /!*        style={{width: '85%', marginLeft: \"5px\", fontSize: \"16px\"}}*!/*/}\n                {/*        /!*        id=\"textarea_chatbot\"*!/*/}\n                {/*        /!*        placeholder=\"Select a button or type your message if needed...\"*!/*/}\n                {/*        /!*        autoFocus*!/*/}\n                {/*        /!*        rows=\"2\"*!/*/}\n                {/*        /!*        disabled=\"false\"*!/*/}\n                {/*        /!*        // value={this.text}*!/*/}\n                {/*        /!*        // onChange={event => {this.text = event.target.value; console.log(this.text)}}*!/*/}\n                {/*        /!*        ref={node => {*!/*/}\n                {/*        /!*            if (node) {*!/*/}\n                {/*        /!*                node.focus();*!/*/}\n                {/*        /!*            }*!/*/}\n                {/*        /!*        }}*!/*/}\n                {/*        /!*    />*!/*/}\n                {/*        /!*                          <button className=\"submitButton\" onClick={() => {*!/*/}\n                {/*        /!*                              let user_message = {*!/*/}\n                {/*        /!*                                  message: document.getElementById('textarea_chatbot').value,*!/*/}\n                {/*        /!*                                  tutor_message: cur_message.tutor_message,*!/*/}\n                {/*        /!*                                  correct_answer: cur_message.correct_answer,*!/*/}\n                {/*        /!*                                  user_id: cur_message.user_id,*!/*/}\n                {/*        /!*                                  imgs: cur_message.imgs,*!/*/}\n                {/*        /!*                                  post_id: cur_message.post_id,*!/*/}\n                {/*        /!*                                  explanation: cur_message.explanation,*!/*/}\n                {/*        /!*                                  cloze_test: cur_message.cloze_test,*!/*/}\n                {/*        /!*                                  multiple_choices: cur_message.multiple_choices,*!/*/}\n                {/*        /!*                                  mention_ui_elements: cur_message.mention_ui_elements,*!/*/}\n                {/*        /!*                                  wiki: cur_message.wiki,*!/*/}\n                {/*        /!*                                  isImage: false,*!/*/}\n                {/*        /!*                                  //payload: {src: '', alt: '', width: ''},*!/*/}\n                {/*        /!*                                  state: cur_message.state,*!/*/}\n                {/*        /!*                                  sender: \"user\",*!/*/}\n                {/*        /!*                                  options: [],*!/*/}\n                {/*        /!*                                  sentTime: \"just now\",*!/*/}\n                {/*        /!*                                  direction: \"outgoing\",*!/*/}\n                {/*        /!*                                  hint: cur_message.hint,*!/*/}\n                {/*        /!*                                  answer_cluster: cur_message.answer_cluster,*!/*/}\n                {/*        /!*                                  post_title: cur_message.post_title,*!/*/}\n                {/*        /!*                                  post_body: cur_message.post_body,*!/*/}\n                {/*        /!*                                  user_id: cur_message.user_id,*!/*/}\n                {/*        /!*                                  correct: cur_message.correct,*!/*/}\n                {/*        /!*                                  total: cur_message.total,*!/*/}\n                {/*        /!*                                  post_id: cur_message.post_id,*!/*/}\n                {/*        /!*                                  question_id: cur_message.question_id,*!/*/}\n                {/*        /!*                                  correct_answers: cur_message.correct_answers,*!/*/}\n                {/*        /!*                              }*!/*/}\n                {/*        /!*                              let chatbot_message= {*!/*/}\n                {/*        /!*                                  message:document.getElementById('textarea_chatbot')*!/*/}\n                {/*        /!*                              }*!/*/}\n\n                {/*        /!*                              updateMessage(chatbot_message)*!/*/}\n                {/*        /!*                              connectServer(chatbot_message)*!/*/}\n                {/*        /!*                              document.getElementById('textarea').value = '';*!/*/}\n\n                {/*        /!*                              // // connect to Sketch plugin*!/*/}\n                {/*        /!*                              // window.send2webui('ss')*!/*/}\n                {/*        /!*                          }}> Send*!/*/}\n                {/*        /!*                          </button>*!/*/}\n                {/*        /!*                      </div>*!/*/}\n                {/*        /!*                  </div>*!/*/}\n                {/*        /!*              /!*</div>*!/*!/*/}\n                {/*    </div>*/}\n\n\n                {/*</div>*/}\n\n                <div className='example_button'>\n                    <Viewer\n                        visible={visible}\n                        onClose={() => {\n                            setVisible(false);\n                        }}\n                        images={imgs}\n                        // images={[{src: 'https://i.redd.it/w8waenbekhe91.jpg', alt: ''}]}\n                    />\n                </div>\n\n                {/*<button className='example_button' onClick={() => {*/}\n                {/*    setVisible(true)*/}\n                {/*    console.log('enlarge UI example')*/}\n                {/*}}>*/}\n                {/*    <img id='ui_example' src={imgs[0].src}*/}\n                {/*         style={{maxWidth: \"100%\", maxHeight: \"100%\", margin: \"auto\", top: \"50%\", left: \"50%\"}}/>*/}\n                {/*</button>*/}\n\n            </div>\n\n            {/*  <div id='designtutor' style={{*/}\n            {/*      float: \"right\",*/}\n            {/*      position: \"absolute\",*/}\n            {/*      height: \"96%\",*/}\n            {/*      width: \"40%\",*/}\n            {/*      padding: \"5px\",*/}\n            {/*      borderStyle: \"solid\",*/}\n            {/*      borderColor: \"#92a8d1\"*/}\n            {/*  }}>*/}\n            {/*      <div style={{position: \"relative\", height: \"94%\"}} id='chat_container'>*/}\n            {/*          <MainContainer>*/}\n            {/*              <MessageList id=\"main_container\">*/}\n            {/*                  {chat.message_list.map((message, index) => (*/}\n\n            {/*                      <div>*/}\n            {/*                          {message.isImage ?*/}\n            {/*                              (<Message type=\"image\" model={message}/>)*/}\n            {/*                              :*/}\n            {/*                              (<Message model={message}/>)*/}\n            {/*                          }*/}\n            {/*                          {*/}\n            {/*                              cur_message.message == message.message ?*/}\n            {/*                                  (*/}\n            {/*                                      <div className=\"button_container\">*/}\n            {/*                                          {cur_message.options.map((option, index) => (*/}\n\n            {/*                                              (option == \"I need a hint.\" || option == \"Cool, but how?\" || option == \"No, I\\'ll try again.\" || option == \"I don\\'t know.\" || option == \"Next Question!\" || option == \"Got it. Let\\'s go!\" || option == \"Yes, answer please.\" || option == \"Why?\" || option == \"Wait, I got it right!\" || option == \"Wait, it\\'s not necessarily right!\" || option == \"I want to explore an UI element.\" || option == \"I want to explore a design element.\" || option == \"Need Hints\" || option == 'Move Forward' || option == 'sexual orientation') ?*/}\n            {/*                                                  (*/}\n            {/*                                                      <button className=\"other_response_button\"*/}\n            {/*                                                              onClick={() => {*/}\n            {/*                                                                  // Should customize this message*/}\n            {/*                                                                  let user_message = {*/}\n            {/*                                                                      message: option,*/}\n            {/*                                                                      tutor_message: cur_message.tutor_message,*/}\n            {/*                                                                      correct_answer: cur_message.correct_answer,*/}\n            {/*                                                                      user_id: cur_message.user_id,*/}\n            {/*                                                                      imgs: cur_message.imgs,*/}\n            {/*                                                                      post_id: cur_message.post_id,*/}\n            {/*                                                                      explanation: cur_message.explanation,*/}\n            {/*                                                                      cloze_test: cur_message.cloze_test,*/}\n            {/*                                                                      multiple_choices: cur_message.multiple_choices,*/}\n            {/*                                                                      mention_ui_elements: cur_message.mention_ui_elements,*/}\n            {/*                                                                      wiki: cur_message.wiki,*/}\n            {/*                                                                      isImage: false,*/}\n            {/*                                                                      state: cur_message.state,*/}\n            {/*                                                                      sender: \"user\",*/}\n            {/*                                                                      options: [],*/}\n            {/*                                                                      sentTime: \"just now\",*/}\n            {/*                                                                      direction: \"outgoing\",*/}\n            {/*                                                                      hint: cur_message.hint,*/}\n            {/*                                                                      answer_cluster: cur_message.answer_cluster,*/}\n            {/*                                                                      post_title: cur_message.post_title,*/}\n            {/*                                                                      post_body: cur_message.post_body,*/}\n            {/*                                                                      user_id: cur_message.user_id,*/}\n            {/*                                                                      correct: cur_message.correct,*/}\n            {/*                                                                      total: cur_message.total,*/}\n            {/*                                                                      post_id: cur_message.post_id,*/}\n            {/*                                                                      question_id: cur_message.question_id,*/}\n            {/*                                                                      correct_answers: cur_message.correct_answers,*/}\n            {/*                                                                  }*/}\n            {/*                                                                  console.log(user_message)*/}\n            {/*                                                                  updateMessage(user_message)*/}\n            {/*                                                                  connectServer(user_message)*/}\n            {/*                                                                  console.log(option)*/}\n            {/*                                                              }}>*/}\n            {/*                                                          {option}*/}\n            {/*                                                      </button>*/}\n            {/*                                                  )*/}\n            {/*                                                  :*/}\n            {/*                                                  (*/}\n            {/*                                                      <button className=\"response_button\" onClick={() => {*/}\n            {/*                                                          // Should customize this message*/}\n            {/*                                                          let user_message = {*/}\n            {/*                                                              message: option,*/}\n            {/*                                                              tutor_message: cur_message.tutor_message,*/}\n            {/*                                                              correct_answer: cur_message.correct_answer,*/}\n            {/*                                                              user_id: cur_message.user_id,*/}\n            {/*                                                              imgs: cur_message.imgs,*/}\n            {/*                                                              post_id: cur_message.post_id,*/}\n            {/*                                                              explanation: cur_message.explanation,*/}\n            {/*                                                              cloze_test: cur_message.cloze_test,*/}\n            {/*                                                              multiple_choices: cur_message.multiple_choices,*/}\n            {/*                                                              mention_ui_elements: cur_message.mention_ui_elements,*/}\n            {/*                                                              wiki: cur_message.wiki,*/}\n            {/*                                                              isImage: false,*/}\n            {/*                                                              state: cur_message.state,*/}\n            {/*                                                              sender: \"user\",*/}\n            {/*                                                              options: [],*/}\n            {/*                                                              sentTime: \"just now\",*/}\n            {/*                                                              direction: \"outgoing\",*/}\n            {/*                                                              hint: cur_message.hint,*/}\n            {/*                                                              answer_cluster: cur_message.answer_cluster,*/}\n            {/*                                                              post_title: cur_message.post_title,*/}\n            {/*                                                              post_body: cur_message.post_body,*/}\n            {/*                                                              user_id: cur_message.user_id,*/}\n            {/*                                                              correct: cur_message.correct,*/}\n            {/*                                                              total: cur_message.total,*/}\n            {/*                                                              post_id: cur_message.post_id,*/}\n            {/*                                                              question_id: cur_message.question_id,*/}\n            {/*                                                              correct_answers: cur_message.correct_answers,*/}\n            {/*                                                          }*/}\n            {/*                                                          console.log(user_message)*/}\n            {/*                                                          updateMessage(user_message)*/}\n            {/*                                                          connectServer(user_message)*/}\n            {/*                                                          console.log(option)*/}\n            {/*                                                      }}>*/}\n            {/*                                                          {option}<br/>*/}\n            {/*                                                      </button>*/}\n            {/*                                                  )*/}\n\n            {/*                                          ))}*/}\n            {/*                                      </div>*/}\n            {/*                                  ) :*/}\n            {/*                                  (*/}\n            {/*                                      <div className=\"button_container\">*/}\n            {/*                                          {message.options.map((option, index) => (*/}\n            {/*                                              <button className=\"response_button_old\" disabled={true}>*/}\n            {/*                                                  {option}*/}\n            {/*                                              </button>*/}\n            {/*                                          ))}*/}\n            {/*                                      </div>*/}\n            {/*                                  )*/}\n            {/*                          }*/}\n            {/*                      </div>*/}\n\n            {/*                  ))}*/}\n\n            {/*              </MessageList>*/}\n            {/*          </MainContainer>*/}\n            {/*      </div>*/}\n\n            {/*      <div style={{height: \"9 5%\", width: \"100%\", marginTop: \"1%\"}}>*/}\n            {/*          /!* {*/}\n            {/*  cur_message.options.length != 0 ?*/}\n            {/*  (*/}\n            {/*    <div className=\"button_container\">*/}\n            {/*    {cur_message.options.map((option, index) => (*/}\n            {/*        <button className=\"response_button\" onClick={() => {*/}\n            {/*          // Should customize this message*/}\n            {/*          let user_message = {*/}\n            {/*            message: option,*/}\n            {/*            tutor_message: cur_message.tutor_message,*/}\n            {/*            correct_answer: cur_message.correct_answer,*/}\n            {/*            user_id: cur_message.user_id,*/}\n            {/*            imgs: cur_message.imgs,*/}\n            {/*            post_id: cur_message.post_id,*/}\n            {/*            explanation: cur_message.explanation,*/}\n            {/*            cloze_test: cur_message.cloze_test,*/}\n            {/*            multiple_choices: cur_message.multiple_choices,*/}\n            {/*            mention_ui_elements: cur_message.mention_ui_elements,*/}\n            {/*            wiki: cur_message.wiki,*/}\n            {/*            isImage: false,*/}\n            {/*            state: cur_message.state,*/}\n            {/*            sender: \"user\",*/}\n            {/*            options: [],*/}\n            {/*            sentTime: \"just now\",*/}\n            {/*            direction: \"outgoing\",*/}\n            {/*            hint: cur_message.hint,*/}\n            {/*            answer_cluster: cur_message.answer_cluster,*/}\n            {/*            post_title: cur_message.post_title,*/}\n            {/*            post_body: cur_message.post_body*/}\n            {/*          }*/}\n            {/*          console.log(user_message)*/}\n            {/*          updateMessage(user_message)*/}\n            {/*          connectServer(user_message)*/}\n            {/*          console.log(option)*/}\n            {/*        }}>*/}\n            {/*        {option}*/}\n            {/*        </button>*/}\n            {/*      ))}*/}\n            {/*    </div>*/}\n            {/*  ):*/}\n            {/*  (*/}\n            {/*    null*/}\n            {/*  )*/}\n            {/*} *!/*/}\n\n            {/*          <div style={{position: \"relative\", display: \"inline\", alignItems: \"center\"}}>*/}\n            {/*    <textarea*/}\n            {/*        style={{width: '85%', marginLeft: \"5px\", fontSize: \"16px\"}}*/}\n            {/*        id=\"textarea\"*/}\n            {/*        placeholder=\"Select a button or type your message if needed...\"*/}\n            {/*        autoFocus*/}\n            {/*        rows=\"2\"*/}\n            {/*        disabled=\"false\"*/}\n            {/*        // value={this.text}*/}\n            {/*        // onChange={event => {this.text = event.target.value; console.log(this.text)}}*/}\n            {/*        ref={node => {*/}\n            {/*            if (node) {*/}\n            {/*                node.focus();*/}\n            {/*            }*/}\n            {/*        }}*/}\n            {/*    />*/}\n            {/*              <button className=\"submitButton\" onClick={() => {*/}\n            {/*                  let user_message = {*/}\n            {/*                      message: document.getElementById('textarea').value,*/}\n            {/*                      tutor_message: cur_message.tutor_message,*/}\n            {/*                      correct_answer: cur_message.correct_answer,*/}\n            {/*                      user_id: cur_message.user_id,*/}\n            {/*                      imgs: cur_message.imgs,*/}\n            {/*                      post_id: cur_message.post_id,*/}\n            {/*                      explanation: cur_message.explanation,*/}\n            {/*                      cloze_test: cur_message.cloze_test,*/}\n            {/*                      multiple_choices: cur_message.multiple_choices,*/}\n            {/*                      mention_ui_elements: cur_message.mention_ui_elements,*/}\n            {/*                      wiki: cur_message.wiki,*/}\n            {/*                      isImage: false,*/}\n            {/*                      //payload: {src: '', alt: '', width: ''},*/}\n            {/*                      state: cur_message.state,*/}\n            {/*                      sender: \"user\",*/}\n            {/*                      options: [],*/}\n            {/*                      sentTime: \"just now\",*/}\n            {/*                      direction: \"outgoing\",*/}\n            {/*                      hint: cur_message.hint,*/}\n            {/*                      answer_cluster: cur_message.answer_cluster,*/}\n            {/*                      post_title: cur_message.post_title,*/}\n            {/*                      post_body: cur_message.post_body,*/}\n            {/*                      user_id: cur_message.user_id,*/}\n            {/*                      correct: cur_message.correct,*/}\n            {/*                      total: cur_message.total,*/}\n            {/*                      post_id: cur_message.post_id,*/}\n            {/*                      question_id: cur_message.question_id,*/}\n            {/*                      correct_answers: cur_message.correct_answers,*/}\n            {/*                  }*/}\n            {/*                  updateMessage(user_message)*/}\n            {/*                  connectServer(user_message)*/}\n            {/*                  document.getElementById('textarea').value = '';*/}\n\n            {/*                  // // connect to Sketch plugin*/}\n            {/*                  // window.send2webui('ss')*/}\n            {/*              }}> Send*/}\n            {/*              </button>*/}\n            {/*          </div>*/}\n            {/*      </div>*/}\n\n            {/*  </div>*/}\n        </div>\n\n    )\n    // const client=new CozeWebSDK.WebChatClient({ config: { bot_id: '7400725791468273670', }, componentProps: { title: 'Coze', }, });\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const myelement = (\n//   <table>\n//     <tr>\n//       <th>Name</th>\n//     </tr>\n//     <tr>\n//       <td>John</td>\n//     </tr>\n//     <tr>\n//       <td>Elsa</td>\n//     </tr>\n//   </table>\n// );\n\n// ReactDOM.render(myelement, document.getElementById('root'));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import ChatUiKitReact from '../node_modules/@chatscope/chat-ui-kit-react/dist/chat-ui-kit-react.min.js'\n// const app = document.getElementById(\"app\");\n  \n// const ck = ChatUiKitReact;\n\n// const Messages = [\n//   React.createElement(ck.MessageSeparator, { key: \"separator1\", content: \"Saturday, 30 November 2019\" }),\n//   React.createElement(ck.Message, { key: \"msg1\", model: { message: \"Hi\", sender: \"Akane\", sentTime: \"10:00\" } })\n// ];\n\n// const ChatContainer = React.createElement(ck.ChatContainer,{}, [\n//   React.createElement(ck.ConversationHeader, { key: \"conversation-header\"}, [\n//     React.createElement(ck.ConversationHeader.Back, { key: \"back\" }),\n//     React.createElement(ck.ConversationHeader.Content, { key: \"content\", userName: \"Emily\", info: \"Active 10 mins ago\" })\n//   ]),\n//   React.createElement(ck.MessageList, { key: \"message-list\" }, Messages),\n//   React.createElement(ck.MessageInput, { key:\"message-input\", placeholder: \"Type message here\"} )\n// ]);\n\n// const Main = React.createElement(\"div\", { style: { position: \"relative\", height:\"500px\" } }, ChatContainer );\n\n// ReactDOM.render(Main, app);"],"sourceRoot":""}